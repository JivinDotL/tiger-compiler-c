cscope 15 $HOME/compilerlab               0000334446
	@absyn.c

6 
	~"utû.h
"

7 
	~"symbﬁ.h
"

8 
	~"absyn.h
"

9 
	~<°dlib.h
>

10 
	~<°dio.h
>

11 
A_v¨
 
	$A_Sim∂eV¨
(
A_pos
 
pos
, 
S_symbﬁ
 
sym
)

12 {
A_v¨
 
p
 = 
	`checked_mÆloc
((*p));

13 
p
->
köd
=
A_sim∂eV¨
;

14 
p
->
pos
=pos;

15 
p
->
u
.
sim∂e
=
sym
;

16  
p
;

17 
	}
}

19 
A_v¨
 
	$A_FõldV¨
(
A_pos
 
pos
, 
A_v¨
 
v¨
, 
S_symbﬁ
 
sym
)

20 {
A_v¨
 
p
 = 
	`checked_mÆloc
((*p));

21 
p
->
köd
=
A_fõldV¨
;

22 
p
->
pos
=pos;

23 
p
->
u
.
fõld
.
v¨
=var;

24 
p
->
u
.
fõld
.
sym
=sym;

25  
p
;

26 
	}
}

28 
A_v¨
 
	$A_Subs¸ùtV¨
(
A_pos
 
pos
, 
A_v¨
 
v¨
, 
A_exp
 
exp
)

29 {
A_v¨
 
p
 = 
	`checked_mÆloc
((*p));

30 
p
->
köd
=
A_subs¸ùtV¨
;

31 
p
->
pos
=pos;

32 
p
->
u
.
subs¸ùt
.
v¨
=var;

33 
p
->
u
.
subs¸ùt
.
exp
=exp;

34  
p
;

35 
	}
}

38 
A_exp
 
	$A_V¨Exp
(
A_pos
 
pos
, 
A_v¨
 
v¨
)

39 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

40 
p
->
köd
=
A_v¨Exp
;

41 
p
->
pos
=pos;

42 
p
->
u
.
v¨
=var;

43  
p
;

44 
	}
}

46 
A_exp
 
	$A_NûExp
(
A_pos
 
pos
)

47 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

48 
p
->
köd
=
A_nûExp
;

49 
p
->
pos
=pos;

50  
p
;

51 
	}
}

53 
A_exp
 
	$A_I¡Exp
(
A_pos
 
pos
, 
i
)

54 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

55 
p
->
köd
=
A_ötExp
;

56 
p
->
pos
=pos;

57 
p
->
u
.
öâ
=
i
;

58  
p
;

59 
	}
}

61 
A_exp
 
	$A_SåögExp
(
A_pos
 
pos
, 
°rög
 
s
)

63 
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

64 
p
->
köd
=
A_°rögExp
;

65 
p
->
pos
=pos;

66 
p
->
u
.
°rögg
=
s
;

67  
p
;

68 
	}
}

70 
A_exp
 
	$A_CÆlExp
(
A_pos
 
pos
, 
S_symbﬁ
 
func
, 
A_expLi°
 
¨gs
)

71 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

72 
p
->
köd
=
A_ˇŒExp
;

73 
p
->
pos
=pos;

74 
p
->
u
.
ˇŒ
.
func
=func;

75 
p
->
u
.
ˇŒ
.
¨gs
=args;

76  
p
;

77 
	}
}

79 
A_exp
 
	$A_OpExp
(
A_pos
 
pos
, 
A_›î
 
›î
, 
A_exp
 
À·
, A_ex∞
right
)

80 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

81 
p
->
köd
=
A_›Exp
;

82 
p
->
pos
=pos;

83 
p
->
u
.
›
.
›î
=oper;

84 
p
->
u
.
›
.
À·
=left;

85 
p
->
u
.
›
.
right
=right;

86  
p
;

87 
	}
}

89 
A_exp
 
	$A_Rec‹dExp
(
A_pos
 
pos
, 
S_symbﬁ
 
typ
, 
A_efõldLi°
 
fõlds
)

90 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

91 
p
->
köd
=
A_ªc‹dExp
;

92 
p
->
pos
=pos;

93 
p
->
u
.
ªc‹d
.
typ
=typ;

94 
p
->
u
.
ªc‹d
.
fõlds
=fields;

95  
p
;

96 
	}
}

98 
A_exp
 
	$A_SeqExp
(
A_pos
 
pos
, 
A_expLi°
 
£q
)

99 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

100 
p
->
köd
=
A_£qExp
;

101 
p
->
pos
=pos;

102 
p
->
u
.
£q
=seq;

103  
p
;

104 
	}
}

106 
A_exp
 
	$A_AssignExp
(
A_pos
 
pos
, 
A_v¨
 
v¨
, 
A_exp
 
exp
)

107 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

108 
p
->
köd
=
A_assignExp
;

109 
p
->
pos
=pos;

110 
p
->
u
.
assign
.
v¨
=var;

111 
p
->
u
.
assign
.
exp
=exp;

112  
p
;

113 
	}
}

115 
A_exp
 
	$A_IfExp
(
A_pos
 
pos
, 
A_exp
 
ã°
, A_ex∞
thí
, A_ex∞
ñ£e
)

116 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

117 
p
->
köd
=
A_ifExp
;

118 
p
->
pos
=pos;

119 
p
->
u
.
iff
.
ã°
=test;

120 
p
->
u
.
iff
.
thí
=then;

121 
p
->
u
.
iff
.
ñ£e
=elsee;

122  
p
;

123 
	}
}

125 
A_exp
 
	$A_WhûeExp
(
A_pos
 
pos
, 
A_exp
 
ã°
, A_ex∞
body
)

126 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

127 
p
->
köd
=
A_whûeExp
;

128 
p
->
pos
=pos;

129 
p
->
u
.
whûì
.
ã°
=test;

130 
p
->
u
.
whûì
.
body
=body;

131  
p
;

132 
	}
}

134 
A_exp
 
	$A_F‹Exp
(
A_pos
 
pos
, 
S_symbﬁ
 
v¨
, 
A_exp
 
lo
, A_ex∞
hi
, A_ex∞
body
)

135 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

136 
p
->
köd
=
A_f‹Exp
;

137 
p
->
pos
=pos;

138 
p
->
u
.
f‹r
.
v¨
=var;

139 
p
->
u
.
f‹r
.
lo
=lo;

140 
p
->
u
.
f‹r
.
hi
=hi;

141 
p
->
u
.
f‹r
.
body
=body;

142 
p
->
u
.
f‹r
.
esˇ≥
=
TRUE
;

143  
p
;

144 
	}
}

146 
A_exp
 
	$A_BªakExp
(
A_pos
 
pos
)

147 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

148 
p
->
köd
=
A_bªakExp
;

149 
p
->
pos
=pos;

150  
p
;

151 
	}
}

153 
A_exp
 
	$A_LëExp
(
A_pos
 
pos
, 
A_decLi°
 
decs
, 
A_exp
 
body
)

154 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

155 
p
->
köd
=
A_ÀtExp
;

156 
p
->
pos
=pos;

157 
p
->
u
.
Àt
.
decs
=decs;

158 
p
->
u
.
Àt
.
body
=body;

159  
p
;

160 
	}
}

162 
A_exp
 
	$A_AºayExp
(
A_pos
 
pos
, 
S_symbﬁ
 
typ
, 
A_exp
 
size
, A_ex∞
öô
)

163 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

164 
p
->
köd
=
A_¨øyExp
;

165 
p
->
pos
=pos;

166 
p
->
u
.
¨øy
.
typ
=typ;

167 
p
->
u
.
¨øy
.
size
=size;

168 
p
->
u
.
¨øy
.
öô
=init;

169  
p
;

170 
	}
}

172 
A_dec
 
	$A_Fun˘i⁄Dec
(
A_pos
 
pos
, 
A_fundecLi°
 
fun˘i⁄
)

173 {
A_dec
 
p
 = 
	`checked_mÆloc
((*p));

174 
p
->
köd
=
A_fun˘i⁄Dec
;

175 
p
->
pos
=pos;

176 
p
->
u
.
fun˘i⁄
=function;

177  
p
;

178 
	}
}

180 
A_dec
 
	$A_V¨Dec
(
A_pos
 
pos
, 
S_symbﬁ
 
v¨
, S_symbﬁ 
typ
, 
A_exp
 
öô
)

181 {
A_dec
 
p
 = 
	`checked_mÆloc
((*p));

182 
p
->
köd
=
A_v¨Dec
;

183 
p
->
pos
=pos;

184 
p
->
u
.
v¨
.var=var;

185 
p
->
u
.
v¨
.
typ
=typ;

186 
p
->
u
.
v¨
.
öô
=init;

187 
p
->
u
.
v¨
.
esˇ≥
=
TRUE
;

188  
p
;

189 
	}
}

191 
A_dec
 
	$A_Ty≥Dec
(
A_pos
 
pos
, 
A_«mëyLi°
 
ty≥
)

192 {
A_dec
 
p
 = 
	`checked_mÆloc
((*p));

193 
p
->
köd
=
A_ty≥Dec
;

194 
p
->
pos
=pos;

195 
p
->
u
.
ty≥
=type;

196  
p
;

197 
	}
}

199 
A_ty
 
	$A_NameTy
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
)

200 {
A_ty
 
p
 = 
	`checked_mÆloc
((*p));

201 
p
->
köd
=
A_«meTy
;

202 
p
->
pos
=pos;

203 
p
->
u
.
«me
=name;

204  
p
;

205 
	}
}

207 
A_ty
 
	$A_Rec‹dTy
(
A_pos
 
pos
, 
A_fõldLi°
 
ªc‹d
)

208 {
A_ty
 
p
 = 
	`checked_mÆloc
((*p));

209 
p
->
köd
=
A_ªc‹dTy
;

210 
p
->
pos
=pos;

211 
p
->
u
.
ªc‹d
=record;

212  
p
;

213 
	}
}

215 
A_ty
 
	$A_AºayTy
(
A_pos
 
pos
, 
S_symbﬁ
 
¨øy
)

216 {
A_ty
 
p
 = 
	`checked_mÆloc
((*p));

217 
p
->
köd
=
A_¨øyTy
;

218 
p
->
pos
=pos;

219 
p
->
u
.
¨øy
=array;

220  
p
;

221 
	}
}

223 
A_fõld
 
	$A_Fõld
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
, S_symbﬁ 
typ
)

224 {
A_fõld
 
p
 = 
	`checked_mÆloc
((*p));

225 
p
->
pos
=pos;

226 
p
->
«me
=name;

227 
p
->
typ
=typ;

228 
p
->
esˇ≥
=
TRUE
;

229  
p
;

230 
	}
}

232 
A_fõldLi°
 
	$A_FõldLi°
(
A_fõld
 
hód
, 
A_fõldLi°
 
èû
)

233 {
A_fõldLi°
 
p
 = 
	`checked_mÆloc
((*p));

234 
p
->
hód
=head;

235 
p
->
èû
=tail;

236  
p
;

237 
	}
}

239 
A_expLi°
 
	$A_ExpLi°
(
A_exp
 
hód
, 
A_expLi°
 
èû
)

240 {
A_expLi°
 
p
 = 
	`checked_mÆloc
((*p));

241 
p
->
hód
=head;

242 
p
->
èû
=tail;

243  
p
;

244 
	}
}

246 
A_fundec
 
	$A_Fundec
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
, 
A_fõldLi°
 
∑øms
, S_symbﬁ 
ªsu…
,

247 
A_exp
 
body
)

248 {
A_fundec
 
p
 = 
	`checked_mÆloc
((*p));

249 
p
->
pos
=pos;

250 
p
->
«me
=name;

251 
p
->
∑øms
=params;

252 
p
->
ªsu…
=result;

253 
p
->
body
=body;

254  
p
;

255 
	}
}

257 
A_fundecLi°
 
	$A_FundecLi°
(
A_fundec
 
hód
, 
A_fundecLi°
 
èû
)

258 {
A_fundecLi°
 
p
 = 
	`checked_mÆloc
((*p));

259 
p
->
hód
=head;

260 
p
->
èû
=tail;

261  
p
;

262 
	}
}

264 
A_decLi°
 
	$A_DecLi°
(
A_dec
 
hód
, 
A_decLi°
 
èû
)

265 {
A_decLi°
 
p
 = 
	`checked_mÆloc
((*p));

266 
p
->
hód
=head;

267 
p
->
èû
=tail;

268  
p
;

269 
	}
}

271 
A_«mëy
 
	$A_Namëy
(
S_symbﬁ
 
«me
, 
A_ty
 
ty
)

272 {
A_«mëy
 
p
 = 
	`checked_mÆloc
((*p));

273 
p
->
«me
=name;

274 
p
->
ty
=ty;

275  
p
;

276 
	}
}

278 
A_«mëyLi°
 
	$A_NamëyLi°
(
A_«mëy
 
hód
, 
A_«mëyLi°
 
èû
)

279 {
A_«mëyLi°
 
p
 = 
	`checked_mÆloc
((*p));

280 
p
->
hód
=head;

281 
p
->
èû
=tail;

282  
p
;

283 
	}
}

285 
A_efõld
 
	$A_Efõld
(
S_symbﬁ
 
«me
, 
A_exp
 
exp
)

286 {
A_efõld
 
p
 = 
	`checked_mÆloc
((*p));

287 
p
->
«me
=name;

288 
p
->
exp
=exp;

289  
p
;

290 
	}
}

292 
A_efõldLi°
 
	$A_EfõldLi°
(
A_efõld
 
hód
, 
A_efõldLi°
 
èû
)

293 {
A_efõldLi°
 
p
 = 
	`checked_mÆloc
((*p));

294 
p
->
hód
=head;

295 
p
->
èû
=tail;

296  
p
;

297 
	}
}

	@absyn.h

1 #i‚de‡
ABSYN_H


2 
	#ABSYN_H


	)

12 
	tA_pos
;

14 
A_v¨_
 *
	tA_v¨
;

15 
A_exp_
 *
	tA_exp
;

16 
A_dec_
 *
	tA_dec
;

17 
A_ty_
 *
	tA_ty
;

19 
A_decLi°_
 *
	tA_decLi°
;

20 
A_expLi°_
 *
	tA_expLi°
;

21 
A_fõld_
 *
	tA_fõld
;

22 
A_fõldLi°_
 *
	tA_fõldLi°
;

23 
A_fundec_
 *
	tA_fundec
;

24 
A_fundecLi°_
 *
	tA_fundecLi°
;

25 
A_«mëy_
 *
	tA_«mëy
;

26 
A_«mëyLi°_
 *
	tA_«mëyLi°
;

27 
A_efõld_
 *
	tA_efõld
;

28 
A_efõldLi°_
 *
	tA_efõldLi°
;

30 íum {
	mA_∂usOp
, 
	mA_möusOp
, 
	mA_timesOp
, 
	mA_divideOp
,

31 
	mA_eqOp
, 
	mA_√qOp
, 
	mA_…Op
, 
	mA_ÀOp
, 
	mA_gtOp
, 
	mA_geOp
} 
	tA_›î
;

33 
	sA_v¨_


34 {íum {
	mA_sim∂eV¨
, 
	mA_fõldV¨
, 
	mA_subs¸ùtV¨
} 
	mköd
;

35 
A_pos
 
	mpos
;

36 uni⁄ {
S_symbﬁ
 
	msim∂e
;

37 °ru˘ {
A_v¨
 
	mv¨
;

38 
S_symbﬁ
 
	msym
;} 
	mfõld
;

39 °ru˘ {
A_v¨
 
	mv¨
;

40 
A_exp
 
	mexp
;} 
	msubs¸ùt
;

41 } 
	mu
;

44 
	sA_exp_


45 {íum {
	mA_v¨Exp
, 
	mA_nûExp
, 
	mA_ötExp
, 
	mA_°rögExp
, 
	mA_ˇŒExp
,

46 
	mA_›Exp
, 
	mA_ªc‹dExp
, 
	mA_£qExp
, 
	mA_assignExp
, 
	mA_ifExp
,

47 
	mA_whûeExp
, 
	mA_f‹Exp
, 
	mA_bªakExp
, 
	mA_ÀtExp
, 
	mA_¨øyExp
} 
	mköd
;

48 
A_pos
 
	mpos
;

49 uni⁄ {
A_v¨
 
	mv¨
;

51 
	möâ
;

52 
°rög
 
	m°rögg
;

53 °ru˘ {
S_symbﬁ
 
	mfunc
; 
A_expLi°
 
	m¨gs
;} 
	mˇŒ
;

54 °ru˘ {
A_›î
 
	m›î
; 
A_exp
 
	mÀ·
; A_ex∞
	mright
;} 
	m›
;

55 °ru˘ {
S_symbﬁ
 
	mtyp
; 
A_efõldLi°
 
	mfõlds
;} 
	mªc‹d
;

56 
A_expLi°
 
	m£q
;

57 °ru˘ {
A_v¨
 
	mv¨
; 
A_exp
 
	mexp
;} 
	massign
;

58 °ru˘ {
A_exp
 
	mã°
, 
	mthí
, 
	mñ£e
;} 
	miff
;

59 °ru˘ {
A_exp
 
	mã°
, 
	mbody
;} 
	mwhûì
;

60 °ru˘ {
S_symbﬁ
 
	mv¨
; 
A_exp
 
	mlo
,
	mhi
,
	mbody
; 
boﬁ
 
	mesˇ≥
;} 
	mf‹r
;

62 °ru˘ {
A_decLi°
 
	mdecs
; 
A_exp
 
	mbody
;} 
	mÀt
;

63 °ru˘ {
S_symbﬁ
 
	mtyp
; 
A_exp
 
	msize
, 
	möô
;} 
	m¨øy
;

64 } 
	mu
;

67 
	sA_dec_


68 {íum {
	mA_fun˘i⁄Dec
, 
	mA_v¨Dec
, 
	mA_ty≥Dec
} 
	mköd
;

69 
A_pos
 
	mpos
;

70 uni⁄ {
A_fundecLi°
 
	mfun˘i⁄
;

72 °ru˘ {
S_symbﬁ
 
	mv¨
; S_symbﬁ 
	mtyp
; 
A_exp
 
	möô
; 
boﬁ
 
	mesˇ≥
;} var;

73 
A_«mëyLi°
 
	mty≥
;

74 } 
	mu
;

77 
	sA_ty_
 {íum {
	mA_«meTy
, 
	mA_ªc‹dTy
, 
	mA_¨øyTy
} 
	mköd
;

78 
A_pos
 
	mpos
;

79 uni⁄ {
S_symbﬁ
 
	m«me
;

80 
A_fõldLi°
 
	mªc‹d
;

81 
S_symbﬁ
 
	m¨øy
;

82 } 
	mu
;

87 
	sA_fõld_
 {
S_symbﬁ
 
	m«me
, 
	mtyp
; 
A_pos
 
	mpos
; 
boﬁ
 
	mesˇ≥
;};

88 
	sA_fõldLi°_
 {
A_fõld
 
	mhód
; 
A_fõldLi°
 
	mèû
;};

89 
	sA_expLi°_
 {
A_exp
 
	mhód
; 
A_expLi°
 
	mèû
;};

90 
	sA_fundec_
 {
A_pos
 
	mpos
;

91 
S_symbﬁ
 
	m«me
; 
A_fõldLi°
 
	m∑øms
;

92 
S_symbﬁ
 
	mªsu…
; 
A_exp
 
	mbody
;};

94 
	sA_fundecLi°_
 {
A_fundec
 
	mhód
; 
A_fundecLi°
 
	mèû
;};

95 
	sA_decLi°_
 {
A_dec
 
	mhód
; 
A_decLi°
 
	mèû
;};

96 
	sA_«mëy_
 {
S_symbﬁ
 
	m«me
; 
A_ty
 
	mty
;};

97 
	sA_«mëyLi°_
 {
A_«mëy
 
	mhód
; 
A_«mëyLi°
 
	mèû
;};

98 
	sA_efõld_
 {
S_symbﬁ
 
	m«me
; 
A_exp
 
	mexp
;};

99 
	sA_efõldLi°_
 {
A_efõld
 
	mhód
; 
A_efõldLi°
 
	mèû
;};

103 
A_v¨
 
A_Sim∂eV¨
(
A_pos
 
pos
, 
S_symbﬁ
 
sym
);

104 
A_v¨
 
A_FõldV¨
(
A_pos
 
pos
, A_v¨ 
v¨
, 
S_symbﬁ
 
sym
);

105 
A_v¨
 
A_Subs¸ùtV¨
(
A_pos
 
pos
, A_v¨ 
v¨
, 
A_exp
 
exp
);

106 
A_exp
 
A_V¨Exp
(
A_pos
 
pos
, 
A_v¨
 
v¨
);

107 
A_exp
 
A_NûExp
(
A_pos
 
pos
);

108 
A_exp
 
A_I¡Exp
(
A_pos
 
pos
, 
i
);

109 
A_exp
 
A_SåögExp
(
A_pos
 
pos
, 
°rög
 
s
);

110 
A_exp
 
A_CÆlExp
(
A_pos
 
pos
, 
S_symbﬁ
 
func
, 
A_expLi°
 
¨gs
);

111 
A_exp
 
A_OpExp
(
A_pos
 
pos
, 
A_›î
 
›î
, A_ex∞
À·
, A_ex∞
right
);

112 
A_exp
 
A_Rec‹dExp
(
A_pos
 
pos
, 
S_symbﬁ
 
typ
, 
A_efõldLi°
 
fõlds
);

113 
A_exp
 
A_SeqExp
(
A_pos
 
pos
, 
A_expLi°
 
£q
);

114 
A_exp
 
A_AssignExp
(
A_pos
 
pos
, 
A_v¨
 
v¨
, A_ex∞
exp
);

115 
A_exp
 
A_IfExp
(
A_pos
 
pos
, A_ex∞
ã°
, A_ex∞
thí
, A_ex∞
ñ£e
);

116 
A_exp
 
A_WhûeExp
(
A_pos
 
pos
, A_ex∞
ã°
, A_ex∞
body
);

117 
A_exp
 
A_F‹Exp
(
A_pos
 
pos
, 
S_symbﬁ
 
v¨
, A_ex∞
lo
, A_ex∞
hi
, A_ex∞
body
);

118 
A_exp
 
A_BªakExp
(
A_pos
 
pos
);

119 
A_exp
 
A_LëExp
(
A_pos
 
pos
, 
A_decLi°
 
decs
, A_ex∞
body
);

120 
A_exp
 
A_AºayExp
(
A_pos
 
pos
, 
S_symbﬁ
 
typ
, A_ex∞
size
, A_ex∞
öô
);

121 
A_dec
 
A_Fun˘i⁄Dec
(
A_pos
 
pos
, 
A_fundecLi°
 
fun˘i⁄
);

122 
A_dec
 
A_V¨Dec
(
A_pos
 
pos
, 
S_symbﬁ
 
v¨
, S_symbﬁ 
typ
, 
A_exp
 
öô
);

123 
A_dec
 
A_Ty≥Dec
(
A_pos
 
pos
, 
A_«mëyLi°
 
ty≥
);

124 
A_ty
 
A_NameTy
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
);

125 
A_ty
 
A_Rec‹dTy
(
A_pos
 
pos
, 
A_fõldLi°
 
ªc‹d
);

126 
A_ty
 
A_AºayTy
(
A_pos
 
pos
, 
S_symbﬁ
 
¨øy
);

127 
A_fõld
 
A_Fõld
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
, S_symbﬁ 
typ
);

128 
A_fõldLi°
 
A_FõldLi°
(
A_fõld
 
hód
, A_fõldLi° 
èû
);

129 
A_expLi°
 
A_ExpLi°
(
A_exp
 
hód
, A_expLi° 
èû
);

130 
A_fundec
 
A_Fundec
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
, 
A_fõldLi°
 
∑øms
, S_symbﬁ 
ªsu…
,

131 
A_exp
 
body
);

132 
A_fundecLi°
 
A_FundecLi°
(
A_fundec
 
hód
, A_fundecLi° 
èû
);

133 
A_decLi°
 
A_DecLi°
(
A_dec
 
hód
, A_decLi° 
èû
);

134 
A_«mëy
 
A_Namëy
(
S_symbﬁ
 
«me
, 
A_ty
 
ty
);

135 
A_«mëyLi°
 
A_NamëyLi°
(
A_«mëy
 
hód
, A_«mëyLi° 
èû
);

136 
A_efõld
 
A_Efõld
(
S_symbﬁ
 
«me
, 
A_exp
 
exp
);

137 
A_efõldLi°
 
A_EfõldLi°
(
A_efõld
 
hód
, A_efõldLi° 
èû
);

	@assem.c

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

9 
	~"utû.h
"

10 
	~"symbﬁ.h
"

11 
	~"absyn.h
"

12 
	~"ãmp.h
"

13 
	~"åì.h
"

14 
	~"as£m.h
"

15 
	~"‰ame.h
"

16 
	~"îr‹msg.h
"

18 
AS_èrgës
 
	$AS_T¨gës
(
Temp_œbñLi°
 
œbñs
) {

19 
AS_èrgës
 
p
 = 
	`checked_mÆloc
 ( *p);

20 
p
->
œbñs
=labels;

21  
p
;

22 
	}
}

24 
AS_ö°r
 
	$AS_O≥r
(
°rög
 
a
, 
Temp_ãmpLi°
 
d
, Temp_ãmpLi° 
s
, 
AS_èrgës
 
j
) {

25 
AS_ö°r
 
p
 = (AS_ö°rË
	`checked_mÆloc
 ( *p);

26 
p
->
köd
 = 
I_OPER
;

27 
p
->
u
.
OPER
.
as£m
=
a
;

28 
p
->
u
.
OPER
.
d°
=
d
;

29 
p
->
u
.
OPER
.
§c
=
s
;

30 
p
->
u
.
OPER
.
jumps
=
j
;

31  
p
;

32 
	}
}

34 
AS_ö°r
 
	$AS_Labñ
(
°rög
 
a
, 
Temp_œbñ
 
œbñ
) {

35 
AS_ö°r
 
p
 = (AS_ö°rË
	`checked_mÆloc
 ( *p);

36 
p
->
köd
 = 
I_LABEL
;

37 
p
->
u
.
LABEL
.
as£m
=
a
;

38 
p
->
u
.
LABEL
.
œbñ
=label;

39  
p
;

40 
	}
}

42 
AS_ö°r
 
	$AS_Move
(
°rög
 
a
, 
Temp_ãmpLi°
 
d
, Temp_ãmpLi° 
s
) {

43 
AS_ö°r
 
p
 = (AS_ö°rË
	`checked_mÆloc
 ( *p);

44 
p
->
köd
 = 
I_MOVE
;

45 
p
->
u
.
MOVE
.
as£m
=
a
;

46 
p
->
u
.
MOVE
.
d°
=
d
;

47 
p
->
u
.
MOVE
.
§c
=
s
;

48  
p
;

49 
	}
}

51 
AS_ö°rLi°
 
	$AS_In°rLi°
(
AS_ö°r
 
hód
, 
AS_ö°rLi°
 
èû
)

52 {
AS_ö°rLi°
 
p
 = (AS_ö°rLi°Ë
	`checked_mÆloc
 ( *p);

53 
p
->
hód
=hód;Ö->
èû
=tail;

54  
p
;

55 
	}
}

58 
AS_ö°rLi°
 
	$AS_•li˚
(
AS_ö°rLi°
 
a
, AS_ö°rLi° 
b
) {

59 
AS_ö°rLi°
 
p
;

60 i‡(
a
==
NULL
Ë 
b
;

61 
p
=
a
;Ö->
èû
!=
NULL
;Ö=p->tail) ;

62 
p
->
èû
=
b
;

63  
a
;

64 
	}
}

66 
Temp_ãmp
 
	$¡hTemp
(
Temp_ãmpLi°
 
li°
, 
i
) {

67 
	`as£π
(
li°
);

68 i‡(
i
==0Ë 
li°
->
hód
;

69  
	`¡hTemp
(
li°
->
èû
,
i
-1);

70 
	}
}

72 
Temp_œbñ
 
	$¡hLabñ
(
Temp_œbñLi°
 
li°
, 
i
) {

73 
	`as£π
(
li°
);

74 i‡(
i
==0Ë 
li°
->
hód
;

75  
	`¡hLabñ
(
li°
->
èû
,
i
-1);

76 
	}
}

83 
	$f‹m©
(*
ªsu…
, 
°rög
 
as£m
,

84 
Temp_ãmpLi°
 
d°
, Temp_ãmpLi° 
§c
,

85 
AS_èrgës
 
jumps
, 
Temp_m≠
 
m
)

88 
	`Ârötf
(
°dout
, "®f‹m©:ás£m=%s, d°=%p, src=%p\n", 
as£m
, 
d°
, 
§c
);

89 *
p
;

90 
i
 = 0;

91 
p
 = 
as£m
;Ö && *p != '\0';Ö++){

92 i‡(*
p
 == '`') {

93 *(++
p
)) {

94 's': {
n
 = 
	`©oi
(++
p
);

95 
°rög
 
s
 = 
	`Temp_look
(
m
, 
	`¡hTemp
(
§c
,
n
));

96 
	`°r˝y
(
ªsu…
+
i
, 
s
);

97 
i
 +
	`°æí
(
s
);

100 'd': {
n
 = 
	`©oi
(++
p
);

101 
°rög
 
s
 = 
	`Temp_look
(
m
, 
	`¡hTemp
(
d°
,
n
));

102 
	`°r˝y
(
ªsu…
+
i
, 
s
);

103 
i
 +
	`°æí
(
s
);

106 'j': 
	`as£π
(
jumps
);

107 {
n
 = 
	`©oi
(++
p
);

108 
°rög
 
s
 = 
	`Temp_œbñ°rög
(
	`¡hLabñ
(
jumps
->
œbñs
,
n
));

109 
	`°r˝y
(
ªsu…
+
i
, 
s
);

110 
i
 +
	`°æí
(
s
);

113 '`': 
ªsu…
[
i
] = '`'; i++;

115 : 
	`as£π
(0);

117 {
ªsu…
[
i
] = *
p
; i++; }}

118 
ªsu…
[
i
] = '\0';

119 
	`Ârötf
(
°dout
, "ªsu…=%s\n", 
ªsu…
);

120 
	}
}

123 
	$AS_¥öt
(
FILE
 *
out
, 
AS_ö°r
 
i
, 
Temp_m≠
 
m
)

125 
r
[200];

126 
i
->
köd
) {

127 
I_OPER
:

128 
	`f‹m©
(
r
, 
i
->
u
.
OPER
.
as£m
, i->u.OPER.
d°
, i->u.OPER.
§c
, i->u.OPER.
jumps
, 
m
);

129 
	`Ârötf
(
out
, "%s", 
r
);

131 
I_LABEL
:

132 
	`f‹m©
(
r
, 
i
->
u
.
LABEL
.
as£m
, 
NULL
, NULL, NULL, 
m
);

133 
	`Ârötf
(
out
, "%s", 
r
);

136 
I_MOVE
:

137 
	`f‹m©
(
r
, 
i
->
u
.
MOVE
.
as£m
, i->u.MOVE.
d°
, i->u.MOVE.
§c
, 
NULL
, 
m
);

138 
	`Ârötf
(
out
, "%s", 
r
);

141 
	}
}

144 
	$AS_¥ötIn°rLi°
 (
FILE
 *
out
, 
AS_ö°rLi°
 
iLi°
, 
Temp_m≠
 
m
)

146 ; 
iLi°
; iLi°=iLi°->
èû
) {

147 
	`AS_¥öt
(
out
, 
iLi°
->
hód
, 
m
);

149 
	`Ârötf
(
out
, "\n");

150 
	}
}

152 
AS_¥oc
 
	$AS_Proc
(
°rög
 
p
, 
AS_ö°rLi°
 
b
, såög 
e
)

153 {
AS_¥oc
 
¥oc
 = 
	`checked_mÆloc
((*proc));

154 
¥oc
->
¥ﬁog
=
p
;Öroc->
body
=
b
;Öroc->
ïûog
=
e
;

155  
¥oc
;

156 
	}
}

	@assem.h

6 °ru˘ {
Temp_œbñLi°
 
	mœbñs
;} *
	tAS_èrgës
;

7 
AS_èrgës
 
AS_T¨gës
(
Temp_œbñLi°
 
œbñs
);

9 
AS_ö°r_
 *
	tAS_ö°r
;

10 
	sAS_ö°r_
 {Énum {
	mI_OPER
, 
	mI_LABEL
, 
	mI_MOVE
} 
	mköd
;

11 uni⁄ {°ru˘ {
°rög
 
	mas£m
; 
Temp_ãmpLi°
 
	md°
, 
	m§c
;

12 
AS_èrgës
 
	mjumps
;} 
	mOPER
;

13 °ru˘ {
°rög
 
	mas£m
; 
Temp_œbñ
 
	mœbñ
;} 
	mLABEL
;

14 °ru˘ {
°rög
 
	mas£m
; 
Temp_ãmpLi°
 
	md°
, 
	m§c
;} 
	mMOVE
;

15 } 
	mu
;

18 
AS_ö°r
 
AS_O≥r
(
°rög
 
a
, 
Temp_ãmpLi°
 
d
, Temp_ãmpLi° 
s
, 
AS_èrgës
 
j
);

19 
AS_ö°r
 
AS_Labñ
(
°rög
 
a
, 
Temp_œbñ
 
œbñ
);

20 
AS_ö°r
 
AS_Move
(
°rög
 
a
, 
Temp_ãmpLi°
 
d
, Temp_ãmpLi° 
s
);

22 
AS_¥öt
(
FILE
 *
out
, 
AS_ö°r
 
i
, 
Temp_m≠
 
m
);

24 
AS_ö°rLi°_
 *
	tAS_ö°rLi°
;

25 
	sAS_ö°rLi°_
 { 
AS_ö°r
 
	mhód
; 
AS_ö°rLi°
 
	mèû
;};

26 
AS_ö°rLi°
 
AS_In°rLi°
(
AS_ö°r
 
hód
, AS_ö°rLi° 
èû
);

28 
AS_ö°rLi°
 
AS_•li˚
(AS_ö°rLi° 
a
, AS_ö°rLi° 
b
);

29 
AS_¥ötIn°rLi°
 (
FILE
 *
out
, 
AS_ö°rLi°
 
iLi°
, 
Temp_m≠
 
m
);

31 
AS_¥oc_
 *
	tAS_¥oc
;

32 
	sAS_¥oc_
 {

33 
°rög
 
	m¥ﬁog
;

34 
AS_ö°rLi°
 
	mbody
;

35 
°rög
 
	mïûog
;

38 
AS_¥oc
 
AS_Proc
(
°rög
 
p
, 
AS_ö°rLi°
 
b
, såög 
e
);

	@canon.c

5 
	~<°dio.h
>

6 
	~"utû.h
"

7 
	~"symbﬁ.h
"

8 
	~"ãmp.h
"

9 
	~"åì.h
"

10 
	~"ˇn⁄.h
"

12 
expRefLi°_
 *
	texpRefLi°
;

13 
	sexpRefLi°_
 {
T_exp
 *
	mhód
; 
expRefLi°
 
	mèû
;};

16 
T_°m
 
do_°m
(T_°m 
°m
);

17 
°mExp
 
do_exp
(
T_exp
 
exp
);

18 
C_°mLi°Li°
 
mkBlocks
(
T_°mLi°
 
°ms
, 
Temp_œbñ
 
d⁄e
);

19 
T_°mLi°
 
gëNext
();

21 
expRefLi°
 
	$ExpRefLi°
(
T_exp
 *
hód
, 
expRefLi°
 
èû
)

22 {
expRefLi°
 
p
 = (expRefLi°Ë
	`checked_mÆloc
 ( *p);

23 
p
->
hód
=hód;Ö->
èû
=tail;

24  
p
;

25 
	}
}

27 
boﬁ
 
	$isN›
(
T_°m
 
x
)

28 {  
x
->
köd
 =
T_EXP
 && x->
u
.
EXP
->köd =
T_CONST
;

29 
	}
}

31 
T_°m
 
	$£q
(
T_°m
 
x
, T_°m 
y
)

33 i‡(
	`isN›
(
x
)Ë 
y
;

34 i‡(
	`isN›
(
y
)Ë 
x
;

35  
	`T_Seq
(
x
,
y
);

36 
	}
}

38 
boﬁ
 
	$commuã
(
T_°m
 
x
, 
T_exp
 
y
)

40 i‡(
	`isN›
(
x
)Ë 
TRUE
;

41 i‡(
y
->
köd
 =
T_NAME
 || y->köd =
T_CONST
Ë 
TRUE
;

42  
FALSE
;

43 
	}
}

45 
	s°mExp
 {
T_°m
 
	ms
; 
T_exp
 
	me
;};

47 
T_°m
 
	$ª‹dî
(
expRefLi°
 
æi°
) {

48 i‡(!
æi°
Ë 
	`T_Exp
(
	`T_C⁄°
(0));

49 i‡((*
æi°
->
hód
)->
köd
==
T_CALL
) {

50 
Temp_ãmp
 
t
 = 
	`Temp_√wãmp
();

51 *
æi°
->
hód
 = 
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
t
),*rlist->head),T_Temp(t));

52  
	`ª‹dî
(
æi°
);

55 
°mExp
 
hd
 = 
	`do_exp
(*
æi°
->
hód
);

56 
T_°m
 
s
 = 
	`ª‹dî
(
æi°
->
èû
);

57 i‡(
	`commuã
(
s
,
hd
.
e
)) {

58 *
æi°
->
hód
=
hd
.
e
;

59  
	`£q
(
hd
.
s
,s);

61 
Temp_ãmp
 
t
 = 
	`Temp_√wãmp
();

62 *
æi°
->
hód
=
	`T_Temp
(
t
);

63  
	`£q
(
hd
.
s
, seq(
	`T_Move
(
	`T_Temp
(
t
),hd.
e
), s));

66 
	}
}

68 
expRefLi°
 
	$gë_ˇŒ_æi°
(
T_exp
 
exp
)

69 {
expRefLi°
 
æi°
, 
cuº
;

70 
T_expLi°
 
¨gs
 = 
exp
->
u
.
CALL
.args;

71 
cuº
 = 
æi°
 = 
	`ExpRefLi°
(&
exp
->
u
.
CALL
.
fun
, 
NULL
);

72 ;
¨gs
;árgs˜rgs->
èû
) {

73 
cuº
 = cuº->
èû
 = 
	`ExpRefLi°
(&
¨gs
->
hód
, 
NULL
);

75  
æi°
;

76 
	}
}

78 
°mExp
 
	$StmExp
(
T_°m
 
°m
, 
T_exp
 
exp
) {

79 
°mExp
 
x
;

80 
x
.
s
 = 
°m
;

81 
x
.
e
 = 
exp
;

82  
x
;

83 
	}
}

85 
°mExp
 
	$do_exp
(
T_exp
 
exp
)

87 
exp
->
köd
) {

88 
T_BINOP
:

89  
	`StmExp
(
	`ª‹dî
(
	`ExpRefLi°
(&
exp
->
u
.
BINOP
.
À·
,

90 
	`ExpRefLi°
(&
exp
->
u
.
BINOP
.
right
, 
NULL
))),

91 
exp
);

92 
T_MEM
:

93  
	`StmExp
(
	`ª‹dî
(
	`ExpRefLi°
(&
exp
->
u
.
MEM
, 
NULL
)),Éxp);

94 
T_ESEQ
:

95 {
°mExp
 
x
 = 
	`do_exp
(
exp
->
u
.
ESEQ
.exp);

96  
	`StmExp
(
	`£q
(
	`do_°m
(
exp
->
u
.
ESEQ
.
°m
), 
x
.
s
), x.
e
);

98 
T_CALL
:

99  
	`StmExp
(
	`ª‹dî
(
	`gë_ˇŒ_æi°
(
exp
)),Éxp);

101  
	`StmExp
(
	`ª‹dî
(
NULL
), 
exp
);

103 
	}
}

106 
T_°m
 
	$do_°m
(
T_°m
 
°m
)

108 
°m
->
köd
) {

109 
T_SEQ
:

110  
	`£q
(
	`do_°m
(
°m
->
u
.
SEQ
.
À·
), do_°m(°m->u.SEQ.
right
));

111 
T_JUMP
:

112  
	`£q
(
	`ª‹dî
(
	`ExpRefLi°
(&
°m
->
u
.
JUMP
.
exp
, 
NULL
)), stm);

113 
T_CJUMP
:

114  
	`£q
(
	`ª‹dî
(
	`ExpRefLi°
(&
°m
->
u
.
CJUMP
.
À·
,

115 
	`ExpRefLi°
(&
°m
->
u
.
CJUMP
.
right
,
NULL
))), stm);

116 
T_MOVE
:

117 i‡(
°m
->
u
.
MOVE
.
d°
->
köd
 =
T_TEMP
 && stm->u.MOVE.
§c
->köd =
T_CALL
)

118  
	`£q
(
	`ª‹dî
(
	`gë_ˇŒ_æi°
(
°m
->
u
.
MOVE
.
§c
)), stm);

119 i‡(
°m
->
u
.
MOVE
.
d°
->
köd
 =
T_TEMP
)

120  
	`£q
(
	`ª‹dî
(
	`ExpRefLi°
(&
°m
->
u
.
MOVE
.
§c
, 
NULL
)), stm);

121 i‡(
°m
->
u
.
MOVE
.
d°
->
köd
 =
T_MEM
)

122  
	`£q
(
	`ª‹dî
(
	`ExpRefLi°
(&
°m
->
u
.
MOVE
.
d°
->u.
MEM
,

123 
	`ExpRefLi°
(&
°m
->
u
.
MOVE
.
§c
, 
NULL
))), stm);

124 i‡(
°m
->
u
.
MOVE
.
d°
->
köd
 =
T_ESEQ
) {

125 
T_°m
 
s
 = 
°m
->
u
.
MOVE
.
d°
->u.
ESEQ
.stm;

126 
°m
->
u
.
MOVE
.
d°
 = stm->u.MOVE.d°->u.
ESEQ
.
exp
;

127  
	`do_°m
(
	`T_Seq
(
s
, 
°m
));

129 
	`as£π
(0);

130 
T_EXP
:

131 i‡(
°m
->
u
.
EXP
->
köd
 =
T_CALL
)

132  
	`£q
(
	`ª‹dî
(
	`gë_ˇŒ_æi°
(
°m
->
u
.
EXP
)), stm);

133  
	`£q
(
	`ª‹dî
(
	`ExpRefLi°
(&
°m
->
u
.
EXP
, 
NULL
)), stm);

135  
°m
;

137 
	}
}

140 
T_°mLi°
 
	$löór
(
T_°m
 
°m
, 
T_°mLi°
 
right
)

142 i‡(
°m
->
köd
 =
T_SEQ
)

143  
	`löór
(
°m
->
u
.
SEQ
.
À·
,löór(°m->u.SEQ.
right
,right));

144  
	`T_StmLi°
(
°m
, 
right
);

145 
	}
}

151 
T_°mLi°
 
	$C_löórize
(
T_°m
 
°m
)

153  
	`löór
(
	`do_°m
(
°m
), 
NULL
);

154 
	}
}

156 
C_°mLi°Li°
 
	$StmLi°Li°
(
T_°mLi°
 
hód
, 
C_°mLi°Li°
 
èû
)

157 {
C_°mLi°Li°
 
p
 = (C_°mLi°Li°Ë
	`checked_mÆloc
 ( *p);

158 
p
->
hód
=hód;Ö->
èû
=tail;

159  
p
;

160 
	}
}

163 
C_°mLi°Li°
 
	$√xt
(
T_°mLi°
 
¥ev°ms
, T_°mLi° 
°ms
, 
Temp_œbñ
 
d⁄e
)

165 i‡(!
°ms
)

166  
	`√xt
(
¥ev°ms
,

167 
	`T_StmLi°
(
	`T_Jump
(
	`T_Name
(
d⁄e
), 
	`Temp_LabñLi°
(d⁄e, 
NULL
)),

168 
NULL
), 
d⁄e
);

169 i‡(
°ms
->
hód
->
köd
 =
T_JUMP
 || stms->hód->köd =
T_CJUMP
) {

170 
C_°mLi°Li°
 
°mLi°s
;

171 
¥ev°ms
->
èû
 = 
°ms
;

172 
°mLi°s
 = 
	`mkBlocks
(
°ms
->
èû
, 
d⁄e
);

173 
°ms
->
èû
 = 
NULL
;

174  
°mLi°s
;

176 i‡(
°ms
->
hód
->
köd
 =
T_LABEL
) {

177 
Temp_œbñ
 
œb
 = 
°ms
->
hód
->
u
.
LABEL
;

178  
	`√xt
(
¥ev°ms
, 
	`T_StmLi°
(
	`T_Jump
(
	`T_Name
(
œb
), 
	`Temp_LabñLi°
÷ab, 
NULL
)),

179 
°ms
), 
d⁄e
);

182 
¥ev°ms
->
èû
 = 
°ms
;

183  
	`√xt
(
°ms
, stms->
èû
, 
d⁄e
);

185 
	}
}

188 
C_°mLi°Li°
 
	$mkBlocks
(
T_°mLi°
 
°ms
, 
Temp_œbñ
 
d⁄e
)

190 i‡(!
°ms
) {

191  
NULL
;

193 i‡(
°ms
->
hód
->
köd
 !
T_LABEL
) {

194  
	`mkBlocks
(
	`T_StmLi°
(
	`T_Labñ
(
	`Temp_√wœbñ
()), 
°ms
), 
d⁄e
);

197  
	`StmLi°Li°
(
°ms
, 
	`√xt
(°ms, stms->
èû
, 
d⁄e
));

198 
	}
}

211 
C_block
 
	$C_basicBlocks
(
T_°mLi°
 
°mLi°
)

213 
C_block
 
b
;

214 
b
.
œbñ
 = 
	`Temp_√wœbñ
();

215 
b
.
°mLi°s
 = 
	`mkBlocks
(
°mLi°
, b.
œbñ
);

217  
b
;

218 
	}
}

220 
S_èbÀ
 
	gblock_ív
;

221 
C_block
 
	gglobÆ_block
;

223 
T_°mLi°
 
	$gëLa°
(
T_°mLi°
 
li°
)

225 
T_°mLi°
 
œ°
 = 
li°
;

226 
œ°
->
èû
->tail)Üast =Üast->tail;

227  
œ°
;

228 
	}
}

230 
	$åa˚
(
T_°mLi°
 
li°
)

232 
T_°mLi°
 
œ°
 = 
	`gëLa°
(
li°
);

233 
T_°m
 
œb
 = 
li°
->
hód
;

234 
T_°m
 
s
 = 
œ°
->
èû
->
hód
;

235 
	`S_íãr
(
block_ív
, 
œb
->
u
.
LABEL
, 
NULL
);

236 i‡(
s
->
köd
 =
T_JUMP
) {

237 
T_°mLi°
 
èrgë
 = (T_°mLi°Ë
	`S_look
(
block_ív
, 
s
->
u
.
JUMP
.
jumps
->
hód
);

238 i‡(!
s
->
u
.
JUMP
.
jumps
->
èû
 && 
èrgë
) {

239 
œ°
->
èû
 = 
èrgë
;

240 
	`åa˚
(
èrgë
);

242 
œ°
->
èû
->èû = 
	`gëNext
();

245 i‡(
s
->
köd
 =
T_CJUMP
) {

246 
T_°mLi°
 
åue
 = (T_°mLi°Ë
	`S_look
(
block_ív
, 
s
->
u
.
CJUMP
.true);

247 
T_°mLi°
 
Ál£
 = (T_°mLi°Ë
	`S_look
(
block_ív
, 
s
->
u
.
CJUMP
.false);

248 i‡(
Ál£
) {

249 
œ°
->
èû
->èû = 
Ál£
;

250 
	`åa˚
(
Ál£
);

252 i‡(
åue
) {

253 
œ°
->
èû
->
hód
 = 
	`T_Cjump
(
	`T_nŸRñ
(
s
->
u
.
CJUMP
.
›
), s->u.CJUMP.
À·
,

254 
s
->
u
.
CJUMP
.
right
, s->u.CJUMP.
Ál£
,

255 
s
->
u
.
CJUMP
.
åue
);

256 
œ°
->
èû
->èû = 
åue
;

257 
	`åa˚
(
åue
);

260 
Temp_œbñ
 
Ál£
 = 
	`Temp_√wœbñ
();

261 
œ°
->
èû
->
hód
 = 
	`T_Cjump
(
s
->
u
.
CJUMP
.
›
, s->u.CJUMP.
À·
,

262 
s
->
u
.
CJUMP
.
right
, s->u.CJUMP.
åue
, 
Ál£
);

263 
œ°
->
èû
->èû = 
	`T_StmLi°
(
	`T_Labñ
(
Ál£
), 
	`gëNext
());

266 
	`as£π
(0);

267 
	}
}

271 
T_°mLi°
 
	$gëNext
()

273 i‡(!
globÆ_block
.
°mLi°s
)

274  
	`T_StmLi°
(
	`T_Labñ
(
globÆ_block
.
œbñ
), 
NULL
);

276 
T_°mLi°
 
s
 = 
globÆ_block
.
°mLi°s
->
hód
;

277 i‡(
	`S_look
(
block_ív
, 
s
->
hód
->
u
.
LABEL
)) {

278 
	`åa˚
(
s
);

279  
s
;

282 
globÆ_block
.
°mLi°s
 = globÆ_block.°mLi°s->
èû
;

283  
	`gëNext
();

286 
	}
}

297 
T_°mLi°
 
	$C_åa˚ScheduÀ
(
C_block
 
b
)

298 { 
C_°mLi°Li°
 
sLi°
;

299 
block_ív
 = 
	`S_em±y
();

300 
globÆ_block
 = 
b
;

302 
sLi°
=
globÆ_block
.
°mLi°s
; sLi°; sLi°=sLi°->
èû
) {

303 
	`S_íãr
(
block_ív
, 
sLi°
->
hód
->hód->
u
.
LABEL
, sList->head);

306  
	`gëNext
();

307 
	}
}

	@canon.h

6 
C_°mLi°Li°_
 *
	tC_°mLi°Li°
;

7 
	sC_block
 { 
C_°mLi°Li°
 
	m°mLi°s
; 
Temp_œbñ
 
	mœbñ
;};

8 
	sC_°mLi°Li°_
 { 
T_°mLi°
 
	mhód
; 
C_°mLi°Li°
 
	mèû
;};

10 
T_°mLi°
 
C_löórize
(
T_°m
 
°m
);

17 
C_block
 
C_basicBlocks
(
T_°mLi°
 
°mLi°
);

30 
T_°mLi°
 
C_åa˚ScheduÀ
(
C_block
 
b
);

	@codegen.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~"utû.h
"

5 
	~"symbﬁ.h
"

6 
	~"absyn.h
"

7 
	~"ãmp.h
"

8 
	~"îr‹msg.h
"

9 
	~"åì.h
"

10 
	~"as£m.h
"

11 
	~"‰ame.h
"

12 
	~"codegí.h
"

13 
	~"èbÀ.h
"

17 
Temp_m≠
 
F_ãmpM≠
;

19 
Temp_ãmpLi°
 
	$L
(
Temp_ãmp
 
h
, 
Temp_ãmpLi°
 
t
Ë{ 
	`Temp_TempLi°
(h,Å);
	}
}

21 
AS_ö°rLi°
 
	giLi°
=
NULL
, 
	gœ°
=NULL;

22 
	$emô
(
AS_ö°r
 
ö°
)

24 i‡(
œ°
 !
NULL
)

25 
œ°
 =Üa°->
èû
 = 
	`AS_In°rLi°
(
ö°
, 
NULL
);

26 
œ°
 = 
iLi°
 = 
	`AS_In°rLi°
(
ö°
, 
NULL
);

27 
	}
}

29 
AS_ö°rLi°
 
	$F_codegí
(
F_‰ame
 
f
, 
T_°mLi°
 
°mLi°
) {

30 
AS_ö°rLi°
 
li°
; 
T_°mLi°
 
s1
;

32 
s1
 = 
°mLi°
; s1; s1 = s1->
èû
Ë
	`munchStm
(s1->
hód
);

33 
li°
 = 
iLi°
;

34 
iLi°
 = 
œ°
 = 
NULL
;

35  
li°
;

36 
	}
}

39 
Temp_ãmp
 
	$munchExp
(
T_exp
 
e
)

41 *
buf„r
 = 
	`checked_mÆloc
(64);

42 
Temp_ãmp
 
r
 = 
	`Temp_√wãmp
();

43 
i
; 
T_exp
 
e1
, 
e2
;

44 
e
->
köd
) {

45 
T_MEM
:

47 
T_exp
 
adr
 = 
e
->
u
.
MEM
;

48 
adr
->
köd
) {

49 
T_BINOP
:

51 
	`as£π
(
adr
->
u
.
BINOP
.
›
 =
T_∂us
);

52 
T_exp
 
…
 = 
adr
->
u
.
BINOP
.
À·
, 
π
 =ádr->u.BINOP.
right
;

54 i‡(
…
->
köd
 !
T_CONST
 && 
π
->kind != T_CONST) {

55 
	`•rötf
(
buf„r
, "\tmovl\t(`s0), `d0\n");

56 
	`emô
(
	`AS_O≥r
(
buf„r
, 
	`L
(
r
, 
NULL
), L(
	`munchExp
(
adr
), NULL), NULL));

57  
r
;

61 i‡(
…
->
köd
 =
T_CONST
) {

62 
i
 = 
…
->
u
.
CONST
; 
e1
 = 
π
;

64 
	`as£π
(
π
->
köd
 =
T_CONST
);

65 
i
 = 
π
->
u
.
CONST
; 
e1
 = 
…
;

67 
	`•rötf
(
buf„r
, "\tmovl\t%d(`s0), `d0\n", 
i
);

68 
	`emô
(
	`AS_O≥r
(
buf„r
, 
	`L
(
r
, 
NULL
) ,

69 
	`L
(
	`munchExp
(
e1
Ë , 
NULL
), NULL));

70  
r
;

72 
T_CONST
:

74 
i
 = 
adr
->
u
.
CONST
;

75 
	`•rötf
(
buf„r
, "\tmovl\t0x%x, `d0\n", 
i
);

76 
	`emô
(
	`AS_O≥r
(
buf„r
, 
	`L
(
r
, 
NULL
), NULL , NULL));

77  
r
;

81 
	`•rötf
(
buf„r
, "\tmovl\t(`s0), `d0\n");

82 
	`emô
(
	`AS_O≥r
(
buf„r
, 
	`L
(
r
, 
NULL
), L(
	`munchExp
(
adr
), NULL), NULL));

83  
r
;

86 
	`as£π
(0);

88 
T_BINOP
:

90 
T_exp
 
…
 = 
e
->
u
.
BINOP
.
À·
, 
π
 =É->u.BINOP.
right
;

91 
e
->
u
.
BINOP
.
›
) {

92 
T_∂us
 :

94 i‡(
…
->
köd
 =
T_CONST
 && 
π
->kind == T_CONST) {

95 
	`•rötf
(
buf„r
, "mov»$%d `d0\n", 
…
->
u
.
CONST
 + 
π
->u.CONST);

96 
	`emô
(
	`AS_O≥r
(
buf„r
, 
	`L
(
r
, 
NULL
), NULL, NULL));

97  
r
;

106 
	`•rötf
(
buf„r
, "\tmovl\t`s0, `d0\n");

107 
	`emô
(
	`AS_O≥r
(
buf„r
, 
	`L
(
r
, 
NULL
), L(
	`munchExp
(
…
), NULL), NULL));

109 
buf„r
 = 
	`checked_mÆloc
(64);

110 
	`•rötf
(
buf„r
, "\taddl\t`s0, `d0\n");

111 
	`emô
(
	`AS_O≥r
(
buf„r
, 
	`L
(
r
, 
NULL
), L(
	`munchExp
(
π
), NULL), NULL));

112  
r
;

114 
	`as£π
(0);

116 
T_möus
 :

119 
	`•rötf
(
buf„r
, "\tmovl\t`s0, `d0\n");

120 
	`emô
(
	`AS_O≥r
(
buf„r
, 
	`L
(
r
, 
NULL
), L(
	`munchExp
(
π
), NULL), NULL));

122 
buf„r
 = 
	`checked_mÆloc
(64);

123 
	`•rötf
(
buf„r
, "\tsubl\t`s0, `d0\n");

124 
	`emô
(
	`AS_O≥r
(
buf„r
, 
	`L
(
r
, 
NULL
), L(
	`munchExp
(
…
), NULL), NULL));

125  
r
;

127 
T_mul
 :

129 
	`•rötf
(
buf„r
, "\tmovl\t`s0, `d0\n");

130 
	`emô
(
	`AS_O≥r
(
buf„r
, 
	`L
(
r
, 
NULL
), L(
	`munchExp
(
π
), NULL), NULL));

132 
buf„r
 = 
	`checked_mÆloc
(64);

133 
	`•rötf
(
buf„r
, "\timull\t`s0, `d0\n");

134 
	`emô
(
	`AS_O≥r
(
buf„r
, 
	`L
(
r
, 
NULL
), L(
	`munchExp
(
…
), NULL), NULL));

135  
r
;

137 
T_div
 :

142 
	`•rötf
(
buf„r
, "\tmovl\t`s0, `d0\n");

143 
	`emô
(
	`AS_O≥r
(
buf„r
, 
	`L
(
r
, 
NULL
), L(
	`munchExp
(
…
), NULL), NULL));

145 
buf„r
 = 
	`checked_mÆloc
(64);

146 
	`•rötf
(
buf„r
, "\tcltd\n");

147 
	`emô
(
	`AS_O≥r
(
buf„r
, 
NULL
, NULL, NULL));

149 
buf„r
 = 
	`checked_mÆloc
(64);

150 
	`•rötf
(
buf„r
, "\tidiv\t`s0\n");

151 
AS_ö°r
 
debug
 = 
	`AS_O≥r
(
buf„r
, 
NULL
, 
	`L
(
	`munchExp
(
π
), NULL), NULL);

152 
	`emô
(
debug
);

153  
r
;

156 
	`as£π
(0);

159 
T_CONST
:

161 
	`•rötf
(
buf„r
, "\tmovl\t$%d, `d0\n", 
e
->
u
.
CONST
);

163 
	`emô
(
	`AS_O≥r
(
buf„r
, 
	`L
(
r
, 
NULL
), NULL, NULL));

164  
r
;

166 
T_TEMP
:

168  
e
->
u
.
TEMP
;

170 
T_NAME
:

172 
	`¥ötf
("warning:Ñeach T_NAME!\n");

173 
	`•rötf
(
buf„r
, "%s:\n", 
	`S_«me
(
e
->
u
.
NAME
));

174 
	`emô
(
	`AS_O≥r
(
buf„r
, 
NULL
, NULL, NULL));

175  
r
;

177 
T_CALL
:

179 
	`as£π
(
e
->
u
.
CALL
.
fun
->
köd
 =
T_NAME
);

180 
Temp_ãmpLi°
 
l
 = 
	`munchArgs
(0, 
e
->
u
.
CALL
.
¨gs
);

181 
	`•rötf
(
buf„r
, "\tˇŒ\t%s\n", 
	`Temp_œbñ°rög
(
e
->
u
.
CALL
.
fun
->u.
NAME
));

182 
	`emô
(
	`AS_O≥r
(
buf„r
, 
	`L
(
	`F_RV
(), 
NULL
), 
l
, NULL));

183  
r
;

186 
T_ESEQ
:

187 
	`as£π
(0);

189 
	}
}

191 
Temp_ãmpLi°
 
	$munchArgs
(
i
, 
T_expLi°
 
¨gs
)

193  
NULL
;

194 
	}
}

197 
	$munchStm
(
T_°m
 
s
)

199 *
buf„r
 = 
	`checked_mÆloc
(128);

200 
i
; 
T_exp
 
e1
, 
e2
;

201 
s
->
köd
) {

202 
T_MOVE
:

204 
s
->
u
.
MOVE
.
d°
->
köd
) {

205 
T_MEM
:

207 
T_exp
 
mem
 = 
s
->
u
.
MOVE
.
d°
->u.
MEM
;

208 
e2
 = 
s
->
u
.
MOVE
.
§c
;

209 
mem
->
köd
)

211 
T_BINOP
:

213 
	`as£π
(
mem
->
u
.
BINOP
.
›
 =
T_∂us
);

214 
T_exp
 
…
 = 
mem
->
u
.
BINOP
.
À·
, 
π
 = mem->u.BINOP.
right
;

216 i‡(
…
->
köd
 !
T_CONST
 && 
π
->kind != T_CONST) {

217 
	`•rötf
(
buf„r
, "\tmovl\t`s1, (`s0)\n");

218 
	`emô
(
	`AS_O≥r
(
buf„r
, 
NULL
, 
	`L
(
	`munchExp
(
mem
), L(munchExp(
e2
), NULL)), NULL));

222 i‡(
…
->
köd
 =
T_CONST
) {

223 
	`as£π
(
π
->
köd
 !
T_CONST
);

224 
i
 = 
…
->
u
.
CONST
; 
e1
 = 
π
;

226 
i
 = 
π
->
u
.
CONST
; 
e1
 = 
…
;

228 
	`•rötf
(
buf„r
, "\tmovl\t`s1, %d(`s0)\n", 
i
);

229 
	`emô
(
	`AS_O≥r
(
buf„r
, 
NULL
,

230 
	`L
(
	`munchExp
(
e1
), L(munchExp(
e2
), 
NULL
)), NULL));

233 
T_CONST
:

236 
	`•rötf
(
buf„r
, "\tmovl\t`s1, (`s0)\n");

237 
	`emô
(
	`AS_O≥r
(
buf„r
, 
NULL
,

238 
	`L
(
	`munchExp
(
mem
), L(munchExp(
e2
), 
NULL
)), NULL));

243 
T_TEMP
:

245 
Temp_ãmp
 
d°
 = 
s
->
u
.
MOVE
.d°->u.
TEMP
;

246 
	`•rötf
(
buf„r
, "\tmovl\t`s0, `d0\n");

247 
	`emô
(
	`AS_Move
(
buf„r
, 
	`L
(
d°
, 
NULL
), L(
	`munchExp
(
s
->
u
.
MOVE
.
§c
), NULL)));

251 
	`as£π
(0);

254 
T_LABEL
:

257 
Temp_œbñ
 
œb
 = 
s
->
u
.
LABEL
;

258 
	`•rötf
(
buf„r
, "%s:\n", 
	`Temp_œbñ°rög
(
œb
));

259 
	`emô
(
	`AS_Labñ
(
buf„r
, 
œb
));

262 
T_JUMP
:

264 
	`as£π
(
s
->
u
.
JUMP
.
exp
->
köd
 =
T_NAME
);

265 
	`•rötf
(
buf„r
, "\tjmp\t%s\n", 
	`Temp_œbñ°rög
(
s
->
u
.
JUMP
.
exp
->u.
NAME
));

266 
	`emô
(
	`AS_O≥r
(
buf„r
, 
NULL
, NULL, 
	`AS_T¨gës
(
s
->
u
.
JUMP
.
jumps
)));

269 
T_CJUMP
:

271 
	`•rötf
(
buf„r
, "\tcmpl\t`s0, `s1\n");

272 
	`emô
(
	`AS_O≥r
(
buf„r
, 
NULL
, 
	`L
(
	`munchExp
(
s
->
u
.
CJUMP
.
À·
), L(munchExp(s->u.CJUMP.
right
), NULL)), NULL));

273 *
›
;

274 
s
->
u
.
CJUMP
.
›
) {

275 
T_eq
:

276 
›
 = "je";

278 
T_√
:

279 
›
 = "jne";

281 
T_…
:

282 
›
 = "jl";

284 
T_À
:

285 
›
 = "jle";

287 
T_gt
:

288 
›
 = "jg";

290 
T_ge
:

291 
›
 = "jge";

294 
	`as£π
(0);

296 
buf„r
 = 
	`checked_mÆloc
(64);

297 
	`•rötf
(
buf„r
, "\t%s\t%s\n", 
›
, 
	`Temp_œbñ°rög
(
s
->
u
.
CJUMP
.
åue
));

298 
	`emô
(
	`AS_O≥r
(
buf„r
, 
NULL
, NULL, 
	`AS_T¨gës
(
	`Temp_LabñLi°
(
s
->
u
.
CJUMP
.
åue
, NULL))));

300 
buf„r
 = 
	`checked_mÆloc
(64);

301 
	`•rötf
(
buf„r
, "\t%s\t%s\n", 
›
, 
	`Temp_œbñ°rög
(
s
->
u
.
CJUMP
.
Ál£
));

302 
	`emô
(
	`AS_O≥r
(
buf„r
, 
NULL
, NULL, 
	`AS_T¨gës
(
	`Temp_LabñLi°
(
s
->
u
.
CJUMP
.
Ál£
, NULL))));

305 
T_EXP
:

307 
	`munchExp
(
s
->
u
.
EXP
);

310 
T_SEQ
:

311 
	`as£π
(0);

313 
	}
}

	@codegen.h

1 #i‚de‡
CODEGEN_H


2 
	#CODEGEN_H


	)

4 
AS_ö°rLi°
 
F_codegí
(
F_‰ame
 
f
, 
T_°mLi°
 
°mLi°
);

6 
Temp_ãmp
 
munchExp
(
T_exp
 
e
);

7 
munchStm
(
T_°m
 
s
);

8 
Temp_ãmpLi°
 
munchArgs
(
i
, 
T_expLi°
 
¨gs
);

10 
Temp_ãmpLi°
 
L
(
Temp_ãmp
 
h
, Temp_ãmpLi° 
t
);

11 
emô
(
AS_ö°r
 
ö°
);

	@color.c

1 
	~<°dio.h
>

2 
	~"utû.h
"

3 
	~"symbﬁ.h
"

4 
	~"ãmp.h
"

5 
	~"åì.h
"

6 
	~"absyn.h
"

7 
	~"as£m.h
"

8 
	~"‰ame.h
"

9 
	~"gøph.h
"

10 
	~"cﬁ‹.h
"

11 
	~"èbÀ.h
"

13 
COL_ªsu…
 
	$COL_cﬁ‹
(
G_gøph
 
ig
, 
Temp_m≠
 
öôül
, 
Temp_ãmpLi°
 
ªgs
) {

15 
COL_ªsu…
 
ªt
;

16  
ªt
;

17 
	}
}

	@color.h

6 
	sCOL_ªsu…
 {
Temp_m≠
 
	mcﬁ‹ög
; 
Temp_ãmpLi°
 
	m•ûls
;};

7 
COL_ªsu…
 
COL_cﬁ‹
(
G_gøph
 
ig
, 
Temp_m≠
 
öôül
, 
Temp_ãmpLi°
 
ªgs
);

	@env.c

1 
	~<°dio.h
>

2 
	~"utû.h
"

3 
	~"symbﬁ.h
"

4 
	~"ty≥s.h
"

5 
	~"ív.h
"

10 
E_ívíåy
 
	$E_V¨E¡ry
(
Tr_ac˚ss
 
ac˚ss
, 
Ty_ty
 
ty
)

12 
E_ívíåy
 
e
 = 
	`checked_mÆloc
((*e));

13 
e
->
köd
 = 
E_v¨E¡ry
;

14 
e
->
u
.
v¨
.
ty
 =Åy;

15 
e
->
u
.
v¨
.
ac˚ss
 =áccess;

16  
e
;

17 
	}
}

19 
E_ívíåy
 
	$E_FunE¡ry
(
Tr_Àvñ
 
Àvñ
, 
Temp_œbñ
 
œbñ
,

20 
Ty_tyLi°
 
f‹mÆs
, 
Ty_ty
 
ªsu…
)

22 
E_ívíåy
 
e
 = 
	`checked_mÆloc
((*e));

23 
e
->
köd
 = 
E_funE¡ry
;

24 
e
->
u
.
fun
.
Àvñ
 =Üevel;

25 
e
->
u
.
fun
.
œbñ
 =Üabel;

26 
e
->
u
.
fun
.
f‹mÆs
 = formals;

27 
e
->
u
.
fun
.
ªsu…
 =Ñesult;

28  
e
;

29 
	}
}

31 
S_èbÀ
 
	$E_ba£_ãnv
()

33 
S_èbÀ
 
ãnv
 = 
	`S_em±y
();

34 
	`S_íãr
(
ãnv
, 
	`S_Symbﬁ
("öt"), 
	`Ty_I¡
());

35 
	`S_íãr
(
ãnv
, 
	`S_Symbﬁ
("°rög"), 
	`Ty_Såög
());

36  
ãnv
;

37 
	}
}

39 
S_èbÀ
 
	$E_ba£_vív
()

41 
S_èbÀ
 
vív
 = 
	`S_em±y
();

42 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("‹d"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_√wœbñ
(),

43 
	`Ty_TyLi°
(
	`Ty_Såög
(), 
NULL
), 
	`Ty_I¡
()));

44 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("gëch¨"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_√wœbñ
(),

45 
NULL
, 
	`Ty_Såög
()));

46 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("chr"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_√wœbñ
(),

47 
	`Ty_TyLi°
(
	`Ty_I¡
(), 
NULL
), 
	`Ty_Såög
()));

48 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("¥öt"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_√wœbñ
(),

49 
	`Ty_TyLi°
(
	`Ty_Såög
(), 
NULL
), 
	`Ty_Void
()));

50 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("¥öti"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_√wœbñ
(),

51 
	`Ty_TyLi°
(
	`Ty_I¡
(), 
NULL
), 
	`Ty_Void
()));

53  
vív
;

54 
	}
}

	@env.h

1 #i‚de‡
ENV_H


2 
	#ENV_H


	)

4 
	~"å™¶©e.h
"

5 
	~"ãmp.h
"

7 
E_ívíåy_
 *
	tE_ívíåy
;

9 
	sE_ívíåy_
 {

10 íum {
	mE_v¨E¡ry
, 
	mE_funE¡ry
} 
	mköd
;

12 °ru˘ {
Tr_ac˚ss
 
	mac˚ss
; 
Ty_ty
 
	mty
;} 
	mv¨
;

13 °ru˘ {
Tr_Àvñ
 
	mÀvñ
; 
Temp_œbñ
 
	mœbñ
;

14 
Ty_tyLi°
 
	mf‹mÆs
; 
Ty_ty
 
	mªsu…
;} 
	mfun
;

15 } 
	mu
;

18 
E_ívíåy
 
E_V¨E¡ry
(
Tr_ac˚ss
 
ac˚ss
, 
Ty_ty
 
ty
);

19 
E_ívíåy
 
E_FunE¡ry
(
Tr_Àvñ
 
Àvñ
, 
Temp_œbñ
 
œbñ
,

20 
Ty_tyLi°
 
f‹mÆs
, 
Ty_ty
 
ªsu…
);

22 
S_èbÀ
 
E_ba£_ãnv
();

23 
S_èbÀ
 
E_ba£_vív
();

	@errormsg.c

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

9 
	~<°d¨g.h
>

10 
	~"utû.h
"

11 
	~"îr‹msg.h
"

14 
boﬁ
 
	g™yEº‹s

FALSE
;

16 
°rög
 
	gfûeName
 = "";

18 
	glöeNum
 = 1;

20 
	gEM_tokPos
=0;

22 
FILE
 *
yyö
;

24 
	sötLi°
 {
	mi
; 
ötLi°
 *
	mª°
;} *
	tI¡Li°
;

26 
I¡Li°
 
	$ötLi°
(
i
, 
I¡Li°
 
ª°
)

27 {
I¡Li°
 
l

	`checked_mÆloc
( *l);

28 
l
->
i
=i;Ü->
ª°
=rest;

29  
l
;

30 
	}
}

32 
I¡Li°
 
	glöePos
=
NULL
;

34 
	$EM_√wlöe
()

35 {
löeNum
++;

36 
löePos
 = 
	`ötLi°
(
EM_tokPos
,ÜinePos);

37 
	}
}

39 
	$EM_îr‹
(
pos
, *
mesßge
,...)

41 
va_li°
 
≠
;

42 
I¡Li°
 
löes
 = 
löePos
;

43 
num
=
löeNum
;

45 
™yEº‹s
=
TRUE
;

46 
löes
 &&Üöes->
i
 >
pos
)

47 {
löes
ˆöes->
ª°
; 
num
--;}

49 i‡(
fûeName
Ë
	`Ârötf
(
°dîr
,"%s:",fileName);

50 i‡(
löes
Ë
	`Ârötf
(
°dîr
,"%d.%d: ", 
num
, 
pos
-löes->
i
);

51 
	`va_°¨t
(
≠
,
mesßge
);

52 
	`vÂrötf
(
°dîr
, 
mesßge
, 
≠
);

53 
	`va_íd
(
≠
);

54 
	`Ârötf
(
°dîr
,"\n");

55 
	}
}

57 
	$EM_ª£t
(
°rög
 
‚ame
)

59 
™yEº‹s
=
FALSE
; 
fûeName
=
‚ame
; 
löeNum
=1;

60 
löePos
=
	`ötLi°
(0,
NULL
);

61 
yyö
 = 
	`f›í
(
‚ame
,"r");

62 i‡(!
yyö
Ë{
	`EM_îr‹
(0,"ˇ¬Ÿ o≥n"); 
	`exô
(1);}

63 
	}
}

	@errormsg.h

1 #i‚de‡
ERROR_MSG_H


2 
	#ERROR_MSG_H


	)

3 
boﬁ
 
EM_™yEº‹s
;

5 
EM_√wlöe
();

7 
EM_tokPos
;

9 
EM_îr‹
(, 
°rög
,...);

10 
EM_impossibÀ
(
°rög
,...);

11 
EM_ª£t
(
°rög
 
fûíame
);

	@escape.c

1 
	~"utû.h
"

2 
	~"symbﬁ.h
"

3 
	~"absyn.h
"

4 
	~<°dlib.h
>

5 
	~<°dio.h
>

6 
	~"èbÀ.h
"

9 
	$Esc_födEsˇ≥
(
A_exp
 
exp
) {

10 
	}
}

	@escape.h

1 #i‚de‡
ESCAPE_H


2 
	#ESCAPE_H


	)

4 
Esc_födEsˇ≥
(
A_exp
 
exp
);

	@flowgraph.c

1 
	~<°dio.h
>

2 
	~"utû.h
"

3 
	~"symbﬁ.h
"

4 
	~"ãmp.h
"

5 
	~"åì.h
"

6 
	~"absyn.h
"

7 
	~"as£m.h
"

8 
	~"‰ame.h
"

9 
	~"gøph.h
"

10 
	~"Êowgøph.h
"

11 
	~"îr‹msg.h
"

12 
	~"èbÀ.h
"

15 
Temp_ãmpLi°
 
	$FG_def
(
G_node
 
n
) {

17 
	`as£π
(
n
 && "InvalidÇ in FG_def");

18 
AS_ö°r
 
i
 = 
	`G_nodeInfo
(
n
);

19 
i
->
köd
) {

20 
I_OPER
:  
i
->
u
.
OPER
.
d°
;

21 
I_LABEL
:  
NULL
;

22 
I_MOVE
:  
i
->
u
.
MOVE
.
d°
;

24 
	}
}

26 
Temp_ãmpLi°
 
	$FG_u£
(
G_node
 
n
) {

28 
	`as£π
(
n
 && "InvalidÇ in FG_use");

29 
AS_ö°r
 
i
 = 
	`G_nodeInfo
(
n
);

30 
i
->
köd
) {

31 
I_OPER
:  
i
->
u
.
OPER
.
§c
;

32 
I_LABEL
:  
NULL
;

33 
I_MOVE
:  
i
->
u
.
MOVE
.
§c
;

35  
NULL
;

36 
	}
}

38 
boﬁ
 
	$FG_isMove
(
G_node
 
n
) {

40 
	`as£π
(
n
 && "InvalidÇ in FG_isMove");

41 
AS_ö°r
 
i
 = 
	`G_nodeInfo
(
n
);

42 
	`as£π
(
i
 && "Invalid i in FG_isMove");

43  
i
->
köd
 =
I_MOVE
;

44 
	}
}

46 
	$FG_addJumps
(
TAB_èbÀ
 
t
, 
G_node
 
n
)

48 
AS_ö°r
 
i
 = (AS_ö°r)
	`G_nodeInfo
(
n
);

49 i‡(!
i
->
u
.
OPER
.
jumps
) ;

51 
Temp_œbñLi°
 
é
 = 
i
->
u
.
OPER
.
jumps
->
œbñs
;

52 
G_node
 
√ighbour
 = 
NULL
;

53 ; 
é
;Å»é->
èû
) {

54 
√ighbour
 = (
G_node
)
	`TAB_look
(
t
, 
é
->
hód
);

55 i‡(
√ighbour
) {

56 i‡(!
	`G_g€sTo
(
n
, 
√ighbour
)Ë
	`G_addEdge
(n,Çeighbour);

58 
	`¥ötf
("ˇn'àfödÜabñ %s\n", 
	`S_«me
(
é
->
hód
));

59 
	`as£π
(0);

62 
	}
}

64 
	$¥ötInsNode
(* 
ös
)

66 
	`¥ötf
("köd %d ", ((
AS_ö°r
Ë
ös
)->
köd
);

67 
	}
}

69 
G_gøph
 
	$FG_As£mFlowGøph
(
AS_ö°rLi°
 
û
, 
F_‰ame
 
f
) {

71 
G_gøph
 
g
 = 
	`G_Gøph
();

72 
G_node
 
cuº
 = 
NULL
, 
¥ev
 = NULL;

73 
G_nodeLi°
 
nodes
 = 
NULL
;

74 
TAB_èbÀ
 
œbñ_tb
 = 
	`TAB_em±y
();

76 
AS_ö°r
 
i
;

77 ; 
û
; i»û->
èû
) {

78 
i
 = 
û
->
hód
;

79 
cuº
 = 
	`G_Node
(
g
, 
i
);

80 i‡(
¥ev
Ë
	`G_addEdge
’ªv, 
cuº
);

81 
i
->
köd
) {

82 
I_LABEL
:

84 
	`TAB_íãr
(
œbñ_tb
, 
i
->
u
.
LABEL
.
œbñ
, 
cuº
);

87 
I_MOVE
:

88 
I_OPER
: 
nodes
 = 
	`G_NodeLi°
(
cuº
,Çodes); ;

90 
¥ev
 = 
cuº
;

93 ; 
nodes
;Çode†nodes->
èû
) {

94 
cuº
 = 
nodes
->
hód
;

95 i‡(((
AS_ö°r
Ë
	`G_nodeInfo
(
cuº
))->
köd
 =
I_OPER
)

96 
	`FG_addJumps
(
œbñ_tb
, 
cuº
);

98 
	`G_show
(
°dout
, 
	`G_nodes
(
g
), 
¥ötInsNode
);

99  
g
;

100 
	}
}

	@flowgraph.h

5 
Temp_ãmpLi°
 
FG_def
(
G_node
 
n
);

6 
Temp_ãmpLi°
 
FG_u£
(
G_node
 
n
);

7 
boﬁ
 
FG_isMove
(
G_node
 
n
);

8 
G_gøph
 
FG_As£mFlowGøph
(
AS_ö°rLi°
 
û
, 
F_‰ame
 
f
);

	@frame.h

4 #i‚de‡
FRAME_H


5 
	#FRAME_H


	)

7 
F_‰ame_
 *
	tF_‰ame
;

8 
F_ac˚ss_
 *
	tF_ac˚ss
;

10 
Temp_m≠
 
	gF_ãmpM≠
;

13 
F_‰ag_
 *
	tF_‰ag
;

14 
	sF_‰ag_
 {íum {
	mF_°rögFøg
, 
	mF_¥ocFøg
} 
	mköd
;

16 °ru˘ {
Temp_œbñ
 
	mœbñ
; 
°rög
 
	m°r
;} 
	m°rögg
;

17 °ru˘ {
T_°m
 
	mbody
; 
F_‰ame
 
	m‰ame
;} 
	m¥oc
;

18 } 
	mu
;

21 
F_‰ag
 
F_SåögFøg
(
Temp_œbñ
 
œbñ
, 
°rög
 
°r
);

22 
F_‰ag
 
F_ProcFøg
(
T_°m
 
body
, 
F_‰ame
 
‰ame
);

23 
T_°m
 
F_¥ocE¡ryExô1
(
F_‰ame
 
‰ame
, T_°m 
°m
);

25 
F_ac˚ssLi°_
 *
	tF_ac˚ssLi°
;

26 
	sF_ac˚ssLi°_
 {
F_ac˚ss
 
	mhód
; 
F_ac˚ssLi°
 
	mèû
;};

28 
F_‰ame
 
F_√wFøme
(
Temp_œbñ
 
«me
, 
U_boﬁLi°
 
f‹mÆs
);

29 
Temp_œbñ
 
F_«me
(
F_‰ame
 
f
);

30 
F_ac˚ssLi°
 
F_f‹mÆs
(
F_‰ame
 
f
);

31 
F_ac˚ss
 
F_ÆlocLoˇl
(
F_‰ame
 
f
, 
boﬁ
 
esˇ≥
);

34 
F_‰agLi°_
 *
	tF_‰agLi°
;

35 
	sF_‰agLi°_
 {
F_‰ag
 
	mhód
; 
F_‰agLi°
 
	mèû
;};

36 
F_‰agLi°
 
F_FøgLi°
(
F_‰ag
 
hód
, F_‰agLi° 
èû
);

39 
Temp_ãmp
 
F_FP
();

40 c⁄° 
F_w‹dSize
;

41 
T_exp
 
F_Exp
(
F_ac˚ss
 
acc
, T_ex∞
‰amePå
);

42 
T_exp
 
F_°rög
(
Temp_œbñ
 
œb
, 
°rög
 
lô
);

43 
T_exp
 
F_exã∫ÆCÆl
(
°rög
, 
T_expLi°
);

44 
Temp_ãmp
 
F_RV
();

46 
F_‰agLi°
 
F_gëFøgLi°
();

50 
Temp_ãmpLi°
 
F_ªgi°îs
();

	@graph.c

6 
	~<°dio.h
>

7 
	~"utû.h
"

8 
	~"symbﬁ.h
"

9 
	~"ãmp.h
"

10 
	~"åì.h
"

11 
	~"absyn.h
"

12 
	~"as£m.h
"

13 
	~"‰ame.h
"

14 
	~"gøph.h
"

15 
	~"îr‹msg.h
"

16 
	~"èbÀ.h
"

18 
	sG_gøph_
 {
	mnodecou¡
;

19 
G_nodeLi°
 
	mmynodes
, 
	mmyœ°
;

22 
	sG_node_
 {

23 
G_gøph
 
	mmygøph
;

24 
	mmykey
;

25 
G_nodeLi°
 
	msuccs
;

26 
G_nodeLi°
 
	m¥eds
;

27 *
	möfo
;

30 
G_gøph
 
	$G_Gøph
()

31 {
G_gøph
 
g
 = (G_gøphË
	`checked_mÆloc
( *g);

32 
g
->
nodecou¡
 = 0;

33 
g
->
mynodes
 = 
NULL
;

34 
g
->
myœ°
 = 
NULL
;

35  
g
;

36 
	}
}

38 
G_nodeLi°
 
	$G_NodeLi°
(
G_node
 
hód
, 
G_nodeLi°
 
èû
)

39 {
G_nodeLi°
 
n
 = (G_nodeLi°Ë
	`checked_mÆloc
( *n);

40 
n
->
hód
=head;

41 
n
->
èû
=tail;

42  
n
;

43 
	}
}

46 
G_node
 
	$G_Node
(
G_gøph
 
g
, *
öfo
)

47 {
G_node
 
n
 = (G_node)
	`checked_mÆloc
( *n);

48 
G_nodeLi°
 
p
 = 
	`G_NodeLi°
(
n
, 
NULL
);

49 
	`as£π
(
g
);

50 
n
->
mygøph
=
g
;

51 
n
->
mykey
=
g
->
nodecou¡
++;

53 i‡(
g
->
myœ°
==
NULL
)

54 
g
->
mynodes
=g->
myœ°
=
p
;

55 
g
->
myœ°
 = g->myœ°->
èû
 = 
p
;

57 
n
->
succs
=
NULL
;

58 
n
->
¥eds
=
NULL
;

59 
n
->
öfo
=info;

60  
n
;

61 
	}
}

63 
G_nodeLi°
 
	$G_nodes
(
G_gøph
 
g
)

65 
	`as£π
(
g
);

66  
g
->
mynodes
;

67 
	}
}

70 
boﬁ
 
	$G_öNodeLi°
(
G_node
 
a
, 
G_nodeLi°
 
l
) {

71 
G_nodeLi°
 
p
;

72 
p
=
l
;Ö!=
NULL
;Öı->
èû
)

73 i‡(
p
->
hód
==
a
Ë 
TRUE
;

74  
FALSE
;

75 
	}
}

77 
	$G_addEdge
(
G_node
 
‰om
, G_nodê
to
) {

78 
	`as£π
(
‰om
);ás£π(
to
);

79 
	`as£π
(
‰om
->
mygøph
 =
to
->mygraph);

80 i‡(
	`G_g€sTo
(
‰om
, 
to
)) ;

81 
to
->
¥eds
=
	`G_NodeLi°
(
‰om
,Åo->preds);

82 
‰om
->
succs
=
	`G_NodeLi°
(
to
, from->succs);

83 
	}
}

85 
G_nodeLi°
 
	$dñëe
(
G_node
 
a
, 
G_nodeLi°
 
l
) {

86 
	`as£π
(
a
 && 
l
);

87 i‡(
a
==
l
->
hód
ËÜ->
èû
;

88  
	`G_NodeLi°
(
l
->
hód
, 
	`dñëe
(
a
,Ü->
èû
));

89 
	}
}

91 
	$G_rmEdge
(
G_node
 
‰om
, G_nodê
to
) {

92 
	`as£π
(
‰om
 && 
to
);

93 
to
->
¥eds
=
	`dñëe
(
‰om
,to->preds);

94 
‰om
->
succs
=
	`dñëe
(
to
,from->succs);

95 
	}
}

100 
G_show
(
FILE
 *
out
, 
G_nodeLi°
 
p
, 
	$showInfo
(*)) {

101 ; 
p
!=
NULL
;Öı->
èû
) {

102 
G_node
 
n
 = 
p
->
hód
;

103 
G_nodeLi°
 
q
;

104 
	`as£π
(
n
);

105 i‡(
showInfo
)

106 
	`showInfo
(
n
->
öfo
);

107 
	`Ârötf
(
out
, " (%d): ", 
n
->
mykey
);

108 
q
=
	`G_succ
(
n
); q!=
NULL
; q=q->
èû
)

109 
	`Ârötf
(
out
, "%d ", 
q
->
hód
->
mykey
);

110 
	`Ârötf
(
out
, "\n");

112 
	}
}

114 
G_nodeLi°
 
	$G_succ
(
G_node
 
n
Ë{ 
	`as£π
“); Ç->
succs
; 
	}
}

116 
G_nodeLi°
 
	$G_¥ed
(
G_node
 
n
Ë{ 
	`as£π
“); Ç->
¥eds
; 
	}
}

118 
boﬁ
 
	$G_g€sTo
(
G_node
 
‰om
, G_nodê
n
) {

119  
	`G_öNodeLi°
(
n
, 
	`G_succ
(
‰om
));

120 
	}
}

123 
	$öDegªe
(
G_node
 
n
)

124 { 
deg
 = 0;

125 
G_nodeLi°
 
p
;

126 
p
=
	`G_¥ed
(
n
);Ö!=
NULL
;Öı->
èû
Ë
deg
++;

127  
deg
;

128 
	}
}

131 
	$outDegªe
(
G_node
 
n
)

132 { 
deg
 = 0;

133 
G_nodeLi°
 
p
;

134 
p
=
	`G_succ
(
n
);Ö!=
NULL
;Öı->
èû
Ë
deg
++;

135  
deg
;

136 
	}
}

138 
	$G_degªe
(
G_node
 
n
Ë{ 
	`öDegªe
“)+
	`outDegªe
“);
	}
}

141 
G_nodeLi°
 
	$ˇt
(
G_nodeLi°
 
a
, G_nodeLi° 
b
) {

142 i‡(
a
==
NULL
Ë 
b
;

143  
	`G_NodeLi°
(
a
->
hód
, 
	`ˇt
◊->
èû
, 
b
));

144 
	}
}

148 
G_nodeLi°
 
	$G_adj
(
G_node
 
n
Ë{ 
	`ˇt
(
	`G_succ
“), 
	`G_¥ed
“));
	}
}

150 *
	$G_nodeInfo
(
G_node
 
n
Ë{Ç->
öfo
;
	}
}

156 
G_èbÀ
 
	$G_em±y
() {

157  
	`TAB_em±y
();

158 
	}
}

160 
	$G_íãr
(
G_èbÀ
 
t
, 
G_node
 
node
, *
vÆue
)

162 
	`TAB_íãr
(
t
, 
node
, 
vÆue
);

163 
	}
}

165 *
	$G_look
(
G_èbÀ
 
t
, 
G_node
 
node
)

167  
	`TAB_look
(
t
, 
node
);

168 
	}
}

	@graph.h

5 
G_gøph_
 *
	tG_gøph
;

6 
G_node_
 *
	tG_node
;

8 
G_nodeLi°_
 *
	tG_nodeLi°
;

9 
	sG_nodeLi°_
 { 
G_node
 
	mhód
; 
G_nodeLi°
 
	mèû
;};

12 
G_gøph
 
G_Gøph
();

14 
G_node
 
G_Node
(
G_gøph
 
g
, *
öfo
);

17 
G_nodeLi°
 
G_NodeLi°
(
G_node
 
hód
, G_nodeLi° 
èû
);

20 
G_nodeLi°
 
G_nodes
(
G_gøph
 
g
);

23 
boﬁ
 
G_öNodeLi°
(
G_node
 
a
, 
G_nodeLi°
 
l
);

27 
G_addEdge
(
G_node
 
‰om
, G_nodê
to
);

30 
G_rmEdge
(
G_node
 
‰om
, G_nodê
to
);

34 
G_show
(
FILE
 *
out
, 
G_nodeLi°
 
p
, 
showInfo
(*));

37 
G_nodeLi°
 
G_succ
(
G_node
 
n
);

40 
G_nodeLi°
 
G_¥ed
(
G_node
 
n
);

43 
boﬁ
 
G_g€sTo
(
G_node
 
‰om
, G_nodê
n
);

46 
G_degªe
(
G_node
 
n
);

49 
G_nodeLi°
 
G_adj
(
G_node
 
n
);

52 *
G_nodeInfo
(
G_node
 
n
);

55 
TAB_èbÀ_
 *
	tG_èbÀ
;

58 
G_èbÀ
 
G_em±y
();

61 
G_íãr
(
G_èbÀ
 
t
, 
G_node
 
node
, *
vÆue
);

64 *
G_look
(
G_èbÀ
 
t
, 
G_node
 
node
);

	@lex.yy.c

4 
	#YY_INT_ALIGNED
 

	)

8 
	#FLEX_SCANNER


	)

9 
	#YY_FLEX_MAJOR_VERSION
 2

	)

10 
	#YY_FLEX_MINOR_VERSION
 6

	)

11 
	#YY_FLEX_SUBMINOR_VERSION
 0

	)

12 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

13 
	#FLEX_BETA


	)

19 
	~<°dio.h
>

20 
	~<°rög.h
>

21 
	~<î∫o.h
>

22 
	~<°dlib.h
>

28 #i‚de‡
FLEXINT_H


29 
	#FLEXINT_H


	)

33 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

38 #i‚de‡
__STDC_LIMIT_MACROS


39 
	#__STDC_LIMIT_MACROS
 1

	)

42 
	~<öây≥s.h
>

43 
öt8_t
 
	tÊex_öt8_t
;

44 
uöt8_t
 
	tÊex_uöt8_t
;

45 
öt16_t
 
	tÊex_öt16_t
;

46 
uöt16_t
 
	tÊex_uöt16_t
;

47 
öt32_t
 
	tÊex_öt32_t
;

48 
uöt32_t
 
	tÊex_uöt32_t
;

50 sig√d 
	tÊex_öt8_t
;

51 
	tÊex_öt16_t
;

52 
	tÊex_öt32_t
;

53 
	tÊex_uöt8_t
;

54 
	tÊex_uöt16_t
;

55 
	tÊex_uöt32_t
;

58 #i‚de‡
INT8_MIN


59 
	#INT8_MIN
 (-128)

	)

61 #i‚de‡
INT16_MIN


62 
	#INT16_MIN
 (-32767-1)

	)

64 #i‚de‡
INT32_MIN


65 
	#INT32_MIN
 (-2147483647-1)

	)

67 #i‚de‡
INT8_MAX


68 
	#INT8_MAX
 (127)

	)

70 #i‚de‡
INT16_MAX


71 
	#INT16_MAX
 (32767)

	)

73 #i‚de‡
INT32_MAX


74 
	#INT32_MAX
 (2147483647)

	)

76 #i‚de‡
UINT8_MAX


77 
	#UINT8_MAX
 (255U)

	)

79 #i‚de‡
UINT16_MAX


80 
	#UINT16_MAX
 (65535U)

	)

82 #i‚de‡
UINT32_MAX


83 
	#UINT32_MAX
 (4294967295U)

	)

90 #ifde‡
__˝lu•lus


93 
	#YY_USE_CONST


	)

98 #i‡
deföed
 (
__STDC__
)

100 
	#YY_USE_CONST


	)

105 #ifde‡
YY_USE_CONST


106 
	#yyc⁄°
 c⁄°

	)

108 
	#yyc⁄°


	)

112 
	#YY_NULL
 0

	)

119 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

125 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

131 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

132 
	#YYSTATE
 
YY_START


	)

135 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

138 
	#YY_NEW_FILE
 
	`yyª°¨t
(
yyö
 )

	)

140 
	#YY_END_OF_BUFFER_CHAR
 0

	)

143 #i‚de‡
YY_BUF_SIZE


144 #ifde‡
__ü64__


149 
	#YY_BUF_SIZE
 32768

	)

151 
	#YY_BUF_SIZE
 16384

	)

157 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

159 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


160 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

161 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

164 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


165 
	#YY_TYPEDEF_YY_SIZE_T


	)

166 
size_t
 
	tyy_size_t
;

169 
yy_size_t
 
yyÀng
;

171 
FILE
 *
yyö
, *
yyout
;

173 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

174 
	#EOB_ACT_END_OF_FILE
 1

	)

175 
	#EOB_ACT_LAST_MATCH
 2

	)

177 
	#YY_LESS_LINENO
(
n
)

	)

178 
	#YY_LINENO_REWIND_TO
(
±r
)

	)

181 
	#yyÀss
(
n
) \

185 
yyÀss_ma¸o_¨g
 = (
n
); \

186 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

187 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

188 
YY_RESTORE_YY_MORE_OFFSET
 \

189 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

190 
YY_DO_BEFORE_ACTION
; \

192  0 )

	)

194 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

196 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


197 
	#YY_STRUCT_YY_BUFFER_STATE


	)

198 
	syy_buf„r_°©e


200 
FILE
 *
	myy_öput_fûe
;

202 *
	myy_ch_buf
;

203 *
	myy_buf_pos
;

208 
yy_size_t
 
	myy_buf_size
;

213 
	myy_n_ch¨s
;

219 
	myy_is_our_buf„r
;

226 
	myy_is_öãø˘ive
;

232 
	myy_©_bﬁ
;

234 
	myy_bs_löío
;

235 
	myy_bs_cﬁumn
;

240 
	myy_fûl_buf„r
;

242 
	myy_buf„r_°©us
;

244 
	#YY_BUFFER_NEW
 0

	)

245 
	#YY_BUFFER_NORMAL
 1

	)

256 
	#YY_BUFFER_EOF_PENDING
 2

	)

262 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

263 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

264 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

272 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

273 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

274 : 
NULL
)

	)

279 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

282 
	gyy_hﬁd_ch¨
;

283 
	gyy_n_ch¨s
;

284 
yy_size_t
 
	gyyÀng
;

287 *
	gyy_c_buf_p
 = (*) 0;

288 
	gyy_öô
 = 0;

289 
	gyy_°¨t
 = 0;

294 
	gyy_did_buf„r_swôch_⁄_eof
;

296 
yyª°¨t
 (
FILE
 *
öput_fûe
 );

297 
yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

298 
YY_BUFFER_STATE
 
yy_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

299 
yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

300 
yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

301 
yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

302 
yyp›_buf„r_°©e
 ();

304 
yyísuª_buf„r_°ack
 ();

305 
yy_lﬂd_buf„r_°©e
 ();

306 
yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

308 
	#YY_FLUSH_BUFFER
 
	`yy_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

310 
YY_BUFFER_STATE
 
yy_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

311 
YY_BUFFER_STATE
 
yy_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

312 
YY_BUFFER_STATE
 
yy_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
yy_size_t
 
Àn
 );

314 *
yyÆloc
 (
yy_size_t
 );

315 *
yyªÆloc
 (*,
yy_size_t
 );

316 
yy‰ì
 (* );

318 
	#yy_√w_buf„r
 
yy_¸óã_buf„r


	)

320 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

322 i‡–! 
YY_CURRENT_BUFFER
 ){ \

323 
	`yyísuª_buf„r_°ack
 (); \

324 
YY_CURRENT_BUFFER_LVALUE
 = \

325 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 ); \

327 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

328 }

	)

330 
	#yy_£t_bﬁ
(
©_bﬁ
) \

332 i‡–! 
YY_CURRENT_BUFFER
 ){\

333 
	`yyísuª_buf„r_°ack
 (); \

334 
YY_CURRENT_BUFFER_LVALUE
 = \

335 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 ); \

337 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

338 }

	)

340 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

344 
	tYY_CHAR
;

346 
FILE
 *
	gyyö
 = (FILE *Ë0, *
	gyyout
 = (FILE *) 0;

348 
	tyy_°©e_ty≥
;

350 
yylöío
;

352 
	gyylöío
 = 1;

354 *
yyãxt
;

355 #ifde‡
yyãxt_±r


356 #unde‡
yyãxt_±r


358 
	#yyãxt_±r
 
yyãxt


	)

360 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

361 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

362 
yy_gë_√xt_buf„r
 ();

363 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

364 
__©åibuã__
((
__n‹ëu∫__
))

366 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

371 
	#YY_DO_BEFORE_ACTION
 \

372 (
yyãxt_±r
Ë
yy_bp
; \

373 
yyÀng
 = (
size_t
Ë(
yy_˝
 - 
yy_bp
); \

374 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

375 *
yy_˝
 = '\0'; \

376 (
yy_c_buf_p
Ë
yy_˝
;

	)

378 
	#YY_NUM_RULES
 60

	)

379 
	#YY_END_OF_BUFFER
 61

	)

382 
	syy_å™s_öfo


384 
Êex_öt32_t
 
	myy_vîify
;

385 
Êex_öt32_t
 
	myy_nxt
;

387 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[114] =

404 
yyc⁄°
 
YY_CHAR
 
	gyy_ec
[256] =

436 
yyc⁄°
 
YY_CHAR
 
	gyy_mëa
[52] =

446 
yyc⁄°
 
Êex_uöt16_t
 
	gyy_ba£
[118] =

463 
yyc⁄°
 
Êex_öt16_t
 
	gyy_def
[118] =

480 
yyc⁄°
 
Êex_uöt16_t
 
	gyy_nxt
[316] =

519 
yyc⁄°
 
Êex_öt16_t
 
	gyy_chk
[316] =

558 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

559 *
	gyy_œ°_ac˚±ög_˝os
;

561 
yy_Êex_debug
;

562 
	gyy_Êex_debug
 = 0;

567 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

568 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

569 
	#YY_MORE_ADJ
 0

	)

570 
	#YY_RESTORE_YY_MORE_OFFSET


	)

571 *
	gyyãxt
;

574 
	~<°rög.h
>

575 
	~"utû.h
"

576 
	~"symbﬁ.h
"

577 
	~"îr‹msg.h
"

578 
	~"absyn.h
"

579 
	~"y.èb.h
"

581 
	gch¨Pos
=1;

583 
	$yywøp
()

585 
ch¨Pos
=1;

587 
	}
}

589 
	$adju°
()

591 
EM_tokPos
=
ch¨Pos
;

592 
ch¨Pos
+=
yyÀng
;

593 
	}
}

599 
	gcommC¡
 = 0;

601 *
	g°rbuf
;

602 
	g°rLí
, 
	gbufLí
, 
	g°¨tPos
;

604 
	$°rInô
()

606 
bufLí
 = 4;

607 
°rbuf
 = 
	`checked_mÆloc
(
bufLí
);

608 
	`bzîo
(
°rbuf
, 
bufLí
);

609 
°rbuf
[0]='\0';

610 
°rLí
 = 0;

611 
	}
}

613 
	$°rAµíd
(c⁄° *
s
)

615 
√wLí
 = 
	`°æí
(
s
);

616 
°rLí
 +
√wLí
;

617 i‡(
°rLí
 + 1 > 
bufLí
) {

618 
bufLí
 < (
°rLí
 + 1)) { bufLen *= 2; }

620 *
√wbuf
 = 
	`checked_mÆloc
(
bufLí
);

621 
	`°r˝y
(
√wbuf
, 
°rbuf
);

622 
	`‰ì
(
°rbuf
);

623 
°rbuf
 = 
√wbuf
;

625 
	`°rˇt
(
°rbuf
, 
s
);

626 
	}
}

628 
	$°rFöish
()

630 
°¨tPos
 = 0;

631 
	`‰ì
(
°rbuf
);

632 
	}
}

634 
	$checkNewlöe
(*
ãxt
) {

635 
Àn
 = 
	`°æí
(
ãxt
), 
i
;

636 
i
 = 0; i < 
Àn
; ++i) {

637 i‡(
ãxt
[
i
] ='\n'Ë
	`EM_√wlöe
();

639 
	}
}

649 
	#INITIAL
 0

	)

650 
	#COMMENT
 1

	)

651 
	#STR
 2

	)

653 #i‚de‡
YY_NO_UNISTD_H


658 
	~<uni°d.h
>

661 #i‚de‡
YY_EXTRA_TYPE


662 
	#YY_EXTRA_TYPE
 *

	)

665 
yy_öô_globÆs
 ();

670 
yyÀx_de°roy
 ();

672 
yygë_debug
 ();

674 
yy£t_debug
 (
debug_Êag
 );

676 
YY_EXTRA_TYPE
 
yygë_exåa
 ();

678 
yy£t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 );

680 
FILE
 *
yygë_ö
 ();

682 
yy£t_ö
 (
FILE
 * 
_ö_°r
 );

684 
FILE
 *
yygë_out
 ();

686 
yy£t_out
 (
FILE
 * 
_out_°r
 );

688 
yy_size_t
 
yygë_Àng
 ();

690 *
yygë_ãxt
 ();

692 
yygë_löío
 ();

694 
yy£t_löío
 (
_löe_numbî
 );

700 #i‚de‡
YY_SKIP_YYWRAP


701 #ifde‡
__˝lu•lus


702 "C" 
yywøp
 ();

704 
yywøp
 ();

708 #i‚de‡
YY_NO_UNPUT


710 
yyu≈ut
 (
c
,*
buf_±r
 );

714 #i‚de‡
yyãxt_±r


715 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

718 #ifde‡
YY_NEED_STRLEN


719 
yy_Êex_°æí
 (
yyc⁄°
 * );

722 #i‚de‡
YY_NO_INPUT


724 #ifde‡
__˝lu•lus


725 
yyöput
 ();

727 
öput
 ();

733 #i‚de‡
YY_READ_BUF_SIZE


734 #ifde‡
__ü64__


736 
	#YY_READ_BUF_SIZE
 16384

	)

738 
	#YY_READ_BUF_SIZE
 8192

	)

743 #i‚de‡
ECHO


747 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
yyãxt
, 
yyÀng
, 1, 
yyout
 )Ë{} } 0)

	)

753 #i‚de‡
YY_INPUT


754 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

755 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

757 
c
 = '*'; \

758 
size_t
 
n
; \

759  
n
 = 0;Ç < 
max_size
 && \

760 (
c
 = 
	`gëc
–
yyö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

761 
buf
[
n
] = (Ë
c
; \

762 i‡–
c
 == '\n' ) \

763 
buf
[
n
++] = (Ë
c
; \

764 i‡–
c
 =
EOF
 && 
	`„º‹
–
yyö
 ) ) \

765 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

766 
ªsu…
 = 
n
; \

770 
î∫o
=0; \

771  (
ªsu…
 = 
	`‰ód
(
buf
, 1, 
max_size
, 
yyö
))==0 && 
	`„º‹
(yyin)) \

773 if–
î∫o
 !
EINTR
) \

775 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

778 
î∫o
=0; \

779 
	`˛óªº
(
yyö
); \

783 

	)

790 #i‚de‡
yyãrmö©e


791 
	#yyãrmö©e
(Ë 
YY_NULL


	)

795 #i‚de‡
YY_START_STACK_INCR


796 
	#YY_START_STACK_INCR
 25

	)

800 #i‚de‡
YY_FATAL_ERROR


801 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

809 #i‚de‡
YY_DECL


810 
	#YY_DECL_IS_OURS
 1

	)

812 
yyÀx
 ();

814 
	#YY_DECL
 
	`yyÀx
 ()

	)

820 #i‚de‡
YY_USER_ACTION


821 
	#YY_USER_ACTION


	)

825 #i‚de‡
YY_BREAK


826 
	#YY_BREAK
 ;

	)

829 
	#YY_RULE_SETUP
 \

830 
YY_USER_ACTION


	)

834 
	gYY_DECL


836 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

837 *
	gyy_˝
, *
	gyy_bp
;

838 
	gyy_a˘
;

840 i‡–!(
	gyy_öô
) )

842 (
	gyy_öô
) = 1;

844 #ifde‡
YY_USER_INIT


845 
	gYY_USER_INIT
;

848 i‡–! (
	gyy_°¨t
) )

849 (
	gyy_°¨t
) = 1;

851 i‡–! 
	gyyö
 )

852 
	gyyö
 = 
°dö
;

854 i‡–! 
	gyyout
 )

855 
	gyyout
 = 
°dout
;

857 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

858 
yyísuª_buf„r_°ack
 ();

859 
	gYY_CURRENT_BUFFER_LVALUE
 =

860 
yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 );

863 
yy_lﬂd_buf„r_°©e
( );

874 
	gyy_˝
 = (
yy_c_buf_p
);

877 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

882 
	gyy_bp
 = 
yy_˝
;

884 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

885 
	gyy_m©ch
:

888 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)] ;

889 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

891 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

892 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

894  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

896 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

897 i‡–
	gyy_cuºít_°©e
 >= 114 )

898 
yy_c
 = 
yy_mëa
[() yy_c];

900 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

901 ++
	gyy_˝
;

903  
	gyy_ba£
[
yy_cuºít_°©e
] != 264 );

905 
	gyy_föd_a˘i⁄
:

906 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

907 i‡–
	gyy_a˘
 == 0 )

909 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

910 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

911 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

914 
	gYY_DO_BEFORE_ACTION
;

916 
	gdo_a˘i⁄
:

918  
yy_a˘
 )

922 *
yy_˝
 = (
yy_hﬁd_ch¨
);

923 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

924 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

925 
	gyy_föd_a˘i⁄
;

928 
YY_RULE_SETUP


930 { 
adju°
();  
	gARRAY
; }

931 
YY_BREAK


933 
YY_RULE_SETUP


935 { 
adju°
();  
	gIF
; }

936 
YY_BREAK


938 
YY_RULE_SETUP


940 { 
adju°
();  
	gTHEN
; }

941 
YY_BREAK


943 
YY_RULE_SETUP


945 { 
adju°
();  
	gELSE
; }

946 
YY_BREAK


948 
YY_RULE_SETUP


950 { 
adju°
();  
	gFOR
; }

951 
YY_BREAK


953 
YY_RULE_SETUP


955 { 
adju°
();  
	gTO
; }

956 
YY_BREAK


958 
YY_RULE_SETUP


960 { 
adju°
();  
	gWHILE
; }

961 
YY_BREAK


963 
YY_RULE_SETUP


965 { 
adju°
();  
	gDO
; }

966 
YY_BREAK


968 
YY_RULE_SETUP


970 { 
adju°
();  
	gLET
; }

971 
YY_BREAK


973 
YY_RULE_SETUP


975 { 
adju°
();  
	gIN
; }

976 
YY_BREAK


978 
YY_RULE_SETUP


980 { 
adju°
();  
	gEND
; }

981 
YY_BREAK


983 
YY_RULE_SETUP


985 { 
adju°
();  
	gOF
; }

986 
YY_BREAK


988 
YY_RULE_SETUP


990 { 
adju°
();  
	gBREAK
; }

991 
YY_BREAK


993 
YY_RULE_SETUP


995 { 
adju°
();  
	gNIL
; }

996 
YY_BREAK


998 
YY_RULE_SETUP


1000 { 
adju°
();  
	gFUNCTION
; }

1001 
YY_BREAK


1003 
YY_RULE_SETUP


1005 { 
adju°
();  
	gVAR
; }

1006 
YY_BREAK


1008 
YY_RULE_SETUP


1010 { 
adju°
();  
	gTYPE
; }

1011 
YY_BREAK


1015 
YY_RULE_SETUP


1017 { 
adju°
(); 
	gyylvÆ
.
	gsvÆ
=
Såög
(
yyãxt
);  
	gID
; }

1018 
YY_BREAK


1020 
YY_RULE_SETUP


1022 { 
adju°
(); 
	gyylvÆ
.
	givÆ
=
©oi
(
yyãxt
);  
	gINT
; }

1023 
YY_BREAK


1025 
YY_RULE_SETUP


1027 { 
adju°
(); ; }

1028 
YY_BREAK


1030 
YY_RULE_SETUP


1032 { 
adju°
();  
	gCOMMA
; }

1033 
YY_BREAK


1035 
YY_RULE_SETUP


1037 { 
adju°
();  
	gASSIGN
; }

1038 
YY_BREAK


1040 
YY_RULE_SETUP


1042 { 
adju°
();  
	gCOLON
; }

1043 
YY_BREAK


1045 
YY_RULE_SETUP


1047 { 
adju°
();  
	gSEMICOLON
; }

1048 
YY_BREAK


1050 
YY_RULE_SETUP


1052 { 
adju°
();  
	gLPAREN
; }

1053 
YY_BREAK


1055 
YY_RULE_SETUP


1057 { 
adju°
();  
	gRPAREN
; }

1058 
YY_BREAK


1060 
YY_RULE_SETUP


1062 { 
adju°
();  
	gLBRACK
; }

1063 
YY_BREAK


1065 
YY_RULE_SETUP


1067 { 
adju°
();  
	gRBRACK
; }

1068 
YY_BREAK


1070 
YY_RULE_SETUP


1072 { 
adju°
();  
	gLBRACE
; }

1073 
YY_BREAK


1075 
YY_RULE_SETUP


1077 { 
adju°
();  
	gRBRACE
; }

1078 
YY_BREAK


1080 
YY_RULE_SETUP


1082 { 
adju°
();  
	gDOT
; }

1083 
YY_BREAK


1085 
YY_RULE_SETUP


1087 { 
adju°
();  
	gPLUS
; }

1088 
YY_BREAK


1090 
YY_RULE_SETUP


1092 { 
adju°
();  
	gMINUS
; }

1093 
YY_BREAK


1095 
YY_RULE_SETUP


1097 { 
adju°
();  
	gTIMES
; }

1098 
YY_BREAK


1100 
YY_RULE_SETUP


1102 { 
adju°
();  
	gDIVIDE
; }

1103 
YY_BREAK


1105 
YY_RULE_SETUP


1107 { 
adju°
();  
	gEQ
; }

1108 
YY_BREAK


1110 
YY_RULE_SETUP


1112 { 
adju°
();  
	gNEQ
; }

1113 
YY_BREAK


1115 
YY_RULE_SETUP


1117 { 
adju°
();  
	gLT
; }

1118 
YY_BREAK


1120 
YY_RULE_SETUP


1122 { 
adju°
();  
	gLE
; }

1123 
YY_BREAK


1125 
YY_RULE_SETUP


1127 { 
adju°
();  
	gGT
; }

1128 
YY_BREAK


1130 
YY_RULE_SETUP


1132 { 
adju°
();  
	gGE
; }

1133 
YY_BREAK


1135 
YY_RULE_SETUP


1137 { 
adju°
();  
	gAND
; }

1138 
YY_BREAK


1140 
YY_RULE_SETUP


1142 { 
adju°
();  
	gOR
; }

1143 
YY_BREAK


1145 
YY_RULE_SETUP


1147 { 
adju°
();  
	gOR
; }

1148 
YY_BREAK


1151 
YY_RULE_SETUP


1154 
adju°
();

1155 
BEGIN
 
	gSTR
;

1156 
°rInô
();

1157 
	g°¨tPos
 = 
EM_tokPos
;

1159 
YY_BREAK


1162 
YY_RULE_SETUP


1164 { 
adju°
(); 
°rAµíd
("\n");}

1165 
YY_BREAK


1167 
YY_RULE_SETUP


1169 { 
adju°
(); 
°rAµíd
("\t");}

1170 
YY_BREAK


1172 
YY_RULE_SETUP


1174 { 
adju°
(); 
°rAµíd
("\\");}

1175 
YY_BREAK


1177 
YY_RULE_SETUP


1180 
adju°
();

1181 
	gc
[2];

1183 
	gc
[0] = (
yyãxt
[1]-'0') * 100 + (yytext[2]-'0') * 10 + (yytext[3]-'0');

1184 
	gc
[1] = '\0';

1185 
°rAµíd
(
c
);

1187 
YY_BREAK


1189 
YY_RULE_SETUP


1192 
adju°
();

1193 i‡(
	g°rLí
 > 0) {

1194 
	gyylvÆ
.
	gsvÆ
 = 
Såög
(
°rbuf
);

1196 
	gyylvÆ
.
	gsvÆ
 = "";

1198 
	gEM_tokPos
 = 
°¨tPos
;

1199 
°rFöish
() ;

1200 
BEGIN
 
	gINITIAL
;

1201  
	gSTRING
;

1203 
YY_BREAK


1206 
YY_RULE_SETUP


1208 {
adju°
(); 
checkNewlöe
(
yyãxt
);}

1209 
YY_BREAK


1211 
YY_RULE_SETUP


1213 {
adju°
(); 
EM_îr‹
(
EM_tokPos
,"illegalÅoken");}

1214 
YY_BREAK


1216 
YY_RULE_SETUP


1218 {
adju°
(); 
°rAµíd
(
yyãxt
);}

1219 
YY_BREAK


1222 
YY_RULE_SETUP


1224 { 
adju°
(); 
BEGIN
 
	gCOMMENT
; 
	gcommC¡
++; }

1225 
YY_BREAK


1228 
YY_RULE_SETUP


1230 { 
adju°
(); 
EM_√wlöe
(); ; }

1231 
YY_BREAK


1233 
YY_RULE_SETUP


1235 { 
adju°
(); 
EM_îr‹
(
EM_tokPos
,"illegalÅoken"); }

1236 
YY_BREAK


1240 
YY_RULE_SETUP


1242 { 
adju°
(); 
EM_√wlöe
(); ; }

1243 
YY_BREAK


1245 
YY_RULE_SETUP


1247 { 
adju°
(); 
BEGIN
 
	gINITIAL
; 
	gcommC¡
++; }

1248 
YY_BREAK


1250 
YY_RULE_SETUP


1252 { 
adju°
(); }

1253 
YY_BREAK


1256 
YY_RULE_SETUP


1258 
ECHO
;

1259 
	gYY_BREAK


1261 
YY_STATE_EOF
(
INITIAL
):

1262 
YY_STATE_EOF
(
COMMENT
):

1263 
YY_STATE_EOF
(
STR
):

1264 
yyãrmö©e
();

1266 
	gYY_END_OF_BUFFER
:

1269 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

1272 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1273 
YY_RESTORE_YY_MORE_OFFSET


1275 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

1286 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1287 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
yyö
;

1288 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

1298 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1300 
yy_°©e_ty≥
 
yy_√xt_°©e
;

1302 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1304 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1315 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

1317 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1319 i‡–
	gyy_√xt_°©e
 )

1322 
	gyy_˝
 = ++(
yy_c_buf_p
);

1323 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

1324 
	gyy_m©ch
;

1329 
	gyy_˝
 = (
yy_c_buf_p
);

1330 
	gyy_föd_a˘i⁄
;

1334  
yy_gë_√xt_buf„r
( ) )

1336 
	gEOB_ACT_END_OF_FILE
:

1338 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

1340 i‡–
yywøp
( ) )

1351 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1353 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

1354 
	gdo_a˘i⁄
;

1359 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

1360 
	gYY_NEW_FILE
;

1365 
	gEOB_ACT_CONTINUE_SCAN
:

1366 (
yy_c_buf_p
) =

1367 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1369 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1371 
	gyy_˝
 = (
yy_c_buf_p
);

1372 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1373 
	gyy_m©ch
;

1375 
	gEOB_ACT_LAST_MATCH
:

1376 (
yy_c_buf_p
) =

1377 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

1379 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1381 
	gyy_˝
 = (
yy_c_buf_p
);

1382 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1383 
	gyy_föd_a˘i⁄
;

1389 
YY_FATAL_ERROR
(

1403 
	$yy_gë_√xt_buf„r
 ()

1405 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

1406 *
sour˚
 = (
yyãxt_±r
);

1407 
yy_size_t
 
numbî_to_move
, 
i
;

1408 
ªt_vÆ
;

1410 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

1411 
	`YY_FATAL_ERROR
(

1414 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

1416 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

1421  
EOB_ACT_END_OF_FILE
;

1429  
EOB_ACT_LAST_MATCH
;

1436 
numbî_to_move
 = (
yy_size_t
Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

1438  
i
 = 0; i < 
numbî_to_move
; ++i )

1439 *(
de°
++Ë*(
sour˚
++);

1441 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1445 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

1449 
yy_size_t
 
num_to_ªad
 =

1450 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1452  
num_to_ªad
 <= 0 )

1456 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER_LVALUE
;

1458 
yy_c_buf_p_off£t
 =

1459 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

1461 i‡–
b
->
yy_is_our_buf„r
 )

1463 
yy_size_t
 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1465 i‡–
√w_size
 <= 0 )

1466 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1468 
b
->
yy_buf_size
 *= 2;

1470 
b
->
yy_ch_buf
 = (*)

1472 
	`yyªÆloc
((*Ë
b
->
yy_ch_buf
,b->
yy_buf_size
 + 2 );

1476 
b
->
yy_ch_buf
 = 0;

1478 i‡–! 
b
->
yy_ch_buf
 )

1479 
	`YY_FATAL_ERROR
(

1482 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1484 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

1485 
numbî_to_move
 - 1;

1489 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1490 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1493 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

1494 (
yy_n_ch¨s
), 
num_to_ªad
 );

1496 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1499 i‡–(
yy_n_ch¨s
) == 0 )

1501 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1503 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1504 
	`yyª°¨t
(
yyö
 );

1509 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1510 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

1511 
YY_BUFFER_EOF_PENDING
;

1516 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1518 i‡((Ë((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

1520 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

1521 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`yyªÆloc
((*ËYY_CURRENT_BUFFER_LVALUE->yy_ch_buf,
√w_size
 );

1522 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1523 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

1526 (
yy_n_ch¨s
Ë+
numbî_to_move
;

1527 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

1528 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

1530 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

1532  
ªt_vÆ
;

1533 
	}
}

1537 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

1539 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1540 *
yy_˝
;

1542 
yy_cuºít_°©e
 = (
yy_°¨t
);

1544  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

1546 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1547 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1549 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1550 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1552  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1554 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1555 i‡–
yy_cuºít_°©e
 >= 114 )

1556 
yy_c
 = 
yy_mëa
[() yy_c];

1558 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1561  
yy_cuºít_°©e
;

1562 
	}
}

1569 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1571 
yy_is_jam
;

1572 *
yy_˝
 = (
yy_c_buf_p
);

1574 
YY_CHAR
 
yy_c
 = 1;

1575 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1577 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1578 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1580  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1582 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1583 i‡–
yy_cuºít_°©e
 >= 114 )

1584 
yy_c
 = 
yy_mëa
[() yy_c];

1586 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1587 
yy_is_jam
 = (
yy_cuºít_°©e
 == 113);

1589  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1590 
	}
}

1592 #i‚de‡
YY_NO_UNPUT


1594 
	$yyu≈ut
 (
c
, * 
yy_bp
 )

1596 *
yy_˝
;

1598 
yy_˝
 = (
yy_c_buf_p
);

1601 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1603 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1606 
yy_size_t
 
numbî_to_move
 = (
yy_n_ch¨s
) + 2;

1607 *
de°
 = &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[

1608 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 + 2];

1609 *
sour˚
 =

1610 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
];

1612  
sour˚
 > 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1613 *--
de°
 = *--
sour˚
;

1615 
yy_˝
 +(Ë(
de°
 - 
sour˚
);

1616 
yy_bp
 +(Ë(
de°
 - 
sour˚
);

1617 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 =

1618 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
;

1620 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1621 
	`YY_FATAL_ERROR
( "flex scannerÖush-back overflow" );

1624 *--
yy_˝
 = (Ë
c
;

1626 (
yyãxt_±r
Ë
yy_bp
;

1627 (
yy_hﬁd_ch¨
Ë*
yy_˝
;

1628 (
yy_c_buf_p
Ë
yy_˝
;

1629 
	}
}

1633 #i‚de‡
YY_NO_INPUT


1634 #ifde‡
__˝lu•lus


1635 
	$yyöput
 ()

1637 
	$öput
 ()

1641 
c
;

1643 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1645 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

1651 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1653 *(
yy_c_buf_p
) = '\0';

1657 
yy_size_t
 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

1658 ++(
yy_c_buf_p
);

1660  
	`yy_gë_√xt_buf„r
( ) )

1662 
EOB_ACT_LAST_MATCH
:

1674 
	`yyª°¨t
(
yyö
 );

1678 
EOB_ACT_END_OF_FILE
:

1680 i‡–
	`yywøp
( ) )

1681  
EOF
;

1683 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

1684 
YY_NEW_FILE
;

1685 #ifde‡
__˝lu•lus


1686  
	`yyöput
();

1688  
	`öput
();

1692 
EOB_ACT_CONTINUE_SCAN
:

1693 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

1699 
c
 = *(*Ë(
yy_c_buf_p
);

1700 *(
yy_c_buf_p
) = '\0';

1701 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

1703  
c
;

1704 
	}
}

1712 
	$yyª°¨t
 (
FILE
 * 
öput_fûe
 )

1715 i‡–! 
YY_CURRENT_BUFFER
 ){

1716 
	`yyísuª_buf„r_°ack
 ();

1717 
YY_CURRENT_BUFFER_LVALUE
 =

1718 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 );

1721 
	`yy_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

1722 
	`yy_lﬂd_buf„r_°©e
( );

1723 
	}
}

1729 
	$yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1737 
	`yyísuª_buf„r_°ack
 ();

1738 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

1741 i‡–
YY_CURRENT_BUFFER
 )

1744 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1745 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1746 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1749 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1750 
	`yy_lﬂd_buf„r_°©e
( );

1757 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1758 
	}
}

1760 
	$yy_lﬂd_buf„r_°©e
 ()

1762 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1763 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

1764 
yyö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

1765 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

1766 
	}
}

1774 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

1776 
YY_BUFFER_STATE
 
b
;

1778 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
(–
yy_buf„r_°©e
 ) );

1779 i‡–! 
b
 )

1780 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1782 
b
->
yy_buf_size
 = (
yy_size_t
)
size
;

1787 
b
->
yy_ch_buf
 = (*Ë
	`yyÆloc
(b->
yy_buf_size
 + 2 );

1788 i‡–! 
b
->
yy_ch_buf
 )

1789 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1791 
b
->
yy_is_our_buf„r
 = 1;

1793 
	`yy_öô_buf„r
(
b
,
fûe
 );

1795  
b
;

1796 
	}
}

1802 
	$yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1805 i‡–! 
b
 )

1808 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1809 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

1811 i‡–
b
->
yy_is_our_buf„r
 )

1812 
	`yy‰ì
((*Ë
b
->
yy_ch_buf
 );

1814 
	`yy‰ì
((*Ë
b
 );

1815 
	}
}

1821 
	$yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

1824 
€ºno
 = 
î∫o
;

1826 
	`yy_Êush_buf„r
(
b
 );

1828 
b
->
yy_öput_fûe
 = 
fûe
;

1829 
b
->
yy_fûl_buf„r
 = 1;

1835 i‡(
b
 !
YY_CURRENT_BUFFER
){

1836 
b
->
yy_bs_löío
 = 1;

1837 
b
->
yy_bs_cﬁumn
 = 0;

1840 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

1842 
î∫o
 = 
€ºno
;

1843 
	}
}

1849 
	$yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1851 i‡–! 
b
 )

1854 
b
->
yy_n_ch¨s
 = 0;

1860 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

1861 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

1863 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

1865 
b
->
yy_©_bﬁ
 = 1;

1866 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1868 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1869 
	`yy_lﬂd_buf„r_°©e
( );

1870 
	}
}

1878 
	$yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1880 i‡(
√w_buf„r
 =
NULL
)

1883 
	`yyísuª_buf„r_°ack
();

1886 i‡–
YY_CURRENT_BUFFER
 )

1889 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1890 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1891 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1895 i‡(
YY_CURRENT_BUFFER
)

1896 (
yy_buf„r_°ack_t›
)++;

1897 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1900 
	`yy_lﬂd_buf„r_°©e
( );

1901 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1902 
	}
}

1908 
	$yyp›_buf„r_°©e
 ()

1910 i‡(!
YY_CURRENT_BUFFER
)

1913 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1914 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1915 i‡((
yy_buf„r_°ack_t›
) > 0)

1916 --(
yy_buf„r_°ack_t›
);

1918 i‡(
YY_CURRENT_BUFFER
) {

1919 
	`yy_lﬂd_buf„r_°©e
( );

1920 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1922 
	}
}

1927 
	$yyísuª_buf„r_°ack
 ()

1929 
yy_size_t
 
num_to_Æloc
;

1931 i‡(!(
yy_buf„r_°ack
)) {

1937 
num_to_Æloc
 = 1;

1938 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyÆloc


1939 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1941 i‡–! (
yy_buf„r_°ack
) )

1942 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

1944 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

1946 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1947 (
yy_buf„r_°ack_t›
) = 0;

1951 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

1954 
yy_size_t
 
grow_size
 = 8 ;

1956 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

1957 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyªÆloc


1958 ((
yy_buf„r_°ack
),

1959 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1961 i‡–! (
yy_buf„r_°ack
) )

1962 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

1965 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

1966 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1968 
	}
}

1976 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

1978 
YY_BUFFER_STATE
 
b
;

1980 i‡–
size
 < 2 ||

1981 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

1982 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

1986 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
(–
yy_buf„r_°©e
 ) );

1987 i‡–! 
b
 )

1988 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_buffer()" );

1990 
b
->
yy_buf_size
 = 
size
 - 2;

1991 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

1992 
b
->
yy_is_our_buf„r
 = 0;

1993 
b
->
yy_öput_fûe
 = 0;

1994 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

1995 
b
->
yy_is_öãø˘ive
 = 0;

1996 
b
->
yy_©_bﬁ
 = 1;

1997 
b
->
yy_fûl_buf„r
 = 0;

1998 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2000 
	`yy_swôch_to_buf„r
(
b
 );

2002  
b
;

2003 
	}
}

2013 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
 (
yyc⁄°
 * 
yy°r
 )

2016  
	`yy_sˇn_byãs
(
yy°r
,
	`°æí
(yystr) );

2017 
	}
}

2026 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
 (
yyc⁄°
 * 
yybyãs
, 
yy_size_t
 
_yybyãs_Àn
 )

2028 
YY_BUFFER_STATE
 
b
;

2029 *
buf
;

2030 
yy_size_t
 
n
;

2031 
yy_size_t
 
i
;

2034 
n
 = 
_yybyãs_Àn
 + 2;

2035 
buf
 = (*Ë
	`yyÆloc
(
n
 );

2036 i‡–! 
buf
 )

2037 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_bytes()" );

2039  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

2040 
buf
[
i
] = 
yybyãs
[i];

2042 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

2044 
b
 = 
	`yy_sˇn_buf„r
(
buf
,
n
 );

2045 i‡–! 
b
 )

2046 
	`YY_FATAL_ERROR
( "bad buffer in yy_scan_bytes()" );

2051 
b
->
yy_is_our_buf„r
 = 1;

2053  
b
;

2054 
	}
}

2056 #i‚de‡
YY_EXIT_FAILURE


2057 
	#YY_EXIT_FAILURE
 2

	)

2060 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

2062 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

2063 
	`exô
–
YY_EXIT_FAILURE
 );

2064 
	}
}

2068 #unde‡
yyÀss


2069 
	#yyÀss
(
n
) \

2073 
yyÀss_ma¸o_¨g
 = (
n
); \

2074 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

2075 
yyãxt
[
yyÀng
] = (
yy_hﬁd_ch¨
); \

2076 (
yy_c_buf_p
Ë
yyãxt
 + 
yyÀss_ma¸o_¨g
; \

2077 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

2078 *(
yy_c_buf_p
) = '\0'; \

2079 
yyÀng
 = 
yyÀss_ma¸o_¨g
; \

2081  0 )

	)

2088 
	$yygë_löío
 ()

2091  
yylöío
;

2092 
	}
}

2097 
FILE
 *
	$yygë_ö
 ()

2099  
yyö
;

2100 
	}
}

2105 
FILE
 *
	$yygë_out
 ()

2107  
yyout
;

2108 
	}
}

2113 
yy_size_t
 
	$yygë_Àng
 ()

2115  
yyÀng
;

2116 
	}
}

2122 *
	$yygë_ãxt
 ()

2124  
yyãxt
;

2125 
	}
}

2131 
	$yy£t_löío
 (
_löe_numbî
 )

2134 
yylöío
 = 
_löe_numbî
;

2135 
	}
}

2143 
	$yy£t_ö
 (
FILE
 * 
_ö_°r
 )

2145 
yyö
 = 
_ö_°r
 ;

2146 
	}
}

2148 
	$yy£t_out
 (
FILE
 * 
_out_°r
 )

2150 
yyout
 = 
_out_°r
 ;

2151 
	}
}

2153 
	$yygë_debug
 ()

2155  
yy_Êex_debug
;

2156 
	}
}

2158 
	$yy£t_debug
 (
_bdebug
 )

2160 
yy_Êex_debug
 = 
_bdebug
 ;

2161 
	}
}

2163 
	$yy_öô_globÆs
 ()

2169 (
yy_buf„r_°ack
) = 0;

2170 (
yy_buf„r_°ack_t›
) = 0;

2171 (
yy_buf„r_°ack_max
) = 0;

2172 (
yy_c_buf_p
) = (*) 0;

2173 (
yy_öô
) = 0;

2174 (
yy_°¨t
) = 0;

2177 #ifde‡
YY_STDINIT


2178 
yyö
 = 
°dö
;

2179 
yyout
 = 
°dout
;

2181 
yyö
 = (
FILE
 *) 0;

2182 
yyout
 = (
FILE
 *) 0;

2189 
	}
}

2192 
	$yyÀx_de°roy
 ()

2196 
YY_CURRENT_BUFFER
){

2197 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

2198 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2199 
	`yyp›_buf„r_°©e
();

2203 
	`yy‰ì
((
yy_buf„r_°ack
) );

2204 (
yy_buf„r_°ack
Ë
NULL
;

2208 
	`yy_öô_globÆs
( );

2211 
	}
}

2217 #i‚de‡
yyãxt_±r


2218 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

2221 
i
;

2222  
i
 = 0; i < 
n
; ++i )

2223 
s1
[
i
] = 
s2
[i];

2224 
	}
}

2227 #ifde‡
YY_NEED_STRLEN


2228 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

2230 
n
;

2231  
n
 = 0; 
s
[n]; ++n )

2234  
n
;

2235 
	}
}

2238 *
	$yyÆloc
 (
yy_size_t
 
size
 )

2240  (*Ë
	`mÆloc
–
size
 );

2241 
	}
}

2243 *
	$yyªÆloc
 (* 
±r
, 
yy_size_t
 
size
 )

2253  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

2254 
	}
}

2256 
	$yy‰ì
 (* 
±r
 )

2258 
	`‰ì
–(*Ë
±r
 );

2259 
	}
}

2261 
	#YYTABLES_NAME
 "yyèbÀs"

	)

	@liveness.c

1 
	~<°dio.h
>

2 
	~"utû.h
"

3 
	~"symbﬁ.h
"

4 
	~"ãmp.h
"

5 
	~"åì.h
"

6 
	~"absyn.h
"

7 
	~"as£m.h
"

8 
	~"‰ame.h
"

9 
	~"gøph.h
"

10 
	~"Êowgøph.h
"

11 
	~"livíess.h
"

12 
	~"èbÀ.h
"

14 
Temp_ãmpLi°
 
ex˚±
(Temp_ãmpLi° 
t1
, Temp_ãmpLi° 
t2
);

15 
Temp_ãmpLi°
 
uni⁄n
(Temp_ãmpLi° 
t1
, Temp_ãmpLi° 
t2
);

16 
boﬁ
 
öLi°
(
Temp_ãmpLi°
 
é
, 
Temp_ãmp
 
t
);

17 
boﬁ
 
equÆs
(
Temp_ãmpLi°
 
t1
, Temp_ãmpLi° 
t2
);

19 
boﬁ
 
	$öLi°
(
Temp_ãmpLi°
 
é
, 
Temp_ãmp
 
t
) {

20 ; 
é
;Å»é->
èû
) {

21 i‡(
é
->
hód
 =
t
Ë 
TRUE
;

23  
FALSE
;

24 
	}
}

27 
boﬁ
 
	$equÆs
(
Temp_ãmpLi°
 
t1
, Temp_ãmpLi° 
t2
)

29 
Temp_ãmpLi°
 
tmp
 = 
t1
;

30 ; 
t2
;Å2 =Å2->
èû
, 
t1
 =Å1->tail) {

31 i‡(!
	`öLi°
(
tmp
, 
t2
->
hód
))

32  
FALSE
;

33 i‡(!
t1
Ë 
FALSE
;

35 i‡(
t1
Ë 
FALSE
;

37  
TRUE
;

38 
	}
}

41 
Temp_ãmpLi°
 
	$ex˚±
(
Temp_ãmpLi°
 
t1
, Temp_ãmpLi° 
t2
)

43 
Temp_ãmpLi°
 
r
 = 
NULL
;

44 ; 
t1
;Å1 =Å1->
èû
) {

45 i‡(!
	`öLi°
(
t2
, 
t1
->
hód
))

46 
r
 = 
	`Temp_TempLi°
(
t1
->
hód
,Ñ);

48  
r
;

49 
	}
}

52 
Temp_ãmpLi°
 
	$uni⁄n
(
Temp_ãmpLi°
 
t1
, Temp_ãmpLi° 
t2
)

54 
	`¥ötf
("\n\tunion of :\n");

55 
	`Temp_¥ötLi°
(
t1
); Temp_¥ötLi°(
t2
);

57 
Temp_ãmpLi°
 
r
 = 
	`Temp_c›yLi°
(
t1
);

58 ; 
t2
;Å2 =Å2->
èû
) {

59 i‡(!
	`öLi°
(
t1
, 
t2
->
hód
))

60 
r
 = 
	`Temp_TempLi°
(
t2
->
hód
,Ñ);

63 
	`¥ötf
("\tunionÑesult :\n\n");

64 
	`Temp_¥ötLi°
(
r
);

66  
r
;

67 
	}
}

69 
Live_moveLi°
 
	$Live_MoveLi°
(
G_node
 
§c
, G_nodê
d°
, 
Live_moveLi°
 
èû
) {

70 
Live_moveLi°
 
lm
 = (Live_moveLi°Ë
	`checked_mÆloc
((*lm));

71 
lm
->
§c
 = src;

72 
lm
->
d°
 = dst;

73 
lm
->
èû
 =Åail;

74  
lm
;

75 
	}
}

78 
Temp_ãmp
 
	$Live_gãmp
(
G_node
 
n
) {

80  (
Temp_ãmp
)
	`G_nodeInfo
(
n
);

81 
	}
}

89 
	$¸óãInOutTabÀ
(
G_gøph
 
Êow
, 
G_èbÀ
 
ö
, G_èbÀ 
out
)

91 
	`as£π
(
Êow
);

92 
G_nodeLi°
 
∆_c⁄°
 = 
	`G_nodes
(
Êow
), 
∆
;

95 
∆
=
∆_c⁄°
;Çl;Ç»∆->
èû
) {

96 
	`G_íãr
(
ö
, 
∆
->
hód
, 
NULL
);

97 
	`G_íãr
(
out
, 
∆
->
hód
, 
NULL
);

101 
∆
 = 
∆_c⁄°
;

102 ; 
∆
;Ç»∆->
èû
) {

105 
Temp_ãmpLi°
 
öé
 = (Temp_ãmpLi°)
	`G_look
(
ö
, 
∆
->
hód
);

106 
Temp_ãmpLi°
 
ouâl
 = (Temp_ãmpLi°)
	`G_look
(
out
, 
∆
->
hód
);

107 
Temp_ãmpLi°
 
öé_d
 = 
	`Temp_c›yLi°
(
öé
);

108 
Temp_ãmpLi°
 
ouâl_d
 = 
	`Temp_c›yLi°
(
ouâl
);

109 
	`as£π
(
	`equÆs
(
öé
, 
öé_d
));

110 
	`as£π
(
	`equÆs
(
ouâl
, 
ouâl_d
));

116 
öé
 = 
	`uni⁄n
(
	`FG_u£
(
∆
->
hód
), 
	`ex˚±
(
ouâl
, 
	`FG_def
(nl->head)));

117 
	`G_íãr
(
ö
, 
∆
->
hód
, 
öé
);

123 
G_nodeLi°
 
succ
 = 
	`G_succ
(
∆
->
hód
);

125 ; 
succ
; suc¯succ->
èû
) {

126 
ouâl
 = 
	`uni⁄n
(ouâl, (
Temp_ãmpLi°
)
	`G_look
(
ö
, 
succ
->
hód
));

128 
	`G_íãr
(
out
, 
∆
->
hód
, 
ouâl
);

130 
	`Temp_¥ötLi°
(
öé
);

131 
	`Temp_¥ötLi°
(
ouâl
);

135 i‡(
	`equÆs
(
öé_d
, 
öé
Ë&&ÉquÆs(
ouâl
, 
ouâl_d
))

139 
	}
}

141 
G_gøph
 
	$öôItfGøph
(
G_nodeLi°
 
∆
, 
TAB_èbÀ
 
ãmpToNode
)

143 
G_gøph
 
g
 = 
	`G_Gøph
();

145 
Temp_ãmpLi°
 
ãmps
 = 
NULL
;

146 ; 
∆
;Ç»∆->
èû
) {

147 
ãmps
 = 
	`uni⁄n
—emps, uni⁄n(
	`FG_def
(
∆
->
hód
), 
	`FG_u£
(nl->head)));

150 ; 
ãmps
;Åemp†ãmps->
èû
) {

151 
G_node
 
n
 = 
	`G_Node
(
g
, 
ãmps
->
hód
);

152 
	`TAB_íãr
(
ãmpToNode
, 
ãmps
->
hód
, 
n
);

154  
g
;

155 
	}
}

157 
Live_moveLi°
 
	gmoves
 = 
NULL
;

159 
G_gøph
 
	$öã„ªn˚Gøph
(
G_nodeLi°
 
∆
, 
G_èbÀ
 
liveM≠
)

165 
TAB_èbÀ
 
ãmpM≠
 = 
	`TAB_em±y
();

166 
G_gøph
 
g
 = 
	`öôItfGøph
(
∆
, 
ãmpM≠
);

168 
	`G_show
(
°dout
, 
	`G_nodes
(
g
), 
Temp_¥öt
);

170 ; 
∆
;Ç»∆->
èû
) {

171 
AS_ö°r
 
i
 = (AS_ö°r)
	`G_nodeInfo
(
∆
->
hód
);

172 
	`as£π
(
i
);

173 
Temp_ãmpLi°
 
defs
 = 
	`FG_def
(
∆
->
hód
);

174 
Temp_ãmpLi°
 
liveouts
 = 
	`G_look
(
liveM≠
, 
∆
->
hód
);

176 i‡(
i
->
köd
 =
I_MOVE
) {

177 
Temp_ãmpLi°
 
§cs
 = 
	`FG_u£
(
∆
->
hód
);

178 
	`as£π
(
defs
->
èû
 =
NULL
);

179 
	`as£π
(
§cs
->
èû
 =
NULL
);

181 
G_node
 
d°
 = (G_node)
	`TAB_look
(
ãmpM≠
, 
defs
->
hód
);

182 
G_node
 
§c
 = (G_node)
	`TAB_look
(
ãmpM≠
, 
§cs
->
hód
);

184 
	`Live_MoveLi°
(
d°
, 
§c
, 
moves
);

186 ; 
liveouts
;Üiveout†liveouts->
èû
) {

188 
G_node
 
t
 = (G_node)
	`TAB_look
(
ãmpM≠
, 
liveouts
->
hód
);

190 i‡(
d°
 =
t
) ;

191 i‡(
liveouts
->
hód
 =
§cs
->head) ;

192 
	`G_addEdge
(
d°
, 
t
);

195 ; 
defs
; def†defs->
èû
) {

196 
	`as£π
(
i
->
köd
 =
I_OPER
 || i->köd =
I_LABEL
);

198 
G_node
 
a
 = (G_node)
	`TAB_look
(
ãmpM≠
, 
defs
->
hód
);

199 ; 
liveouts
;Üiveout†liveouts->
èû
) {

200 
G_node
 
b
 = (G_node)
	`TAB_look
(
ãmpM≠
, 
liveouts
->
hód
);

202 i‡(
a
 =
b
) ;

203 
	`G_addEdge
(
a
, 
b
);

209 
	`G_show
(
°dout
, 
	`G_nodes
(
g
), 
Temp_¥öt
);

210  
g
;

211 
	}
}

214 
Live_gøph
 
	$Live_livíess
(
G_gøph
 
Êow
) {

216 
Live_gøph
 
lg
;

218 
G_èbÀ
 
ö
 = 
	`G_em±y
();

219 
G_èbÀ
 
out
 = 
	`G_em±y
();

220 
	`¸óãInOutTabÀ
(
Êow
, 
ö
, 
out
);

222 
G_gøph
 
g
 = 
	`öã„ªn˚Gøph
(
	`G_nodes
(
Êow
), 
out
);

223 
lg
.
gøph
 = 
g
;

224 
lg
.
moves
 = moves;

225  
lg
;

226 
	}
}

	@liveness.h

1 
Live_moveLi°_
 *
	tLive_moveLi°
;

2 
	sLive_moveLi°_
 {

3 
G_node
 
	m§c
, 
	md°
;

4 
Live_moveLi°
 
	mèû
;

7 
Live_moveLi°
 
Live_MoveLi°
(
G_node
 
§c
, G_nodê
d°
, Live_moveLi° 
èû
);

9 
	sLive_gøph
 {

10 
G_gøph
 
	mgøph
;

11 
Live_moveLi°
 
	mmoves
;

13 
Temp_ãmp
 
Live_gãmp
(
G_node
 
n
);

15 
Live_gøph
 
Live_livíess
(
G_gøph
 
Êow
);

	@main.c

5 
	~<°dio.h
>

6 
	~"utû.h
"

7 
	~"symbﬁ.h
"

8 
	~"ty≥s.h
"

9 
	~"absyn.h
"

10 
	~"îr‹msg.h
"

11 
	~"ãmp.h
"

12 
	~"åì.h
"

13 
	~"as£m.h
"

14 
	~"‰ame.h
"

15 
	~"å™¶©e.h
"

16 
	~"ív.h
"

17 
	~"£m™t.h
"

18 
	~"ˇn⁄.h
"

19 
	~"¥absyn.h
"

20 
	~"¥öâªe.h
"

22 
	~"∑r£.h
"

23 
	~"codegí.h
"

24 
	~"ªgÆloc.h
"

26 
boﬁ
 
™yEº‹s
;

29 
	$doProc
(
FILE
 *
out
, 
F_‰ame
 
‰ame
, 
T_°m
 
body
)

31 
AS_¥oc
 
¥oc
;

32 
T_°mLi°
 
°mLi°
;

33 
AS_ö°rLi°
 
iLi°
;

35 
F_ãmpM≠
 = 
	`Temp_em±y
();

37 
°mLi°
 = 
	`C_löórize
(
body
);

38 
°mLi°
 = 
	`C_åa˚ScheduÀ
(
	`C_basicBlocks
(stmList));

40 
iLi°
 = 
	`F_codegí
(
‰ame
, 
°mLi°
);

42 
RA_ªsu…
 
ø
 = 
	`RA_ªgAŒoc
(
‰ame
, 
iLi°
);

44 
	`Ârötf
(
out
, "BEGIN function\n");

45 
	`AS_¥ötIn°rLi°
 (
out
, 
iLi°
,

46 
	`Temp_œyîM≠
(
F_ãmpM≠
,
ø
.
cﬁ‹ög
));

47 
	`Ârötf
(
out
, "END function\n\n");

48 
	}
}

50 
	$maö
(
¨gc
, 
°rög
 *
¨gv
)

52 
A_exp
 
absyn_roŸ
;

53 
S_èbÀ
 
ba£_ív
, 
ba£_ãnv
;

54 
F_‰agLi°
 
‰ags
;

55 
outfûe
[100];

56 
FILE
 *
out
 = 
°dout
;

58 i‡(
¨gc
==2) {

59 
absyn_roŸ
 = 
	`∑r£
(
¨gv
[1]);

60 i‡(!
absyn_roŸ
)

64 
	`¥_exp
(
out
, 
absyn_roŸ
, 0);

65 
	`Ârötf
(
out
, "\n");

70 
‰ags
 = 
	`SEM_å™sProg
(
absyn_roŸ
);

71 i‡(
™yEº‹s
)  1;

74 
	`•rötf
(
outfûe
, "%s.s", 
¨gv
[1]);

75 
out
 = 
	`f›í
(
outfûe
, "w");

77 ;
‰ags
;‰ags=‰ags->
èû
)

78 i‡(
‰ags
->
hód
->
köd
 =
F_¥ocFøg
)

79 
	`doProc
(
out
, 
‰ags
->
hód
->
u
.
¥oc
.
‰ame
, føgs->hód->u.¥oc.
body
);

80 i‡(
‰ags
->
hód
->
köd
 =
F_°rögFøg
)

81 
	`Ârötf
(
out
, "%s\n", 
‰ags
->
hód
->
u
.
°rögg
.
°r
);

83 
	`f˛o£
(
out
);

86 
	`EM_îr‹
(0,"usage:Åiger file.tig");

88 
	}
}

	@parse.c

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~"utû.h
"

8 
	~"symbﬁ.h
"

9 
	~"absyn.h
"

10 
	~"ty≥s.h
"

11 
	~"îr‹msg.h
"

12 
	~"ãmp.h
"

13 
	~"åì.h
"

14 
	~"∑r£.h
"

15 
	~"‰ame.h
"

16 
	~"£m™t.h
"

18 
yy∑r£
();

19 
A_exp
 
absyn_roŸ
;

23 
A_exp
 
	$∑r£
(
°rög
 
‚ame
)

24 {
	`EM_ª£t
(
‚ame
);

25 i‡(
	`yy∑r£
() == 0)

26  
absyn_roŸ
;

27  
NULL
;

28 
	}
}

	@parse.h

2 
A_exp
 
∑r£
(
°rög
 
‚ame
);

	@prabsyn.c

6 
	~<°dio.h
>

7 
	~"utû.h
"

8 
	~"symbﬁ.h
"

9 
	~"absyn.h
"

10 
	~"¥absyn.h
"

13 
¥_v¨
(
FILE
 *
out
, 
A_v¨
 
v
, 
d
);

14 
¥_dec
(
FILE
 *
out
, 
A_dec
 
v
, 
d
);

15 
¥_ty
(
FILE
 *
out
, 
A_ty
 
v
, 
d
);

16 
¥_fõld
(
FILE
 *
out
, 
A_fõld
 
v
, 
d
);

17 
¥_fõldLi°
(
FILE
 *
out
, 
A_fõldLi°
 
v
, 
d
);

18 
¥_expLi°
(
FILE
 *
out
, 
A_expLi°
 
v
, 
d
);

19 
¥_fundec
(
FILE
 *
out
, 
A_fundec
 
v
, 
d
);

20 
¥_fundecLi°
(
FILE
 *
out
, 
A_fundecLi°
 
v
, 
d
);

21 
¥_decLi°
(
FILE
 *
out
, 
A_decLi°
 
v
, 
d
);

22 
¥_«mëy
(
FILE
 *
out
, 
A_«mëy
 
v
, 
d
);

23 
¥_«mëyLi°
(
FILE
 *
out
, 
A_«mëyLi°
 
v
, 
d
);

24 
¥_efõld
(
FILE
 *
out
, 
A_efõld
 
v
, 
d
);

25 
¥_efõldLi°
(
FILE
 *
out
, 
A_efõldLi°
 
v
, 
d
);

27 
	$ödít
(
FILE
 *
out
, 
d
) {

28 
i
;

29 
i
 = 0; i <
d
; i++Ë
	`Ârötf
(
out
, " ");

30 
	}
}

33 
	$¥_v¨
(
FILE
 *
out
, 
A_v¨
 
v
, 
d
) {

34 
	`ödít
(
out
, 
d
);

35 
v
->
köd
) {

36 
A_sim∂eV¨
:

37 
	`Ârötf
(
out
, "sim∂eV¨(%s)", 
	`S_«me
(
v
->
u
.
sim∂e
));

39 
A_fõldV¨
:

40 
	`Ârötf
(
out
, "%s\n", "fieldVar(");

41 
	`¥_v¨
(
out
, 
v
->
u
.
fõld
.
v¨
, 
d
+1); 
	`Ârötf
(out, "%s\n", ",");

42 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s)", 
	`S_«me
(
v
->
u
.
fõld
.
sym
));

44 
A_subs¸ùtV¨
:

45 
	`Ârötf
(
out
, "%s\n", "subscriptVar(");

46 
	`¥_v¨
(
out
, 
v
->
u
.
subs¸ùt
.
v¨
, 
d
+1); 
	`Ârötf
(out, "%s\n", ",");

47 
	`¥_exp
(
out
, 
v
->
u
.
subs¸ùt
.
exp
, 
d
+1); 
	`Ârötf
(out, "%s", ")");

50 
	`as£π
(0);

52 
	}
}

54 
	g°r_›î
[][12] = {

58 
	$¥_›î
(
FILE
 *
out
, 
A_›î
 
d
) {

59 
	`Ârötf
(
out
, "%s", 
°r_›î
[
d
]);

60 
	}
}

63 
	$¥_exp
(
FILE
 *
out
, 
A_exp
 
v
, 
d
) {

64 
	`ödít
(
out
, 
d
);

65 
v
->
köd
) {

66 
A_v¨Exp
:

67 
	`Ârötf
(
out
, "v¨Exp(\n"); 
	`¥_v¨
(out, 
v
->
u
.
v¨
, 
d
+1);

68 
	`Ârötf
(
out
, "%s", ")");

70 
A_nûExp
:

71 
	`Ârötf
(
out
, "nilExp()");

73 
A_ötExp
:

74 
	`Ârötf
(
out
, "ötExp(%d)", 
v
->
u
.
öâ
);

76 
A_°rögExp
:

77 
	`Ârötf
(
out
, "°rögExp(%s)", 
v
->
u
.
°rögg
);

79 
A_ˇŒExp
:

80 
	`Ârötf
(
out
, "ˇŒExp(%s,\n", 
	`S_«me
(
v
->
u
.
ˇŒ
.
func
));

81 
	`¥_expLi°
(
out
, 
v
->
u
.
ˇŒ
.
¨gs
, 
d
+1); 
	`Ârötf
(out, ")");

83 
A_›Exp
:

84 
	`Ârötf
(
out
, "opExp(\n");

85 
	`ödít
(
out
, 
d
+1); 
	`¥_›î
(out, 
v
->
u
.
›
.
›î
); 
	`Ârötf
(out, ",\n");

86 
	`¥_exp
(
out
, 
v
->
u
.
›
.
À·
, 
d
+1); 
	`Ârötf
(out, ",\n");

87 
	`¥_exp
(
out
, 
v
->
u
.
›
.
right
, 
d
+1); 
	`Ârötf
(out, ")");

89 
A_ªc‹dExp
:

90 
	`Ârötf
(
out
, "ªc‹dExp(%s,\n", 
	`S_«me
(
v
->
u
.
ªc‹d
.
typ
));

91 
	`¥_efõldLi°
(
out
, 
v
->
u
.
ªc‹d
.
fõlds
, 
d
+1); 
	`Ârötf
(out, ")");

93 
A_£qExp
:

94 
	`Ârötf
(
out
, "seqExp(\n");

95 
	`¥_expLi°
(
out
, 
v
->
u
.
£q
, 
d
+1); 
	`Ârötf
(out, ")");

97 
A_assignExp
:

98 
	`Ârötf
(
out
, "assignExp(\n");

99 
	`¥_v¨
(
out
, 
v
->
u
.
assign
.
v¨
, 
d
+1); 
	`Ârötf
(out, ",\n");

100 
	`¥_exp
(
out
, 
v
->
u
.
assign
.
exp
, 
d
+1); 
	`Ârötf
(out, ")");

102 
A_ifExp
:

103 
	`Ârötf
(
out
, "iffExp(\n");

104 
	`¥_exp
(
out
, 
v
->
u
.
iff
.
ã°
, 
d
+1); 
	`Ârötf
(out, ",\n");

105 
	`¥_exp
(
out
, 
v
->
u
.
iff
.
thí
, 
d
+1);

106 i‡(
v
->
u
.
iff
.
ñ£e
) {

107 
	`Ârötf
(
out
, ",\n");

108 
	`¥_exp
(
out
, 
v
->
u
.
iff
.
ñ£e
, 
d
+1);

110 
	`Ârötf
(
out
, ")");

112 
A_whûeExp
:

113 
	`Ârötf
(
out
, "whileExp(\n");

114 
	`¥_exp
(
out
, 
v
->
u
.
whûì
.
ã°
, 
d
+1); 
	`Ârötf
(out, ",\n");

115 
	`¥_exp
(
out
, 
v
->
u
.
whûì
.
body
, 
d
+1); 
	`Ârötf
(out, ")\n");

117 
A_f‹Exp
:

118 
	`Ârötf
(
out
, "f‹Exp(%s,\n", 
	`S_«me
(
v
->
u
.
f‹r
.
v¨
));

119 
	`¥_exp
(
out
, 
v
->
u
.
f‹r
.
lo
, 
d
+1); 
	`Ârötf
(out, ",\n");

120 
	`¥_exp
(
out
, 
v
->
u
.
f‹r
.
hi
, 
d
+1); 
	`Ârötf
(out, "%s\n", ",");

121 
	`¥_exp
(
out
, 
v
->
u
.
f‹r
.
body
, 
d
+1); 
	`Ârötf
(out, ",\n");

122 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s", 
v
->
u
.
f‹r
.
esˇ≥
 ? "TRUE)" : "FALSE)");

124 
A_bªakExp
:

125 
	`Ârötf
(
out
, "breakExp()");

127 
A_ÀtExp
:

128 
	`Ârötf
(
out
, "letExp(\n");

129 
	`¥_decLi°
(
out
, 
v
->
u
.
Àt
.
decs
, 
d
+1); 
	`Ârötf
(out, ",\n");

130 
	`¥_exp
(
out
, 
v
->
u
.
Àt
.
body
, 
d
+1); 
	`Ârötf
(out, ")");

132 
A_¨øyExp
:

133 
	`Ârötf
(
out
, "¨øyExp(%s,\n", 
	`S_«me
(
v
->
u
.
¨øy
.
typ
));

134 
	`¥_exp
(
out
, 
v
->
u
.
¨øy
.
size
, 
d
+1); 
	`Ârötf
(out, ",\n");

135 
	`¥_exp
(
out
, 
v
->
u
.
¨øy
.
öô
, 
d
+1); 
	`Ârötf
(out, ")");

138 
	`as£π
(0);

140 
	}
}

142 
	$¥_dec
(
FILE
 *
out
, 
A_dec
 
v
, 
d
) {

143 
	`ödít
(
out
, 
d
);

144 
v
->
köd
) {

145 
A_fun˘i⁄Dec
:

146 
	`Ârötf
(
out
, "functionDec(\n");

147 
	`¥_fundecLi°
(
out
, 
v
->
u
.
fun˘i⁄
, 
d
+1); 
	`Ârötf
(out, ")");

149 
A_v¨Dec
:

150 
	`Ârötf
(
out
, "v¨Dec(%s,\n", 
	`S_«me
(
v
->
u
.
v¨
.var));

151 i‡(
v
->
u
.
v¨
.
typ
) {

152 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s,\n", 
	`S_«me
(
v
->
u
.
v¨
.
typ
));

154 
	`¥_exp
(
out
, 
v
->
u
.
v¨
.
öô
, 
d
+1); 
	`Ârötf
(out, ",\n");

155 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s", 
v
->
u
.
v¨
.
esˇ≥
 ? "TRUE)" : "FALSE)");

157 
A_ty≥Dec
:

158 
	`Ârötf
(
out
, "typeDec(\n");

159 
	`¥_«mëyLi°
(
out
, 
v
->
u
.
ty≥
, 
d
+1); 
	`Ârötf
(out, ")");

162 
	`as£π
(0);

164 
	}
}

166 
	$¥_ty
(
FILE
 *
out
, 
A_ty
 
v
, 
d
) {

167 
	`ödít
(
out
, 
d
);

168 
v
->
köd
) {

169 
A_«meTy
:

170 
	`Ârötf
(
out
, "«meTy(%s)", 
	`S_«me
(
v
->
u
.
«me
));

172 
A_ªc‹dTy
:

173 
	`Ârötf
(
out
, "recordTy(\n");

174 
	`¥_fõldLi°
(
out
, 
v
->
u
.
ªc‹d
, 
d
+1); 
	`Ârötf
(out, ")");

176 
A_¨øyTy
:

177 
	`Ârötf
(
out
, "¨øyTy(%s)", 
	`S_«me
(
v
->
u
.
¨øy
));

180 
	`as£π
(0);

182 
	}
}

184 
	$¥_fõld
(
FILE
 *
out
, 
A_fõld
 
v
, 
d
) {

185 
	`ödít
(
out
, 
d
);

186 
	`Ârötf
(
out
, "fõld(%s,\n", 
	`S_«me
(
v
->
«me
));

187 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s,\n", 
	`S_«me
(
v
->
typ
));

188 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s", 
v
->
esˇ≥
 ? "TRUE)" : "FALSE)");

189 
	}
}

191 
	$¥_fõldLi°
(
FILE
 *
out
, 
A_fõldLi°
 
v
, 
d
) {

192 
	`ödít
(
out
, 
d
);

193 i‡(
v
) {

194 
	`Ârötf
(
out
, "fieldList(\n");

195 
	`¥_fõld
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

196 
	`¥_fõldLi°
(
out
, 
v
->
èû
, 
d
+1); 
	`Ârötf
(out, ")");

198 
	`Ârötf
(
out
, "fieldList()");

199 
	}
}

201 
	$¥_expLi°
(
FILE
 *
out
, 
A_expLi°
 
v
, 
d
) {

202 
	`ödít
(
out
, 
d
);

203 i‡(
v
) {

204 
	`Ârötf
(
out
, "expList(\n");

205 
	`¥_exp
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

206 
	`¥_expLi°
(
out
, 
v
->
èû
, 
d
+1);

207 
	`Ârötf
(
out
, ")");

209 
	`Ârötf
(
out
, "expList()");

211 
	}
}

213 
	$¥_fundec
(
FILE
 *
out
, 
A_fundec
 
v
, 
d
) {

214 
	`ödít
(
out
, 
d
);

215 
	`Ârötf
(
out
, "fundec(%s,\n", 
	`S_«me
(
v
->
«me
));

216 
	`¥_fõldLi°
(
out
, 
v
->
∑øms
, 
d
+1); 
	`Ârötf
(out, ",\n");

217 i‡(
v
->
ªsu…
) {

218 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s,\n", 
	`S_«me
(
v
->
ªsu…
));

220 
	`¥_exp
(
out
, 
v
->
body
, 
d
+1); 
	`Ârötf
(out, ")");

221 
	}
}

223 
	$¥_fundecLi°
(
FILE
 *
out
, 
A_fundecLi°
 
v
, 
d
) {

224 
	`ödít
(
out
, 
d
);

225 i‡(
v
) {

226 
	`Ârötf
(
out
, "fundecList(\n");

227 
	`¥_fundec
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

228 
	`¥_fundecLi°
(
out
, 
v
->
èû
, 
d
+1); 
	`Ârötf
(out, ")");

230 
	`Ârötf
(
out
, "fundecList()");

231 
	}
}

233 
	$¥_decLi°
(
FILE
 *
out
, 
A_decLi°
 
v
, 
d
) {

234 
	`ödít
(
out
, 
d
);

235 i‡(
v
) {

236 
	`Ârötf
(
out
, "decList(\n");

237 
	`¥_dec
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

238 
	`¥_decLi°
(
out
, 
v
->
èû
, 
d
+1);

239 
	`Ârötf
(
out
, ")");

241 
	`Ârötf
(
out
, "decList()");

243 
	}
}

245 
	$¥_«mëy
(
FILE
 *
out
, 
A_«mëy
 
v
, 
d
) {

246 
	`ödít
(
out
, 
d
);

247 
	`Ârötf
(
out
, "«mëy(%s,\n", 
	`S_«me
(
v
->
«me
));

248 
	`¥_ty
(
out
, 
v
->
ty
, 
d
+1); 
	`Ârötf
(out, ")");

249 
	}
}

251 
	$¥_«mëyLi°
(
FILE
 *
out
, 
A_«mëyLi°
 
v
, 
d
) {

252 
	`ödít
(
out
, 
d
);

253 i‡(
v
) {

254 
	`Ârötf
(
out
, "nametyList(\n");

255 
	`¥_«mëy
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

256 
	`¥_«mëyLi°
(
out
, 
v
->
èû
, 
d
+1); 
	`Ârötf
(out, ")");

258 
	`Ârötf
(
out
, "nametyList()");

259 
	}
}

261 
	$¥_efõld
(
FILE
 *
out
, 
A_efõld
 
v
, 
d
) {

262 
	`ödít
(
out
, 
d
);

263 i‡(
v
) {

264 
	`Ârötf
(
out
, "efõld(%s,\n", 
	`S_«me
(
v
->
«me
));

265 
	`¥_exp
(
out
, 
v
->
exp
, 
d
+1); 
	`Ârötf
(out, ")");

267 
	`Ârötf
(
out
, "efield()");

268 
	}
}

270 
	$¥_efõldLi°
(
FILE
 *
out
, 
A_efõldLi°
 
v
, 
d
) {

271 
	`ödít
(
out
, 
d
);

272 i‡(
v
) {

273 
	`Ârötf
(
out
, "efieldList(\n");

274 
	`¥_efõld
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

275 
	`¥_efõldLi°
(
out
, 
v
->
èû
, 
d
+1); 
	`Ârötf
(out, ")");

277 
	`Ârötf
(
out
, "efieldList()");

278 
	}
}

	@prabsyn.h

2 
¥_exp
(
FILE
 *
out
, 
A_exp
 
v
, 
d
);

	@printtree.c

5 
	~<°dio.h
>

6 
	~"utû.h
"

7 
	~"symbﬁ.h
"

8 
	~"ãmp.h
"

9 
	~"åì.h
"

10 
	~"¥öâªe.h
"

13 
¥_åì_exp
(
FILE
 *
out
, 
T_exp
 
exp
, 
d
);

15 
	$ödít
(
FILE
 *
out
, 
d
) {

16 
i
;

17 
i
 = 0; i <
d
; i++Ë
	`Ârötf
(
out
, " ");

18 
	}
}

20 
	gbö_›î
[][12] = {

24 
	gªl_›î
[][12] = {

27 
	$¥_°m
(
FILE
 *
out
, 
T_°m
 
°m
, 
d
)

29 
°m
->
köd
) {

30 
T_SEQ
:

31 
	`ödít
(
out
,
d
);

32 
	`Ârötf
(
out
, "SEQ(\n"); 
	`¥_°m
(out, 
°m
->
u
.
SEQ
.
À·
,
d
+1); fprintf(out, ",\n");

33 
	`¥_°m
(
out
, 
°m
->
u
.
SEQ
.
right
,
d
+1); 
	`Ârötf
(out, ")");

35 
T_LABEL
:

36 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "LABEL %s", 
	`S_«me
(
°m
->
u
.
LABEL
));

38 
T_JUMP
:

39 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "JUMP(\n"); 
	`¥_åì_exp
(out, 
°m
->
u
.
JUMP
.
exp
,d+1);

40 
	`Ârötf
(
out
, ")");

42 
T_CJUMP
:

43 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "CJUMP(%s,\n", 
ªl_›î
[
°m
->
u
.
CJUMP
.
›
]);

44 
	`¥_åì_exp
(
out
, 
°m
->
u
.
CJUMP
.
À·
,
d
+1); 
	`Ârötf
(out, ",\n");

45 
	`¥_åì_exp
(
out
, 
°m
->
u
.
CJUMP
.
right
,
d
+1); 
	`Ârötf
(out, ",\n");

46 
	`ödít
(
out
,
d
+1); 
	`Ârötf
(out, "%s,", 
	`S_«me
(
°m
->
u
.
CJUMP
.
åue
));

47 
	`Ârötf
(
out
, "%s", 
	`S_«me
(
°m
->
u
.
CJUMP
.
Ál£
)); fprintf(out, ")");

49 
T_MOVE
:

50 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "MOVE(\n"); 
	`¥_åì_exp
(out, 
°m
->
u
.
MOVE
.
d°
,d+1);

51 
	`Ârötf
(
out
, ",\n");

52 
	`¥_åì_exp
(
out
, 
°m
->
u
.
MOVE
.
§c
,
d
+1); 
	`Ârötf
(out, ")");

54 
T_EXP
:

55 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "EXP(\n"); 
	`¥_åì_exp
(out, 
°m
->
u
.
EXP
,d+1);

56 
	`Ârötf
(
out
, ")");

59 
	}
}

61 
	$¥_åì_exp
(
FILE
 *
out
, 
T_exp
 
exp
, 
d
)

63 
exp
->
köd
) {

64 
T_BINOP
:

65 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "BINOP(%s,\n", 
bö_›î
[
exp
->
u
.
BINOP
.
›
]);

66 
	`¥_åì_exp
(
out
, 
exp
->
u
.
BINOP
.
À·
,
d
+1); 
	`Ârötf
(out, ",\n");

67 
	`¥_åì_exp
(
out
, 
exp
->
u
.
BINOP
.
right
,
d
+1); 
	`Ârötf
(out, ")");

69 
T_MEM
:

70 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "MEM");

71 
	`Ârötf
(
out
, "(\n"); 
	`¥_åì_exp
(out, 
exp
->
u
.
MEM
,
d
+1); fprintf(out, ")");

73 
T_TEMP
:

74 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "TEMPÅ%s",

75 
	`Temp_look
(
	`Temp_«me
(), 
exp
->
u
.
TEMP
));

77 
T_ESEQ
:

78 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "ESEQ(\n"); 
	`¥_°m
(out, 
exp
->
u
.
ESEQ
.
°m
,d+1);

79 
	`Ârötf
(
out
, ",\n");

80 
	`¥_åì_exp
(
out
, 
exp
->
u
.
ESEQ
.exp,
d
+1); 
	`Ârötf
(out, ")");

82 
T_NAME
:

83 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "NAME %s", 
	`S_«me
(
exp
->
u
.
NAME
));

85 
T_CONST
:

86 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "CONST %d", 
exp
->
u
.
CONST
);

88 
T_CALL
:

89 {
T_expLi°
 
¨gs
 = 
exp
->
u
.
CALL
.args;

90 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "CALL(\n"); 
	`¥_åì_exp
(out, 
exp
->
u
.
CALL
.
fun
,d+1);

91 ;
¨gs
;árgs˜rgs->
èû
) {

92 
	`Ârötf
(
out
, ",\n"); 
	`¥_åì_exp
(out, 
¨gs
->
hód
,
d
+2);

94 
	`Ârötf
(
out
, ")");

98 
	}
}

100 
	$¥ötStmLi°
 (
FILE
 *
out
, 
T_°mLi°
 
°mLi°
)

102 ; 
°mLi°
; stmLi°=°mLi°->
èû
) {

103 
	`¥_°m
(
out
, 
°mLi°
->
hód
,0); 
	`Ârötf
(out, "\n");

105 
	}
}

	@printtree.h

1 #i‚de‡
PRINT_TREE_H


2 
	#PRINT_TREE_H


	)

5 
¥ötStmLi°
 (
FILE
 *
out
, 
T_°mLi°
 
°mLi°
) ;

	@regalloc.c

1 
	~<°dio.h
>

2 
	~"utû.h
"

3 
	~"symbﬁ.h
"

4 
	~"ãmp.h
"

5 
	~"åì.h
"

6 
	~"absyn.h
"

7 
	~"as£m.h
"

8 
	~"‰ame.h
"

9 
	~"gøph.h
"

10 
	~"cﬁ‹.h
"

11 
	~"livíess.h
"

12 
	~"ªgÆloc.h
"

13 
	~"èbÀ.h
"

15 
	~"Êowgøph.h
"

17 
RA_ªsu…
 
	$RA_ªgAŒoc
(
F_‰ame
 
f
, 
AS_ö°rLi°
 
û
) {

19 
RA_ªsu…
 
ªt
;

20 
G_gøph
 
Êowgøph
 = 
	`FG_As£mFlowGøph
(
û
, 
f
);

21 
Live_gøph
 
livegøph
 = 
	`Live_livíess
(
Êowgøph
);

23 
COL_ªsu…
 
¸
 = 
	`COL_cﬁ‹
(
livegøph
.
gøph
, 
F_ãmpM≠
, 
	`F_ªgi°îs
());

25 
ªt
.
cﬁ‹ög
 = 
¸
.coloring;

26 
ªt
.
û
 = il;

27  
ªt
;

28 
	}
}

	@regalloc.h

2 
	sRA_ªsu…
 {
Temp_m≠
 
	mcﬁ‹ög
; 
AS_ö°rLi°
 
	mû
;};

3 
RA_ªsu…
 
RA_ªgAŒoc
(
F_‰ame
 
f
, 
AS_ö°rLi°
 
û
);

	@runtime.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

7 *
	$öôAºay
(
size
, 
öô
)

8 {
i
;

9 *
a
 = (*)
	`mÆloc
(
size
*());

10 
i
=0;i<
size
;i++Ë
a
[i]=
öô
;

11  
a
;

12 
	}
}

14 *
	$ÆlocRec‹d
(
size
)

15 {
i
;

16 *
p
, *
a
;

17 
p
 = 
a
 = (*)
	`mÆloc
(
size
);

18 
i
=0;i<
size
;i+=()Ë*
p
++ = 0;

19  
a
;

20 
	}
}

22 
	s°rög
 {
	mÀngth
; 
	mch¨s
[1];};

24 
	$°rögEquÆ
(
°rög
 *
s
, °rög *
t
)

25 {
i
;

26 i‡(
s
==
t
)  1;

27 i‡(
s
->
Àngth
!=
t
->length)  0;

28 
i
=0;i<
s
->
Àngth
;i++Ëi‡(s->
ch¨s
[i]!=
t
->chars[i])  0;

30 
	}
}

32 
	$¥öt
(
°rög
 *
s
)

33 {
i
; *
p
=
s
->
ch¨s
;

34 
i
=0;i<
s
->
Àngth
;i++,
p
++Ë
	`putch¨
(*p);

35 
	}
}

37 
	$¥öti
(
k
)

39 
	`¥ötf
("%d", 
k
);

40 
	}
}

42 
	$Êush
()

44 
	`fÊush
(
°dout
);

45 
	}
}

47 
°rög
 
	gc⁄°s
[256];

48 
°rög
 
	gem±y
={0,""};

50 
	$maö
()

51 {
i
;

52 
i
=0;i<256;i++)

53 {
c⁄°s
[
i
].
Àngth
=1;

54 
c⁄°s
[
i
].
ch¨s
[0]=i;

56  
	`tigîmaö
(0 );

57 
	}
}

59 
	$‹d
(
°rög
 *
s
)

61 i‡(
s
->
Àngth
==0)  -1;

62  
s
->
ch¨s
[0];

63 
	}
}

65 
°rög
 *
	$chr
(
i
)

67 i‡(
i
<0 || i>=256)

68 {
	`¥ötf
("chr(%dËouào‡ønge\n",
i
); 
	`exô
(1);}

69  
c⁄°s
+
i
;

70 
	}
}

72 
	$size
(
°rög
 *
s
)

74  
s
->
Àngth
;

75 
	}
}

77 
°rög
 *
	$sub°rög
(
°rög
 *
s
, 
fú°
, 
n
)

79 i‡(
fú°
<0 || fú°+
n
>
s
->
Àngth
)

80 {
	`¥ötf
("sub°rög([%d],%d,%dËouào‡ønge\n",
s
->
Àngth
,
fú°
,
n
);

81 
	`exô
(1);}

82 i‡(
n
==1Ë 
c⁄°s
+
s
->
ch¨s
[
fú°
];

83 {
°rög
 *
t
 = (°rög *)
	`mÆloc
(()+
n
);

84 
i
;

85 
t
->
Àngth
=
n
;

86 
i
=0;i<
n
;i++Ë
t
->
ch¨s
[i]=
s
->ch¨s[
fú°
+i];

87  
t
;

89 
	}
}

91 
°rög
 *
	$c⁄ˇt
(
°rög
 *
a
, °rög *
b
)

93 i‡(
a
->
Àngth
==0Ë 
b
;

94 i‡(
b
->
Àngth
==0Ë 
a
;

95 {
i
, 
n
=
a
->
Àngth
+
b
->length;

96 
°rög
 *
t
 = (°rög *)
	`mÆloc
(()+
n
);

97 
t
->
Àngth
=
n
;

98 
i
=0;i<
a
->
Àngth
;i++)

99 
t
->
ch¨s
[
i
]=
a
->chars[i];

100 
i
=0;i<
b
->
Àngth
;i++)

101 
t
->
ch¨s
[
i
+
a
->
Àngth
]=
b
->chars[i];

102  
t
;

104 
	}
}

106 
	$nŸ
(
i
)

107 {  !
i
;

108 
	}
}

110 #unde‡
gëch¨


112 
°rög
 *
	$__wøp_gëch¨
()

113 {
i
=
	`gëc
(
°dö
);

114 i‡(
i
==
EOF
Ë &
em±y
;

115  
c⁄°s
+
i
;

116 
	}
}

	@semant.c

1 
	~"£m™t.h
"

3 
	sex±y
 {
Tr_exp
 
	mexp
; 
Ty_ty
 
	mty
;};

4 
ex±y
 
	$expTy
(
Tr_exp
 
exp
, 
Ty_ty
 
ty
) {

5 
ex±y
 
e
;É.
exp
Ûxp;É.
ty
=ty; É;

6 
	}
}

9 
	#d¥ötf
(...)

	)

12 
F_‰agLi°
 
	$SEM_å™sProg
(
A_exp
 
exp
)

14 
S_èbÀ
 
ãnv
 = 
	`E_ba£_ãnv
();

15 
S_èbÀ
 
vív
 = 
	`E_ba£_vív
();

16 
Tr_Àvñ
 
out
 = 
	`Tr_ouãrmo°
();

17 
ex±y
 
ë
 = 
	`å™sExp
(
vív
, 
ãnv
, 
exp
,

18 
	`Tr_√wLevñ
(
out
, 
	`S_Symbﬁ
("maö"), 
NULL
),

20 
NULL
);

21 
	`Tr_¥ocE¡ryExô
(
out
, 
ë
.
exp
);

22 
F_‰agLi°
 
ª¶
 = 
	`Tr_gëFøgLi°
();

23 
	`d¥ötf
("ª¶ : %∞%p\n", 
ª¶
,Ñe¶->
èû
);

24  
ª¶
;

25 
	}
}

27 
Ty_ty
 
	$a˘uÆ_ty
(
Ty_ty
 
ty
)

29 
	`as£π
(
ty
);

30 
Ty_ty
 
tm±y
;

31 
ty
->
köd
 =
Ty_«me
) {

32 
	`d¥ötf
("ty...%s\n", 
	`S_«me
(
ty
->
u
.
«me
.
sym
));

33 
tm±y
 = 
ty
->
u
.
«me
.ty;

34 i‡(
tm±y
)

35 
ty
 = 
tm±y
;

37  
NULL
;

39 
	`d¥ötf
("ªtu∫Åy %d\n", 
ty
->
köd
-
Ty_ªc‹d
);

40  
ty
;

41 
	}
}

43 
Ty_tyLi°
 
	$makeF‹mÆTyLi°
(
S_èbÀ
 
ãnv
, 
A_fõldLi°
 
aÊ
)

45 i‡(!
aÊ
Ë 
NULL
;

46 
Ty_tyLi°
 
âl
 = 
	`checked_mÆloc
((*ttl));

47 
Ty_tyLi°
 
âl_hd
 = 
âl
;

48 
Ty_tyLi°
 
œ°
 = 
NULL
;

49 
aÊ
 !
NULL
) {

50 
âl
->
èû
 = 
	`checked_mÆloc
((*(ttl->tail)));

52 i‡(
aÊ
->
hód
->
typ
 =
	`S_Symbﬁ
("int"))

53 
âl
->
hód
 = 
	`Ty_I¡
();

54 i‡(
aÊ
->
hód
->
typ
 =
	`S_Symbﬁ
("string"))

55 
âl
->
hód
 = 
	`Ty_Såög
();

57 
âl
->
hód
 = 
	`S_look
(
ãnv
, 
aÊ
->hód->
typ
);

59 
	`d¥ötf
("f‹mÆÜi°:%†%x\n", 
	`S_«me
(
aÊ
->
hód
->
typ
), 
âl
);

60 i‡(
âl
->
hód
 =
NULL
) {

61 
	`EM_îr‹
(
aÊ
->
hód
->
pos
, " undeföedÅy≥: %s", 
	`S_«me
◊Ê->hód->
typ
));

63 
œ°
 = 
âl
;

64 
âl
 =Åé->
èû
;

65 
aÊ
 =áÊ->
èû
;

67 i‡(
œ°
Ëœ°->
èû
 = 
NULL
;

68  
âl_hd
;

69 
	}
}

71 
ex±y
 
	$å™sExp
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_exp
 
a
, 
Tr_Àvñ
 
Àvñ
, 
Tr_exp
 
brk
)

73 
a
->
köd
) {

74 
A_v¨Exp
:

76 
	`d¥ötf
("evaluate varÉxp\n");

77  
	`å™sV¨
(
vív
, 
ãnv
, 
a
->
u
.
v¨
, 
Àvñ
, 
brk
);

79 
A_nûExp
:

81 
	`d¥ötf
("Çil!\n");

82  
	`expTy
(
	`Tr_nûExp
(), 
	`Ty_Nû
());

84 
A_ötExp
:

86 
	`d¥ötf
(" int!\n");

87  
	`expTy
(
	`Tr_c⁄°V¨
(
a
->
u
.
öâ
), 
	`Ty_I¡
());

89 
A_°rögExp
:

91 
	`d¥ötf
(" string!\n");

92  
	`expTy
(
	`Tr_°rögV¨
(
a
->
u
.
°rögg
), 
	`Ty_Såög
());

94 
A_ˇŒExp
:

96 
E_ívíåy
 
ë
 = 
	`S_look
(
vív
, 
a
->
u
.
ˇŒ
.
func
);

97 
	`d¥ötf
(" cÆl!Üook i¿%∞[%s:%p]\n", 
vív
, 
	`S_«me
(
a
->
u
.
ˇŒ
.
func
), 
ë
);

98 i‡(
ë
 =
NULL
 ||Ét->
köd
 !
E_funE¡ry
) {

99 
	`EM_îr‹
(
a
->
pos
, "undeföed fun˘i⁄ %s", 
	`S_«me
◊->
u
.
ˇŒ
.
func
));

100  
	`expTy
(
	`Tr_c⁄°V¨
(0), 
	`Ty_Nû
());

102 
Ty_tyLi°
 
f‹mÆs
 = 
ë
->
u
.
fun
.formals;

103 
A_expLi°
 
ñ
 = 
a
->
u
.
ˇŒ
.
¨gs
;

104 
Tr_ac˚ssLi°
 
∑øLi°
 = 
NULL
;

105 
Tr_expLi°
 
ãÃ
 = 
NULL
;

106 
ex±y
 
tmp
;

107 
f‹mÆs
 !
NULL
) {

109 i‡(
ñ
 =
NULL
) {

110 
	`EM_îr‹
(
a
->
pos
, "Too fewárguments.");

111  
	`expTy
(
	`Tr_c⁄°V¨
(0), 
	`Ty_Nû
());

113 
tmp
 = 
	`å™sExp
(
vív
, 
ãnv
, 
ñ
->
hód
, 
Àvñ
, 
brk
);

114 i‡(
f‹mÆs
->
hód
 !
tmp
.
ty
)

115 
	`EM_îr‹
(
a
->
pos
, "paraÅype mismatch");

117 
f‹mÆs
 = f‹mÆs->
èû
;

118 
ñ
 =Él->
èû
;

119 
ãÃ
 = 
	`Tr_ExpLi°
(
tmp
.
exp
,Åelr);

121 i‡(
ñ
 !
NULL
) {

122 
	`EM_îr‹
(
a
->
pos
, "toÿm™yÖ¨am†ö fun˘i⁄ %s", 
	`S_«me
◊->
u
.
ˇŒ
.
func
));

123  
	`expTy
(
	`Tr_c⁄°V¨
(0), 
ë
->
u
.
fun
.
ªsu…
);

125  
	`expTy
(
	`Tr_ˇŒExp
(
ë
->
u
.
fun
.
œbñ
,

127 
ë
->
u
.
fun
.
Àvñ
,

128 
Àvñ
, 
ãÃ
), 
ë
->
u
.
fun
.
ªsu…
);

131 
A_›Exp
:

133 
	`d¥ötf
(" op!\n");

134 
A_›î
 
›î
 = 
a
->
u
.
›
.oper;

135 
ex±y
 
À·
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
›
.À·, 
Àvñ
, 
brk
);

136 
ex±y
 
right
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
›
.right, 
Àvñ
, 
brk
);

137 i‡(
›î
==
A_∂usOp
 || o≥r==
A_möusOp


138 || 
›î
==
A_timesOp
 || o≥r==
A_divideOp
) {

139 i‡(
À·
.
ty
->
köd
 !
Ty_öt
) {

140 
îr_öt
;

142 i‡(
right
.
ty
->
köd
 !
Ty_öt
) {

143 
îr_öt
;

146  
	`expTy
(
	`Tr_¨ôhExp
(
›î
, 
À·
.
exp
, 
right
.exp), 
	`Ty_I¡
());

147 } i‡(
À·
.
ty
->
köd
 !
right
.ty->köd &&Üe·.ty !
	`Ty_Nû
() &&Ñight.ty != Ty_Nil()) {

148 
	`EM_îr‹
(
a
->
u
.
›
.
À·
->
pos
, "sameÅypeÑequired");

149 
îr_ªt
;

150 } i‡(
›î
!=
A_eqOp
 && o≥r!=
A_√qOp
) {

151 i‡(
À·
.
ty
->
köd
 !
Ty_öt
 || 
right
.ty->kind != Ty_int) {

152 
îr_comp
;

154 } i‡(!(
À·
.
ty
->
köd
 =
Ty_öt
 ||Üe·.ty->köd =
Ty_¨øy
 ||Üe·.ty->köd =
Ty_ªc‹d
 ||Üe·.ty->köd =
Ty_°rög
)) {

155 i‡(
right
.
ty
 !
	`Ty_Nû
()) {

156 
îr_comp
;

161  
	`expTy
(
	`Tr_compExp
(
›î
, 
À·
.
exp
, 
right
.exp), 
	`Ty_I¡
());

162 
îr_öt
:

163 
	`EM_îr‹
(
a
->
u
.
›
.
À·
->
pos
, "integerÑequired");

164 
îr_ªt
;

165 
îr_comp
:

166 
	`EM_îr‹
(
a
->
u
.
›
.
right
->
pos
, "can't compare!");

167 
îr_ªt
;

168 
îr_ªt
:

169  
	`expTy
(
	`Tr_c⁄°V¨
(0), 
	`Ty_I¡
());

171 
A_ªc‹dExp
:

173 
	`d¥ötf
("Ñecord!\n");

174 
Ty_ty
 
ªc‹dty
 = 
	`S_look
(
ãnv
, 
a
->
u
.
ªc‹d
.
typ
);

175 i‡(
NULL
 =
ªc‹dty
) {

176 
	`EM_îr‹
(
a
->
pos
, "undeföedÅy≥ %s", 
	`S_«me
◊->
u
.
ªc‹d
.
typ
));

177  
	`expTy
(
	`Tr_c⁄°V¨
(0), 
	`Ty_Rec‹d
(
NULL
));

179 i‡(
ªc‹dty
->
köd
 !
Ty_ªc‹d
) {

180 
	`EM_îr‹
(
a
->
pos
, "undeföedÅy≥ %s", 
	`S_«me
◊->
u
.
ªc‹d
.
typ
));

182 
Tr_expLi°
 
ñ_ªvî£d
 = 
	`checkRec‹dFõldLi°
(
ãnv
, 
vív
, 
a
->
u
.
ªc‹d
.
fõlds
, 
ªc‹dty
->u.ªc‹d, 
Àvñ
, 
brk
);

183  
	`expTy
(
	`Tr_ªc‹dExp
(
ñ_ªvî£d
), 
ªc‹dty
);

185 
A_£qExp
:

187 
	`d¥ötf
(" seq!\n");

188 
A_expLi°
 
ñ
 = 
a
->
u
.
£q
;

190 i‡(
ñ
 =
NULL
)

191  
	`expTy
(
	`Tr_nûExp
(), 
	`Ty_Void
());

192 ;
ñ
->
èû
 !
NULL
;Él=el->tail) {

193 
	`å™sExp
(
vív
, 
ãnv
, 
ñ
->
hód
, 
Àvñ
, 
brk
);

195  
	`å™sExp
(
vív
, 
ãnv
, 
ñ
->
hód
, 
Àvñ
, 
brk
);

197 
A_assignExp
:

199 
	`d¥ötf
("assgin!\n");

200 
ex±y
 
v¨
 = 
	`å™sV¨
(
vív
, 
ãnv
, 
a
->
u
.
assign
.v¨, 
Àvñ
, 
brk
);

201 
ex±y
 
exp
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
assign
.exp, 
Àvñ
, 
brk
);

202 i‡(
v¨
.
ty
 !
exp
.ty)

203 
	`EM_îr‹
(
a
->
pos
, "unm©chedássig¿ex∞%d %d", 
v¨
.
ty
->
köd
, 
exp
.ty->kind);

204  
	`expTy
(
	`Tr_assignExp
(
v¨
.
exp
,Éxp.exp), 
	`Ty_Void
());

206 
A_ifExp
:

208 
	`d¥ötf
(" if!\n");

209 
ex±y
 
c⁄d
;

210 i‡((
c⁄d
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
iff
.
ã°
, 
Àvñ
, 
brk
)).
ty
 !
	`Ty_I¡
())

211 
	`EM_îr‹
(
a
->
pos
, "ifÅest mustÖroduce int");

212 
	`d¥ötf
("Åhen!\n");

213 
ex±y
 
thíë
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
iff
.
thí
, 
Àvñ
, 
brk
);

214 i‡(
a
->
u
.
iff
.
ñ£e
 !
NULL
) {

215 
	`d¥ötf
("Élse!\n");

216 
ex±y
 
ñ£ë
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
iff
.
ñ£e
, 
Àvñ
, 
brk
);

218 i‡(
ñ£ë
.
ty
 !
thíë
.ty) {

220 i‡(!((
ñ£ë
.
ty
 =
	`Ty_Nû
(Ë||Él£ë.ty =
	`Ty_Void
()Ë|| (
thíë
.ty == Ty_Nil() ||Åhenet.ty == Ty_Void())))

221 
	`EM_îr‹
(
a
->
pos
, "thenÉxpándÉlseÉxpÅype mismatch");

223  
	`expTy
(
	`Tr_ifExp
(
c⁄d
.
exp
, 
thíë
.exp, 
ñ£ë
.exp),Åhíë.
ty
);

224 } i‡(
thíë
.
ty
 !
	`Ty_Void
()) {

225 
	`EM_îr‹
(
a
->
pos
, "if-thenÉxp's body mustÖroduceÇo value");

227  
	`expTy
(
	`Tr_ifExp
(
c⁄d
.
exp
, 
thíë
.exp, 
	`Tr_nûExp
()),Åhíë.
ty
);

229 
A_whûeExp
:

232 
	`d¥ötf
("while!\n");

233 
ex±y
 
ã°
, 
body
;

234 i‡((
ã°
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
whûì
.ã°, 
Àvñ
, 
brk
)).
ty
 !
	`Ty_I¡
())

235 
	`EM_îr‹
(
a
->
pos
, "whileÅest mustÖroduce int");

236 
Tr_exp
 
d⁄e
 = 
	`Tr_d⁄eExp
();

237 
body
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
whûì
.body, 
Àvñ
,

238 
d⁄e
 );

239 i‡(
body
.
ty
 !
	`Ty_Void
(Ë&& body.ty !
	`Ty_Nû
())

240 
	`EM_îr‹
(
a
->
pos
, "while body mustÖroduceÇo value");

241  
	`expTy
(
	`Tr_whûeExp
(
ã°
.
exp
, 
body
.exp, 
d⁄e
), 
	`Ty_Void
());

243 
A_f‹Exp
:

245 
	`d¥ötf
("f‹! %s\n", 
	`S_«me
(
a
->
u
.
f‹r
.
v¨
));

250 
A_exp
 
å™¶©ed
 = 
	`A_LëExp
(0,

251 
	`A_DecLi°
(
	`A_V¨Dec
(0, 
a
->
u
.
f‹r
.
v¨
, 
	`S_Symbﬁ
("öt"),á->u.f‹r.
lo
),

252 
	`A_DecLi°
(
	`A_V¨Dec
(0, 
	`S_Symbﬁ
("_limit"),

253 
	`S_Symbﬁ
("öt"), 
a
->
u
.
f‹r
.
hi
), 
NULL
)),

254 
	`A_WhûeExp
(0, 
	`A_OpExp
(0, 
A_…Op
,

255 
	`A_V¨Exp
(0, 
	`A_Sim∂eV¨
(0, 
a
->
u
.
f‹r
.
v¨
)),

256 
	`A_V¨Exp
(0, 
	`A_Sim∂eV¨
(0, 
	`S_Symbﬁ
("_limit")))),

257 
	`A_SeqExp
(0, 
	`A_ExpLi°
(
a
->
u
.
f‹r
.
body
,

258 
	`A_ExpLi°
(

259 
	`A_OpExp
(0, 
A_∂usOp
,

260 
	`A_V¨Exp
(0, 
	`A_Sim∂eV¨
(0, 
a
->
u
.
f‹r
.
v¨
)),

261 
	`A_I¡Exp
(0, 1)),

263 
	`A_ExpLi°
(
	`A_NûExp
(0), 
NULL
))))));

264  
	`å™sExp
(
vív
, 
ãnv
, 
å™¶©ed
, 
Àvñ
, 
brk
);

284 
A_bªakExp
:

287 
	`d¥ötf
("break!\n");

288 i‡(!
brk
Ë 
	`expTy
(
	`Tr_c⁄°V¨
(0), 
	`Ty_Void
());

289  
	`expTy
(
	`Tr_bªakExp
(
brk
), 
	`Ty_Void
());

291 
A_ÀtExp
:

293 
	`d¥ötf
("let!\n");

294 
A_decLi°
 
d
;

295 
	`S_begöSc›e
(
vív
);

296 
	`S_begöSc›e
(
ãnv
);

298 
Tr_expLi°
 
l
 = 
NULL
, 
hód
 = NULL; 
Tr_exp
 
e
;

299 
d
 = 
a
->
u
.
Àt
.
decs
; d; d=d->
èû
) {

301 
e
 = 
	`å™sDec
(
vív
, 
ãnv
, 
d
->
hód
, 
Àvñ
, 
brk
);

302 
l
 = 
	`Tr_ExpLi°
(
e
,Ü);

304 
	`d¥ötf
("let body\n");

306 
ex±y
 
ë
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
Àt
.
body
, 
Àvñ
, 
brk
);

307 
l
 = 
	`Tr_ExpLi°
(
ë
.
exp
,Ü);

309 
	`d¥ötf
("endÜet body\n");

310 
	`S_ídSc›e
(
ãnv
);

311 
	`S_ídSc›e
(
vív
);

313  
	`expTy
(
	`Tr_£qExp
(
l
), 
ë
.
ty
);

315 
A_¨øyExp
:

317 
	`d¥ötf
("array!\n");

318 
ex±y
 
öô
, 
size
;

319 
Ty_ty
 
typ
 = 
	`S_look
(
ãnv
, 
a
->
u
.
¨øy
.typ);

320 
	`d¥ötf
("lookög %s:%d\n", 
	`S_«me
(
a
->
u
.
¨øy
.
typ
),Åyp->
köd
);

321 
öô
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
¨øy
.öô, 
Àvñ
, 
brk
);

322 i‡(
typ
->
u
.
¨øy
->
köd
 =
Ty_«me
)

323 
typ
->
u
.
¨øy
 = 
	`S_look
(
ãnv
,Åyp->u.¨øy->u.
«me
.
sym
);

324 i‡(
öô
.
ty
 !
typ
->
u
.
¨øy
) {

325 
	`EM_îr‹
(
a
->
pos
, "type mismatch");

326  
	`expTy
(
	`Tr_c⁄°V¨
(0), 
	`Ty_Aºay
(
typ
));

328 
size
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
¨øy
.size, 
Àvñ
, 
brk
);

329 i‡(
size
.
ty
 !
	`Ty_I¡
())

330 
	`EM_îr‹
(
a
->
pos
, "ArrayÜength must be int.");

331  
	`expTy
(
	`Tr_¨øyExp
(
öô
.
exp
, 
size
.exp), 
typ
);

336 
	`as£π
(0);

337 
	}
}

339 
ex±y
 
	$å™sV¨
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_v¨
 
v
, 
Tr_Àvñ
 
Àvñ
, 
Tr_exp
 
brk
)

341 
v
->
köd
) {

342 
A_sim∂eV¨
:

344 
E_ívíåy
 
x
 = 
	`S_look
(
vív
, 
v
->
u
.
sim∂e
);

345 
	`d¥ötf
("sim∂êv¨! %s\n", 
	`S_«me
(
v
->
u
.
sim∂e
));

346 i‡(
x
 && x->
köd
==
E_v¨E¡ry
) {

347 
Tr_ac˚ss
 
acc
 = 
x
->
u
.
v¨
.
ac˚ss
;

348  
	`expTy
(
	`Tr_sim∂eV¨
(
acc
, 
Àvñ
), 
	`a˘uÆ_ty
(
x
->
u
.
v¨
.
ty
));

350 
	`EM_îr‹
(
v
->
pos
, "undeföed v¨übÀ %s", 
	`S_«me
(v->
u
.
sim∂e
));

351  
	`expTy
(
	`Tr_c⁄°V¨
(0), 
	`Ty_I¡
());

354 
A_fõldV¨
:

356 
	`d¥ötf
("fieldvar!\n");

357 
ex±y
 
ë
 = 
	`å™sV¨
(
vív
, 
ãnv
, 
v
->
u
.
fõld
.
v¨
, 
Àvñ
, 
brk
);

358 i‡(
ë
.
ty
->
köd
==
Ty_ªc‹d
) {

359 
Ty_fõldLi°
 
Ê
;

360 
i
 = -1, 
n
 = 0;

361 
Ty_ty
 
tm±y
;

362 
Ê
 = 
ë
.
ty
->
u
.
ªc‹d
; fl; fl=Ê->
èû
, 
n
++) {

363 i‡(
Ê
->
hód
->
«me
 =
v
->
u
.
fõld
.
sym
) {

364 
i
 = 
n
;

365 
tm±y
 = 
Ê
->
hód
->
ty
;

366 i‡(
tm±y
->
köd
 =
Ty_«me
) {

369 
tm±y
 = 
	`S_look
(
ãnv
,Åm±y->
u
.
«me
.
sym
);

374 i‡(
i
 >= 0)

375  
	`expTy
(
	`Tr_fõldV¨
(
ë
.
exp
, 
n
 - 
i
), 
tm±y
);

377 
	`EM_îr‹
(
v
->
pos
, "fõld %†d€¢'àexi°", 
	`S_«me
(v->
u
.
fõld
.
sym
));

378  
	`expTy
(
	`Tr_c⁄°V¨
(0), 
	`Ty_I¡
());

380 
	`EM_îr‹
(
v
->
pos
, "notáÑecordÅype");

381  
	`expTy
(
	`Tr_c⁄°V¨
(0), 
	`Ty_I¡
());

384 
A_subs¸ùtV¨
:

386 
	`d¥ötf
("subscript!\n");

387 
ex±y
 
ë
 = 
	`å™sV¨
(
vív
, 
ãnv
, 
v
->
u
.
subs¸ùt
.
v¨
, 
Àvñ
, 
brk
);

388 
ex±y
 
ëöt
 = 
	`å™sExp
(
vív
, 
ãnv
, 
v
->
u
.
subs¸ùt
.
exp
, 
Àvñ
, 
brk
);

389 i‡(
ëöt
.
ty
 !
	`Ty_I¡
()) {

390 
	`EM_îr‹
(
v
->
pos
, "subscriptÉrr");

391  
	`expTy
(
	`Tr_c⁄°V¨
(0), 
	`Ty_I¡
());

394 i‡(
	`a˘uÆ_ty
(
ë
.
ty
)->
köd
==
Ty_¨øy
) {

395 
Ty_ty
 
¨r
 = 
ë
.
ty
->
u
.
¨øy
;

396  
	`expTy
(
	`Tr_subs¸ùtV¨
(
ë
.
exp
, 
ëöt
.exp), 
¨r
);

398 
	`EM_îr‹
(
v
->
pos
, "arrayÅypeÑequired");

399  
	`expTy
(
	`Tr_c⁄°V¨
(0), 
	`Ty_I¡
());

402 
deÁlut
:

405 
	`as£π
(0);

406 
	}
}

408 
Tr_exp
 
	$å™sDec
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_dec
 
d
, 
Tr_Àvñ
 
Àvñ
, 
Tr_exp
 
brk
)

410 
d
->
köd
) {

411 
A_v¨Dec
:

413 
	`d¥ötf
("dec:v¨dec:%∞%p\n", 
d
->
u
.
v¨
.v¨, d->u.v¨.
typ
);

414 
ex±y
 
e
 = 
	`å™sExp
(
vív
, 
ãnv
, 
d
->
u
.
v¨
.
öô
, 
Àvñ
, 
brk
);

415 
E_ívíåy
 
ì¡ry
 = 
	`E_V¨E¡ry
(
	`Tr_ÆlocLoˇl
(
Àvñ
, 
TRUE
), 
e
.
ty
);

417 
Ty_ty
 
ty
;

418 i‡(
d
->
u
.
v¨
.
typ
 =
NULL
) {

419 i‡(
e
.
ty
 =
	`Ty_Nû
())

420 
	`EM_îr‹
(
d
->
pos
, "init shouldÇot beÇil withoutÅype specified");

421 } i‡((
ty
 = 
	`S_look
(
ãnv
, 
d
->
u
.
v¨
.
typ
)Ë!
e
.ty) {

422 i‡(
e
.
ty
 !
	`Ty_Nû
())

423 
	`EM_îr‹
(
d
->
pos
, "type mismatch");

426 
	`d¥ötf
("puàtÿ%∞[%p:%p]\n", 
vív
, 
d
->
u
.
v¨
.v¨, 
ì¡ry
);

427 
	`S_íãr
(
vív
, 
d
->
u
.
v¨
.v¨, 
ì¡ry
);

428  
	`Tr_assignExp
(
	`Tr_sim∂eV¨
(
ì¡ry
->
u
.
v¨
.
ac˚ss
, 
Àvñ
), 
e
.
exp
);

430 
A_ty≥Dec
:

432 
	`d¥ötf
("dec:ty≥dec:%p\n", 
d
->
u
.
ty≥
);

433 
Ty_tyLi°
 
é
 = 
	`«mëyLi°
(
ãnv
, 
d
->
u
.
ty≥
);

434 
	`checkTy≥Dec
(
ãnv
, 
é
);

435  
	`Tr_c⁄°V¨
(0);

437 
A_fun˘i⁄Dec
:

439 
	`d¥ötf
("dec:funcdec:%p\n", 
d
->
u
.
ty≥
);

440 
A_fundec
 
f
;

441 
A_fundecLi°
 
Ê
;

443 
Ê
=
d
->
u
.
fun˘i⁄
; fl; fl=Ê->
èû
) {

444 
f
 = 
Ê
->
hód
;

445 
Ty_ty
 
ªsu…Ty
;

446 i‡(
f
->
ªsu…
 !
NULL
) {

448 
ªsu…Ty
 = 
	`S_look
(
ãnv
, 
f
->
ªsu…
);

450 
ªsu…Ty
 = 
	`Ty_Void
();

453 
Ty_tyLi°
 
f‹mÆTys
 = 
	`makeF‹mÆTyLi°
(
ãnv
, 
f
->
∑øms
);

454 
E_ívíåy
 
íåy
 = 
	`E_FunE¡ry
(
Àvñ
, 
f
->
«me
, 
f‹mÆTys
, 
ªsu…Ty
);

455 
	`S_íãr
(
vív
, 
f
->
«me
, 
íåy
);

456 
	`d¥ötf
("\tfuncdec:œbñ [%s]\n", 
	`S_«me
(
f
->
«me
));

460 
S_èbÀ
 
dup_func
 = 
	`S_em±y
();

461 
Ê
=
d
->
u
.
fun˘i⁄
; fl; fl=Ê->
èû
) {

462 
f
=
Ê
->
hód
;

463 i‡(
NULL
 !
	`S_look
(
dup_func
, 
f
->
«me
))

464 
	`EM_îr‹
(
f
->
pos
, "two functions haveÅhe sameÇame %s\n",

465 
	`S_«me
(
f
->
«me
));

466 
	`S_íãr
(
dup_func
, 
f
->
«me
, (*) 1);

469 
E_ívíåy
 
íåy
 = 
	`S_look
(
vív
, 
f
->
«me
);

471 
Ty_tyLi°
 
f‹mÆTys
 = 
íåy
->
u
.
fun
.
f‹mÆs
;

472 
Ty_ty
 
ªsu…Ty
 = 
íåy
->
u
.
fun
.
ªsu…
;

475 
U_boﬁLi°
 
esˇ≥Li°
 = 
NULL
;

476 
Ty_tyLi°
 
t
=
f‹mÆTys
;Å;ÅÒ->
èû
) {

477 
esˇ≥Li°
 = 
	`U_BoﬁLi°
(
TRUE
,ÉscapeList);

479 
Tr_Àvñ
 
√wÀv
 = 
	`Tr_√wLevñ
(
Àvñ
, 
íåy
->
u
.
fun
.
œbñ
, 
esˇ≥Li°
);

481 
	`S_begöSc›e
(
vív
);

483 
A_fõldLi°
 
l
; 
Ty_tyLi°
 
t
;

484 
Tr_ac˚ssLi°
 
accs
 = 
	`AccTaû
(
	`Tr_f‹mÆs
(
√wÀv
));

486 
l
=
f
->
∑øms
, 
t
=
f‹mÆTys
;Ü;Üˆ->
èû
,ÅÒ->èû, 
accs
=
	`AccTaû
(accs)) {

487 
	`d¥ötf
(" %†:É¡îÖ¨am\n", 
	`S_«me
(
íåy
->
u
.
fun
.
œbñ
));

491 
	`S_íãr
(
vív
, 
l
->
hód
->
«me
,

492 
	`E_V¨E¡ry
(
	`AccHód
(
accs
), 
t
->
hód
));

495 
	`d¥ötf
("evaluate bodyÉxp!\n");

496 
ex±y
 
ë
 = 
	`å™sExp
(
vív
, 
ãnv
, 
f
->
body
, 
√wÀv
, 
brk
);

497 i‡(
ªsu…Ty
 =
	`Ty_Void
()) {

498 i‡(
ë
.
ty
 !
	`Ty_Void
())

499 
	`EM_îr‹
(
f
->
pos
, "procedureÑeturns value\n");

501 i‡(
ë
.
ty
 =
	`Ty_Void
())

502 
	`EM_îr‹
(
f
->
pos
, "Mu°Ñëu∫ vÆue! %s\n", 
	`S_«me
(
Ê
->
hód
->
«me
));

503 i‡(
ë
.
ty
 !
ªsu…Ty
)

504 
	`EM_îr‹
(
f
->
pos
, "Rëu∫ vÆuênŸ m©ch! %s\n", 
	`S_«me
(
Ê
->
hód
->
«me
));

507 
	`d¥ötf
("¥o˚¡ryexô:[%s]\n", 
	`S_«me
(
f
->
«me
));

508 
	`Tr_¥ocE¡ryExô
(
√wÀv
, 
ë
.
exp
);

509 
	`S_ídSc›e
(
vív
);

511 
	`d¥ötf
("\tfuncdec:3 föish%p\n", 
Ê
);

512  
	`Tr_c⁄°V¨
(0);

516 
	}
}

518 
Ty_ty
 
	$å™sTy
(
S_èbÀ
 
ãnv
, 
A_ty
 
a
)

520 
Ty_ty
 
t
 = 
	`checked_mÆloc
((*t));

522 i‡(
a
 =
NULL
) {

523 
	`d¥ötf
("type void\n");

524  
	`Ty_Void
();

526 
a
->
köd
) {

527 
A_«meTy
:

529 i‡(
a
->
u
.
«me
 =
	`S_Symbﬁ
("int")) {

530 
	`d¥ötf
("type int\n");

531  
	`Ty_I¡
();

532 } i‡(
a
->
u
.
«me
 =
	`S_Symbﬁ
("string")) {

533 
	`d¥ötf
("type string\n");

534  
	`Ty_Såög
();

536 
	`d¥ötf
("typeÇame\n");

538  
	`Ty_Name
(
a
->
u
.
«me
, 
NULL
);

541 
A_ªc‹dTy
:

543 
	`d¥ötf
("typeÑecord\n");

544 
A_fõldLi°
 
aÊ
 = 
a
->
u
.
ªc‹d
;

545  
	`Ty_Rec‹d
(
	`makeTyFõldLi°
(
ãnv
, 
aÊ
));

547 
A_¨øyTy
:

549 
Ty_ty
 
ty
 = 
	`å™sTy
(
ãnv
, 
	`A_NameTy
(0, 
a
->
u
.
¨øy
));

550 
	`d¥ötf
("ty≥áºay o‡%s\n", 
	`S_«me
(
a
->
u
.
¨øy
));

551  
	`Ty_Aºay
(
ty
);

554 
	`d¥ötf
("a:%p, %x\n", 
a
,á->
köd
);

555 
	`as£π
(0);

556  
	`Ty_Void
();

558 
	}
}

560 
Ty_fõldLi°
 
	$makeTyFõldLi°
(
S_èbÀ
 
ãnv
, 
A_fõldLi°
 
aÊ
)

562 i‡(
aÊ
 =
NULL
)  NULL;

563 
A_ty
 
©y
 = 
	`A_NameTy
(
aÊ
->
hód
->
pos
,áÊ->hód->
typ
);

564 
Ty_fõld
 
hód
 = 
	`Ty_Fõld
(
aÊ
->hód->
«me
, 
	`å™sTy
(
ãnv
, 
©y
));

565  
	`Ty_FõldLi°
(
hód
, 
	`makeTyFõldLi°
(
ãnv
, 
aÊ
->
èû
));

566 
	}
}

568 
Tr_expLi°
 
	$checkRec‹dFõldLi°
(
S_èbÀ
 
ãnv
, S_èbÀ 
vív
, 
A_efõldLi°
 
eÊ
, 
Ty_fõldLi°
 
Ê
, 
Tr_Àvñ
 
Àvñ
, 
Tr_exp
 
brk
)

570 
Tr_expLi°
 
ñ
 = 
NULL
;

571 ; 
Ê
; f»Ê->
èû
, 
eÊ
=efl->tail) {

572 i‡(
eÊ
 =
NULL
) {

573 
	`EM_îr‹
(0, "Toÿ„w fõlds! %s\n", 
	`S_«me
(
Ê
->
hód
->
«me
));

574  
NULL
;

577 
ex±y
 
exp
 = 
	`å™sExp
(
vív
, 
ãnv
, 
eÊ
->
hód
->exp, 
Àvñ
, 
brk
);

578 
Ty_ty
 
ty1
 = 
	`a˘uÆ_ty
(
exp
.
ty
);

579 
Ty_ty
 
ty2
 = 
	`a˘uÆ_ty
(
Ê
->
hód
->
ty
);

580 i‡(
ty1
 =
NULL
Ëty1 = 
	`S_look
(
ãnv
, 
exp
.
ty
->
u
.
«me
.
sym
);

581 i‡(
ty2
 =
NULL
Ëty2 = 
	`S_look
(
ãnv
, 
Ê
->
hód
->
ty
->
u
.
«me
.
sym
);

582 i‡(
ty1
 !
ty2
 &&Åy1->
köd
 !
Ty_nû
 ) {

583 
	`EM_îr‹
(
eÊ
->
hód
->
exp
->
pos
, "Unm©chedÅy:%s, %s\n", 
ty1
, 
ty2
);

584  
NULL
;

586 
ñ
 = 
	`Tr_ExpLi°
(
exp
.exp,Él);

589  
ñ
;

591 
	}
}

593 
Ty_tyLi°
 
	$«mëyLi°
(
S_èbÀ
 
ãnv
, 
A_«mëyLi°
 
∆
)

595 i‡(
∆
 =
NULL
)  NULL;

596 
Ty_ty
 
ty
 = 
	`å™sTy
(
ãnv
, 
∆
->
hód
->ty);

597 
	`d¥ötf
("dec:«mëyli°:%p, %d\n", 
∆
, 
ty
->
köd
);

602 
Ty_ty
 
hód
;

603 i‡(
ty
->
köd
 =
Ty_öt
 ||Åy->köd =
Ty_°rög
 ||Åy->köd =
Ty_«me
) {

604 
	`d¥ötf
("¸ótögáÇamêty≥, %s->%d\n", 
	`S_«me
(
∆
->
hód
->
«me
), 
ty
->
köd
);

605 
hód
 = 
	`Ty_Name
(
∆
->hód->
«me
, 
ty
);

607 
hód
 = 
ty
;

609 
	`S_íãr
(
ãnv
, 
∆
->
hód
->
«me
, 
ty
);

610 
	`d¥ötf
("£¡î:%†%d\n", 
	`S_«me
(
∆
->
hód
->
«me
), 
ty
->
köd
);

611  
	`Ty_TyLi°
(
hód
, 
	`«mëyLi°
(
ãnv
, 
∆
->
èû
));

612 
	}
}

615 
	$checkTy≥Dec
(
S_èbÀ
 
ãnv
, 
Ty_tyLi°
 
é
)

621 
Ty_ty
 
ty
, 
tm±y
;

622 
S_èbÀ
 
dup_check
 = 
	`S_em±y
();

623 ; 
é
;Å»é->
èû
) {

624 
ty
 = 
é
->
hód
;

625 
	`d¥ötf
("checkÅy≥.. %d\n", 
ty
->
köd
);

631 i‡(
ty
->
köd
 =
Ty_ªc‹d
) {

632 
	`checkRec‹d
(
ãnv
, 
ty
->
u
.
ªc‹d
);

639 i‡(
ty
->
köd
 =
Ty_«me
) {

640 i‡(
	`S_look
(
dup_check
, 
ty
->
u
.
«me
.
sym
)) {

641 
	`EM_îr‹
(0, "twoÅypes haveÅhe sameÇame");

643 
	`S_íãr
(
dup_check
, 
ty
->
u
.
«me
.
sym
, (*)1);

645 
S_èbÀ
 
cy˛e_check
 = 
	`S_em±y
();

646 
Ty_ty
 
¡y
 = 
ty
;

647 
¡y
 &&Çty->
köd
 =
Ty_«me
) {

648 
	`d¥ötf
("check cy˛e.. %s\n", 
	`S_«me
(
¡y
->
u
.
«me
.
sym
));

649 i‡(
	`S_look
(
cy˛e_check
, 
¡y
->
u
.
«me
.
sym
)) {

650 
	`EM_îr‹
(0, "illegalÅype cycle");

653 
	`S_íãr
(
cy˛e_check
, 
¡y
->
u
.
«me
.
sym
, (*)1);

654 
tm±y
 = 
	`S_look
(
ãnv
, 
¡y
->
u
.
«me
.
sym
);

657 
	`d¥ötf
("now jum∞«mëy %†tÿ%d\n", 
	`S_«me
(
¡y
->
u
.
«me
.
sym
), 
tm±y
->
köd
);

658 
¡y
 = 
tm±y
;

659 
	`d¥ötf
("¡y%∞¡y->köd =Ty_«me?:%d\n", 
¡y
, (¡y !
NULL
Ë? (¡y->
köd
 =
Ty_«me
) : 0);

666 i‡(
¡y
 =
NULL
) {

667 
	`EM_îr‹
(0, "%%s contains undeclaredÅype" );

669 
ty
->
u
.
«me
.ty = 
¡y
;

670 
	`S_íãr
(
ãnv
, 
ty
->
u
.
«me
.
sym
, 
¡y
);

674 
	`d¥ötf
("end of checkÅype\n");

677 
	}
}

679 
	$checkRec‹d
(
S_èbÀ
 
ãnv
, 
Ty_fõldLi°
 
Ê
)

682 i‡(
Ê
 =
NULL
) ;

683 
	`d¥ötf
("!!!!!!\n\n\n\n");

684 
Ty_ty
 
ty
 = 
Ê
->
hód
->ty, 
tm±y
;

685 
S_symbﬁ
 
s
;

687 i‡(
ty
->
köd
 =
Ty_¨øy
) {

688 
	`d¥ötf
("!!!!!!%d\n", 
ty
->
u
.
¨øy
->
köd
);

691 
S_èbÀ
 
cy˛e_check
 = 
	`S_em±y
();

692 
ty
 &&Åy->
köd
 =
Ty_«me
) {

693 i‡(
	`S_look
(
cy˛e_check
, 
ty
->
u
.
«me
.
sym
)) {

694 
	`EM_îr‹
(0, "illegalÅype cycle");

697 
s
 = 
ty
->
u
.
«me
.
sym
;

698 
	`S_íãr
(
cy˛e_check
, 
s
, (*)1);

699 
tm±y
 = 
	`S_look
(
ãnv
, 
s
);

700 
ty
->
u
.
«me
.ty = 
tm±y
;

701 
ty
 = 
tm±y
;

704 i‡(
ty
) {

705 
	`checkRec‹d
(
ãnv
, 
Ê
->
èû
);

708 
	`EM_îr‹
(0, " undeföedÅy≥ %s", 
	`S_«me
(
s
));

711 
	}
}

	@semant.h

1 #i‚de‡
SEMANT_H


2 
	#SEMANT_H


	)

3 
	~<°dio.h
>

4 
	~"utû.h
"

5 
	~"îr‹msg.h
"

6 
	~"symbﬁ.h
"

7 
	~"absyn.h
"

8 
	~"ty≥s.h
"

9 
	~"ív.h
"

11 
	~"ãmp.h
"

12 
	~"åì.h
"

13 
	~"‰ame.h
"

17 
ex±y
 
expTy
(
Tr_exp
 
exp
, 
Ty_ty
 
ty
);

19 
F_‰agLi°
 
SEM_å™sProg
(
A_exp
 
exp
);

20 
ex±y
 
å™sV¨
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_v¨
 
v
, 
Tr_Àvñ
 
Àvñ
, 
Tr_exp
 
bªakk
);

21 
ex±y
 
å™sExp
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_exp
 
a
, 
Tr_Àvñ
 
Àvñ
, 
Tr_exp
 
bºókk
 );

22 
Tr_exp
 
å™sDec
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_dec
 
d
, 
Tr_Àvñ
 
Àvñ
, Tr_ex∞
bªakk
);

23 
Ty_ty
 
å™sTy
–
S_èbÀ
 
ãnv
, 
A_ty
 
a
);

25 
Ty_ty
 
a˘uÆ_ty
(Ty_ty 
ty
);

26 
Ty_tyLi°
 
makeF‹mÆTyLi°
(
S_èbÀ
 
ãnv
, 
A_fõldLi°
);

27 
Ty_fõldLi°
 
makeTyFõldLi°
(
S_èbÀ
 
ãnv
, 
A_fõldLi°
 
aÊ
);

28 
Tr_expLi°
 
checkRec‹dFõldLi°
(
S_èbÀ
 
ãnv
, S_èbÀ 
vív
, 
A_efõldLi°
 
eÊ
, 
Ty_fõldLi°
, 
Tr_Àvñ
 
Àvñ
, 
Tr_exp
 
brk
);

29 
Ty_tyLi°
 
«mëyLi°
(
S_èbÀ
 
ãnv
, 
A_«mëyLi°
 
∆
);

30 
checkTy≥Dec
(
S_èbÀ
 
ãnv
, 
Ty_tyLi°
 
∆
);

31 
checkRec‹d
(
S_èbÀ
 
ãnv
, 
Ty_fõldLi°
 
Ê
);

	@symbol.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~"utû.h
"

4 
	~"symbﬁ.h
"

5 
	~"èbÀ.h
"

7 
	sS_symbﬁ_
 {
°rög
 
	m«me
; 
S_symbﬁ
 
	m√xt
;};

9 
S_symbﬁ
 
	$mksymbﬁ
(
°rög
 
«me
, 
S_symbﬁ
 
√xt
)

10 {
S_symbﬁ
 
s
=
	`checked_mÆloc
((*s));

11 
s
->
«me
=name;

12 
s
->
√xt
=next;

13  
s
;

14 
	}
}

16 
	#SIZE
 109

	)

18 
S_symbﬁ
 
	ghashèbÀ
[
SIZE
];

20 
	$hash
(*
s0
)

21 {
h
=0; *
s
;

22 
s
=
s0
; *s; s++)

23 
h
 = h*65599 + *
s
;

24  
h
;

25 
	}
}

27 
	$°ªq
(
°rög
 
a
, såög 
b
)

29  !
	`°rcmp
(
a
,
b
);

30 
	}
}

32 
S_symbﬁ
 
	$S_Symbﬁ
(
°rög
 
«me
)

33 {
ödex

	`hash
(
«me
Ë% 
SIZE
;

34 
S_symbﬁ
 
syms
 = 
hashèbÀ
[
ödex
], 
sym
;

35 
sym
=
syms
; sym; sym=sym->
√xt
)

36 i‡(
	`°ªq
(
sym
->
«me
,name))  sym;

37 
sym
 = 
	`mksymbﬁ
(
«me
,
syms
);

38 
hashèbÀ
[
ödex
]=
sym
;

39  
sym
;

40 
	}
}

42 
°rög
 
	$S_«me
(
S_symbﬁ
 
sym
)

44  
sym
->
«me
;

45 
	}
}

47 
S_èbÀ
 
	$S_em±y
()

49  
	`TAB_em±y
();

50 
	}
}

52 
	$S_íãr
(
S_èbÀ
 
t
, 
S_symbﬁ
 
sym
, *
vÆue
) {

53 
	`TAB_íãr
(
t
,
sym
,
vÆue
);

54 
	}
}

56 *
	$S_look
(
S_èbÀ
 
t
, 
S_symbﬁ
 
sym
) {

57  
	`TAB_look
(
t
,
sym
);

58 
	}
}

60 
S_symbﬁ_
 
	gm¨ksym
 = {"<mark>",0};

62 
	$S_begöSc›e
(
S_èbÀ
 
t
)

63 { 
	`S_íãr
(
t
,&
m¨ksym
,
NULL
);

64 
	}
}

66 
	$S_ídSc›e
(
S_èbÀ
 
t
)

67 {
S_symbﬁ
 
s
;

68 dÿ
s
=
	`TAB_p›
(
t
);

69 
s
 !&
m¨ksym
);

70 
	}
}

72 
	$S_dump
(
S_èbÀ
 
t
, (*
show
)(
S_symbﬁ
 
sym
, *
bödög
)) {

73 
	`TAB_dump
(
t
, ((*)(*, *)Ë
show
);

74 
	}
}

	@symbol.h

1 #i‚de‡
SYMBOL_H


2 
	#SYMBOL_H


	)

8 
S_symbﬁ_
 *
	tS_symbﬁ
;

13 
S_symbﬁ
 
S_Symbﬁ
(
°rög
);

16 
°rög
 
S_«me
(
S_symbﬁ
);

20 
TAB_èbÀ_
 *
	tS_èbÀ
;

23 
S_èbÀ
 
S_em±y
();

27 
S_íãr
(
S_èbÀ
 
t
, 
S_symbﬁ
 
sym
, *
vÆue
);

31 *
S_look
(
S_èbÀ
 
t
, 
S_symbﬁ
 
sym
);

34 
S_begöSc›e
(
S_èbÀ
 
t
);

38 
S_ídSc›e
(
S_èbÀ
 
t
);

	@table.c

6 
	~<°dio.h
>

7 
	~"utû.h
"

8 
	~"èbÀ.h
"

10 
	#TABSIZE
 127

	)

12 
bödî_
 *
	tbödî
;

13 
	sbödî_
 {*
	mkey
; *
	mvÆue
; 
bödî
 
	m√xt
; *
	m¥evt›
;};

14 
	sTAB_èbÀ_
 {

15 
bödî
 
	mèbÀ
[
TABSIZE
];

16 *
	mt›
;

20 
bödî
 
	$Bödî
(*
key
, *
vÆue
, 
bödî
 
√xt
, *
¥evt›
)

21 {
bödî
 
b
 = 
	`checked_mÆloc
((*b));

22 
b
->
key
 = key; b->
vÆue
=vÆue; b->
√xt
Úext; b->
¥evt›
 =Örevtop;

23  
b
;

24 
	}
}

26 
TAB_èbÀ
 
	$TAB_em±y
()

28 
TAB_èbÀ
 
t
 = 
	`checked_mÆloc
((*t));

29 
i
;

30 
t
->
t›
 = 
NULL
;

31 
i
 = 0; i < 
TABSIZE
; i++)

32 
t
->
èbÀ
[
i
] = 
NULL
;

33  
t
;

34 
	}
}

45 
	$TAB_íãr
(
TAB_èbÀ
 
t
, *
key
, *
vÆue
)

46 {
ödex
;

47 
	`as£π
(
t
 && 
key
);

48 
ödex
 = (()
key
Ë% 
TABSIZE
;

49 
t
->
èbÀ
[
ödex
] = 
	`Bödî
(
key
, 
vÆue
,t->èbÀ[ödex],Å->
t›
);

50 
t
->
t›
 = 
key
;

51 
	}
}

53 *
	$TAB_look
(
TAB_èbÀ
 
t
, *
key
)

54 {
ödex
;

55 
bödî
 
b
;

56 
	`as£π
(
t
 && 
key
);

57 
ödex
=(()
key
Ë% 
TABSIZE
;

58 
b
=
t
->
èbÀ
[
ödex
]; b; b=b->
√xt
)

59 i‡(
b
->
key
==keyË b->
vÆue
;

60  
NULL
;

61 
	}
}

63 *
	$TAB_p›
(
TAB_èbÀ
 
t
) {

64 *
k
; 
bödî
 
b
; 
ödex
;

65 
	`as£π
 (
t
);

66 
k
 = 
t
->
t›
;

67 
	`as£π
 (
k
);

68 
ödex
 = (()
k
Ë% 
TABSIZE
;

69 
b
 = 
t
->
èbÀ
[
ödex
];

70 
	`as£π
(
b
);

71 
t
->
èbÀ
[
ödex
] = 
b
->
√xt
;

72 
t
->
t›
=
b
->
¥evt›
;

73  
b
->
key
;

74 
	}
}

76 
	$TAB_dump
(
TAB_èbÀ
 
t
, (*
show
)(*
key
, *
vÆue
)) {

77 *
k
 = 
t
->
t›
;

78 
ödex
 = (()
k
Ë% 
TABSIZE
;

79 
bödî
 
b
 = 
t
->
èbÀ
[
ödex
];

80 i‡(
b
==
NULL
) ;

81 
t
->
èbÀ
[
ödex
]=
b
->
√xt
;

82 
t
->
t›
=
b
->
¥evt›
;

83 
	`show
(
b
->
key
,b->
vÆue
);

84 
	`TAB_dump
(
t
,
show
);

85 
	`as£π
(
t
->
t›
 =
b
->
¥evt›
 &&Å->
èbÀ
[
ödex
]==b->
√xt
);

86 
t
->
t›
=
k
;

87 
t
->
èbÀ
[
ödex
]=
b
;

88 
	}
}

	@table.h

1 #i‚de‡
TABLE_H


2 
	#TABLE_H


	)

12 
TAB_èbÀ_
 *
	tTAB_èbÀ
;

15 
TAB_èbÀ
 
TAB_em±y
();

19 
TAB_íãr
(
TAB_èbÀ
 
t
, *
key
, *
vÆue
);

22 *
TAB_look
(
TAB_èbÀ
 
t
, *
key
);

26 *
TAB_p›
(
TAB_èbÀ
 
t
);

32 
TAB_dump
(
TAB_èbÀ
 
t
, (*
show
)(*
key
, *
vÆue
));

	@temp.c

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~"utû.h
"

12 
	~"symbﬁ.h
"

13 
	~"ãmp.h
"

14 
	~"èbÀ.h
"

16 
	sTemp_ãmp_
 {
	mnum
;};

18 
°rög
 
	$Temp_œbñ°rög
(
Temp_œbñ
 
s
)

19 { 
	`S_«me
(
s
);

20 
	}
}

22 
	gœbñs
 = 0;

24 
Temp_œbñ
 
	$Temp_√wœbñ
()

25 {
buf
[100];

26 
	`•rötf
(
buf
,"L%d",
œbñs
++);

27  
	`Temp_«medœbñ
(
	`Såög
(
buf
));

28 
	}
}

31 
Temp_œbñ
 
	$Temp_«medœbñ
(
°rög
 
s
)

32 { 
	`S_Symbﬁ
(
s
);

33 
	}
}

35 
	gãmps
 = 100;

37 
Temp_ãmp
 
	$Temp_√wãmp
()

38 {
Temp_ãmp
 
p
 = (Temp_ãmpË
	`checked_mÆloc
( (*p));

39 
p
->
num
=
ãmps
++;

40 {
r
[16];

41 
	`•rötf
(
r
, "%d", 
p
->
num
);

42 
	`Temp_íãr
(
	`Temp_«me
(), 
p
, 
	`Såög
(
r
));

44  
p
;

45 
	}
}

49 
	sTemp_m≠_
 {
TAB_èbÀ
 
	mèb
; 
Temp_m≠
 
	mundî
;};

52 
Temp_m≠
 
	$Temp_«me
() {

53 
Temp_m≠
 
m
 = 
NULL
;

54 i‡(!
m
Ëm=
	`Temp_em±y
();

55  
m
;

56 
	}
}

58 
Temp_m≠
 
	$√wM≠
(
TAB_èbÀ
 
èb
, 
Temp_m≠
 
undî
) {

59 
Temp_m≠
 
m
 = 
	`checked_mÆloc
((*m));

60 
m
->
èb
=tab;

61 
m
->
undî
=under;

62  
m
;

63 
	}
}

65 
Temp_m≠
 
	$Temp_em±y
() {

66  
	`√wM≠
(
	`TAB_em±y
(), 
NULL
);

67 
	}
}

69 
Temp_m≠
 
	$Temp_œyîM≠
(
Temp_m≠
 
ovî
, Temp_m≠ 
undî
) {

70 i‡(
ovî
==
NULL
)

71  
undî
;

72  
	`√wM≠
(
ovî
->
èb
, 
	`Temp_œyîM≠
(ovî->
undî
, under));

73 
	}
}

75 
	$Temp_íãr
(
Temp_m≠
 
m
, 
Temp_ãmp
 
t
, 
°rög
 
s
) {

76 
	`as£π
(
m
 && m->
èb
);

77 
	`TAB_íãr
(
m
->
èb
,
t
,
s
);

78 
	}
}

80 
°rög
 
	$Temp_look
(
Temp_m≠
 
m
, 
Temp_ãmp
 
t
) {

81 
°rög
 
s
;

82 
	`as£π
(
m
 && m->
èb
);

83 
s
 = 
	`TAB_look
(
m
->
èb
, 
t
);

84 i‡(
s
)  s;

85 i‡(
m
->
undî
Ë 
	`Temp_look
(m->undî, 
t
);

86  
NULL
;

87 
	}
}

89 
Temp_ãmpLi°
 
	$Temp_TempLi°
(
Temp_ãmp
 
h
, 
Temp_ãmpLi°
 
t
)

90 {
Temp_ãmpLi°
 
p
 = (Temp_ãmpLi°Ë
	`checked_mÆloc
( (*p));

91 
p
->
hód
=
h
;Ö->
èû
=
t
;

92  
p
;

93 
	}
}

95 
Temp_œbñLi°
 
	$Temp_LabñLi°
(
Temp_œbñ
 
h
, 
Temp_œbñLi°
 
t
)

96 {
Temp_œbñLi°
 
p
 = (Temp_œbñLi°Ë
	`checked_mÆloc
( (*p));

97 
p
->
hód
=
h
;Ö->
èû
=
t
;

98  
p
;

99 
	}
}

101 
FILE
 *
	goutfûe
;

102 
	$showô
(
Temp_ãmp
 
t
, 
°rög
 
r
) {

103 
	`Ârötf
(
outfûe
, "t%d -> %s\n", 
t
->
num
, 
r
);

104 
	}
}

106 
	$Temp_dumpM≠
(
FILE
 *
out
, 
Temp_m≠
 
m
) {

107 
outfûe
=
out
;

108 
	`TAB_dump
(
m
->
èb
,((*)(*, *))
showô
);

109 i‡(
m
->
undî
) {

110 
	`Ârötf
(
out
,"---------\n");

111 
	`Temp_dumpM≠
(
out
,
m
->
undî
);

113 
	}
}

117 
Temp_ãmpLi°
 
	$Temp_c›yLi°
(
Temp_ãmpLi°
 
é
)

119 
Temp_ãmpLi°
 
r
 = 
NULL
, 
œ°
;

120 ; 
é
;Å»é->
èû
) {

121 
	`Temp_TempLi°
(
é
->
hód
, 
r
);

123  
r
;

124 
	}
}

126 
	$Temp_¥öt
(*
t
)

128 
	`¥ötf
("ãmp:%d\n", ((
Temp_ãmp
)
t
)->
num
);

129 
	}
}

131 
	$Temp_¥ötLi°
(
Temp_ãmpLi°
 
é
)

133 i‡(!
é
Ë
	`¥ötf
("emptyÜist\n");

134 ; 
é
;ÅlÒl->
èû
) {

135 
	`Temp_¥öt
(
é
->
hód
);

137 
	}
}

	@temp.h

6 #i‚de‡
TEMP_H


7 
	#TEMP_H


	)

9 
Temp_ãmp_
 *
	tTemp_ãmp
;

10 
Temp_ãmp
 
Temp_√wãmp
();

12 
Temp_ãmpLi°_
 *
	tTemp_ãmpLi°
;

13 
	sTemp_ãmpLi°_
 { 
Temp_ãmp
 
	mhód
; 
Temp_ãmpLi°
 
	mèû
;};

14 
Temp_ãmpLi°
 
Temp_TempLi°
(
Temp_ãmp
 
h
, Temp_ãmpLi° 
t
);

16 
S_symbﬁ
 
	tTemp_œbñ
;

17 
Temp_œbñ
 
Temp_√wœbñ
();

18 
Temp_œbñ
 
Temp_«medœbñ
(
°rög
 
«me
);

19 
°rög
 
Temp_œbñ°rög
(
Temp_œbñ
 
s
);

21 
Temp_œbñLi°_
 *
	tTemp_œbñLi°
;

22 
	sTemp_œbñLi°_
 { 
Temp_œbñ
 
	mhód
; 
Temp_œbñLi°
 
	mèû
;};

23 
Temp_œbñLi°
 
Temp_LabñLi°
(
Temp_œbñ
 
h
, Temp_œbñLi° 
t
);

25 
Temp_m≠_
 *
	tTemp_m≠
;

26 
Temp_m≠
 
Temp_em±y
();

27 
Temp_m≠
 
Temp_œyîM≠
(Temp_m≠ 
ovî
, Temp_m≠ 
undî
);

28 
Temp_íãr
(
Temp_m≠
 
m
, 
Temp_ãmp
 
t
, 
°rög
 
s
);

29 
°rög
 
Temp_look
(
Temp_m≠
 
m
, 
Temp_ãmp
 
t
);

30 
Temp_dumpM≠
(
FILE
 *
out
, 
Temp_m≠
 
m
);

32 
Temp_m≠
 
Temp_«me
();

35 
Temp_ãmpLi°
 
Temp_c›yLi°
(Temp_ãmpLi° 
é
);

36 
Temp_¥öt
(*);

37 
Temp_¥ötLi°
(
Temp_ãmpLi°
);

	@translate.c

1 
	~<°dio.h
>

2 
	~"utû.h
"

3 
	~"èbÀ.h
"

4 
	~"symbﬁ.h
"

5 
	~"absyn.h
"

6 
	~"ãmp.h
"

7 
	~"åì.h
"

8 
	~"¥öâªe.h
"

9 
	~"‰ame.h
"

10 
	~"å™¶©e.h
"

12 
T_expLi°
 
Tr_expLi°_c⁄vît
(
Tr_expLi°
 
l
);

13 
Tr_exp
 
Tr_SèticLök
(
Tr_Àvñ
 
now
, Tr_Àvñ 
def
);

14 
	sTr_ac˚ss_
 {

16 
Tr_Àvñ
 
	mÀvñ
;

17 
F_ac˚ss
 
	mac˚ss
;

20 
	sTr_ac˚ssLi°_
 {

21 
Tr_ac˚ss
 
	mhód
;

22 
Tr_ac˚ssLi°
 
	mèû
;

25 
	sTr_Àvñ_
 {

27 
F_‰ame
 
	m‰ame
;

28 
Tr_Àvñ
 
	m∑ª¡
;

29 
Temp_œbñ
 
	mœbñ
;

30 
Tr_ac˚ssLi°
 
	mf‹mÆs
;

33 
	sCx
 {
∑tchLi°
 
	måues
;Ö©chLi° 
	mÁl£s
; 
T_°m
 
	m°m
;};

35 
	sTr_exp_
 {

37 íum {
	mTr_ex
, 
	mTr_nx
, 
	mTr_cx
} 
	mköd
;

38 uni⁄ {
T_exp
 
	mex
; 
T_°m
 
	mnx
; 
Cx
 
	mcx
; } 
	mu
;

41 
	sTr_expLi°_
 {

42 
Tr_exp
 
	mhód
;

43 
Tr_expLi°
 
	mèû
;

46 
Tr_exp
 
	$Tr_Ex
(
T_exp
 
ex
)

48 
Tr_exp
 
e
 = 
	`checked_mÆloc
((*e));

49 
e
->
köd
 = 
Tr_ex
;

50 
e
->
u
.
ex
 =Éx;

51  
e
;

52 
	}
}

54 
Tr_exp
 
	$Tr_Nx
(
T_°m
 
nx
)

56 
Tr_exp
 
e
 = 
	`checked_mÆloc
((*e));

57 
e
->
köd
 = 
Tr_nx
;

58 
e
->
u
.
nx
 =Çx;

59  
e
;

60 
	}
}

62 
Tr_exp
 
	$Tr_Cx
(
∑tchLi°
 
åues
,Ö©chLi° 
Ál£s
, 
T_°m
 
°m
)

64 
Tr_exp
 
e
 = 
	`checked_mÆloc
((*e));

65 
e
->
köd
 = 
Tr_cx
;

66 
e
->
u
.
cx
.
åues
 =Årues;

67 
e
->
u
.
cx
.
Ál£s
 = falses;

68 
e
->
u
.
cx
.
°m
 = stm;

69  
e
;

70 
	}
}

72 
	s∑tchLi°_
 {
Temp_œbñ
 *
	mhód
; 
∑tchLi°
 
	mèû
;};

73 
∑tchLi°
 
	$P©chLi°
(
Temp_œbñ
 *
hód
, 
∑tchLi°
 
èû
)

75 
∑tchLi°
 
∂
 = 
	`checked_mÆloc
((*pl));

76 
∂
->
hód
 = head;

77 
∂
->
èû
 =Åail;

78  
∂
;

79 
	}
}

81 
Tr_ac˚ssLi°
 
	$AccTaû
(
Tr_ac˚ssLi°
 
accs
Ë{ áccs->
èû
; 
	}
}

82 
Tr_ac˚ss
 
	$AccHód
(
Tr_ac˚ssLi°
 
accs
Ë{ áccs->
hód
; 
	}
}

85 
Tr_Àvñ
 
	$Tr_ouãrmo°
()

87 
Tr_Àvñ
 
ouãrmo°
 = 
NULL
;

88 i‡(
ouãrmo°
 =
NULL
) {

89 
ouãrmo°
 = 
	`checked_mÆloc
((*outermost));

90 
Temp_œbñ
 
œbñ
 = 
	`S_Symbﬁ
("_outermost");

91 
ouãrmo°
->
œbñ
 =Üabel;

92 
ouãrmo°
->
‰ame
 = 
	`F_√wFøme
(
œbñ
, 
NULL
);

94  
ouãrmo°
;

95 
	}
}

97 
Tr_Àvñ
 
	$Tr_√wLevñ
(
Tr_Àvñ
 
∑ª¡
, 
Temp_œbñ
 
œbñ
,

98 
U_boﬁLi°
 
fmls
)

100 
Tr_Àvñ
 
√wl
 = 
	`checked_mÆloc
((*newl));

101 
	`¥ötf
("callÇew frame\n");

102 
√wl
->
‰ame
 = 
	`F_√wFøme
(
œbñ
, 
	`U_BoﬁLi°
(
TRUE
 , 
fmls
));

103 
	`¥ötf
("called\n");

104 
√wl
->
∑ª¡
 =Öarent;

105 
√wl
->
œbñ
 =Üabel;

107 
F_ac˚ssLi°
 
Ál
 = 
	`F_f‹mÆs
(
√wl
->
‰ame
);

108 
Tr_ac˚ssLi°
 
Æ
 = 
	`checked_mÆloc
((*al));

109 
Tr_ac˚ssLi°
 
hód
 = 
Æ
;

110 
	`as£π
(
Ál
);

111 ; 
Ál
->
èû
; fal = fal->tail) {

112 
Æ
->
hód
 = 
	`checked_mÆloc
((*al->head));;

113 
Æ
->
hód
->
Àvñ
 = 
√wl
;

114 
Æ
->
hód
->
ac˚ss
 = 
Ál
->head;

115 
Æ
->
èû
 = 
	`checked_mÆloc
((*al));

116 
Æ
 =ál->
èû
;

119 
Æ
->
hód
 = 
	`checked_mÆloc
((*al->head));;

120 
Æ
->
hód
->
Àvñ
 = 
√wl
;

121 
Æ
->
hód
->
ac˚ss
 = 
Ál
->head;

122 
Æ
->
èû
 = 
NULL
;

124 
√wl
->
f‹mÆs
 = 
hód
;

126  
√wl
;

127 
	}
}

129 
Tr_ac˚ssLi°
 
	$Tr_f‹mÆs
(
Tr_Àvñ
 
Àvñ
)

131  
Àvñ
->
f‹mÆs
;

132 
	}
}

134 
Tr_ac˚ss
 
	$Tr_ÆlocLoˇl
(
Tr_Àvñ
 
Àvñ
, 
boﬁ
 
esˇ≥
)

136 
Tr_ac˚ss
 
è
 = 
	`checked_mÆloc
((*ta));

137 
è
->
Àvñ
 =Üevel;

138 
è
->
ac˚ss
 = 
	`F_ÆlocLoˇl
(
Àvñ
->
‰ame
, 
esˇ≥
);

139  
è
;

140 
	}
}

142 
	$doP©ch
(
∑tchLi°
 
tLi°
, 
Temp_œbñ
 
œbñ
)

144 ; 
tLi°
;ÅLi°ÒLi°->
èû
)

145 *(
tLi°
->
hód
Ë
œbñ
;

146 
	}
}

148 
∑tchLi°
 
	$joöP©ch
(
∑tchLi°
 
fú°
,∑tchLi° 
£c⁄d
)

150 i‡(!
fú°
Ë 
£c⁄d
;

151 ; 
fú°
->
èû
; first=first->tail);

152 
fú°
->
èû
 = 
£c⁄d
;

153  
fú°
;

154 
	}
}

156 
T_exp
 
	$unEx
(
Tr_exp
 
e
)

158 
e
->
köd
) {

159 
Tr_ex
:

160  
e
->
u
.
ex
;

161 
Tr_cx
:

163 
Temp_ãmp
 
r
 = 
	`Temp_√wãmp
();

164 
Temp_œbñ
 
t
 = 
	`Temp_√wœbñ
(), 
f
 = Temp_newlabel();

165 
	`doP©ch
(
e
->
u
.
cx
.
åues
, 
t
);

166 
	`doP©ch
(
e
->
u
.
cx
.
Ál£s
, 
f
);

167  
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
r
), 
	`T_C⁄°
(1)),

168 
	`T_E£q
(
e
->
u
.
cx
.
°m
,

169 
	`T_E£q
(
	`T_Labñ
(
f
),

170 
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
r
), 
	`T_C⁄°
(0)),

171 
	`T_E£q
(
	`T_Labñ
(
t
),

172 
	`T_Temp
(
r
))))));

174 
Tr_nx
:

175  
	`T_E£q
(
e
->
u
.
nx
, 
	`T_C⁄°
(0));

177 
	`as£π
(0);

178 
	}
}

180 
T_°m
 
	$unNx
(
Tr_exp
 
e
)

182 
e
->
köd
) {

183 
Tr_ex
:

184  
	`T_Exp
(
e
->
u
.
ex
);

185 
Tr_cx
:

188  
e
->
u
.
cx
.
°m
;

190 
Tr_nx
:

191  
e
->
u
.
nx
;

193 
	`as£π
(0);

194 
	}
}

196 
Tr_expLi°
 
	$Tr_ExpLi°
(
Tr_exp
 
hód
, 
Tr_expLi°
 
èû
)

198 
Tr_expLi°
 
ñ
 = 
	`checked_mÆloc
((*el));

199 
ñ
->
hód
 = head;

200 
ñ
->
èû
 =Åail;

201  
ñ
;

202 
	}
}

205 
	$Tr_ñAµíd
(
Tr_exp
 
e
, 
Tr_expLi°
 
èû
)

207 i‡(
èû
 =
NULL
)

208 
èû
 = 
	`Tr_ExpLi°
(
e
, 
NULL
);

210 
èû
 =Åaû->èû = 
	`Tr_ExpLi°
(
e
, 
NULL
);

211 
	}
}

214 
Cx
 
	$unCx
(
Tr_exp
 
e
)

216 
e
->
köd
) {

217 
Tr_ex
:

219 
Temp_œbñ
 
t
 = 
	`Temp_√wœbñ
(), 
f
 = Temp_newlabel();

220  
	`unCx
(
	`Tr_Cx
(
	`P©chLi°
(&
t
, 
NULL
), P©chLi°(&
f
, NULL),

221 
	`T_Cjump
(
T_√
, 
e
->
u
.
ex
, 
	`T_C⁄°
(0), 
t
, 
f
)));

223 
Tr_cx
:

225  
e
->
u
.
cx
;

227 
Tr_nx
:

228 
	`as£π
(0);

230 
	`as£π
(0);

231 
	}
}

233 
Tr_exp
 
	$Tr_sim∂eV¨
(
Tr_ac˚ss
 
acc
, 
Tr_Àvñ
 
lvl
)

237 
T_exp
 
addr
 = 
	`T_Temp
(
	`F_FP
());

238 
lvl
 !
acc
->
Àvñ
) {

239 
F_ac˚ss
 
lök
 = 
	`F_f‹mÆs
(
lvl
->
‰ame
)->
hód
;

240 
addr
 = 
	`F_Exp
(
lök
,áddr);

241 
lvl
 =Üvl->
∑ª¡
;

243  
	`Tr_Ex
(
	`F_Exp
(
acc
->
ac˚ss
, 
addr
));

244 
	}
}

246 
Tr_exp
 
	$Tr_subs¸ùtV¨
(
Tr_exp
 
v¨
, Tr_ex∞
öd
)

248  
	`Tr_Ex
(
	`T_Mem
(
	`T_Bö›
(
T_∂us
,

249 
	`unEx
(
v¨
),

250 
	`T_Bö›
(
T_mul
, 
	`unEx
(
öd
), 
	`T_C⁄°
(
F_w‹dSize
)))));

251 
	}
}

253 
Tr_exp
 
	$Tr_fõldV¨
(
Tr_exp
 
ba£
, 
offs
) {

256  
	`Tr_Ex
(
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
	`unEx
(
ba£
), 
	`T_C⁄°
(
offs
 * 
F_w‹dSize
))));

257 
	}
}

259 
Tr_exp
 
	$Tr_c⁄°V¨
(
i
)

261  
	`Tr_Ex
(
	`T_C⁄°
(
i
));

262 
	}
}

264 
Tr_exp
 
	$Tr_ˇŒExp
(
Temp_œbñ
 
œbñ
, 
Tr_Àvñ
 
fun
, Tr_Àvñ 
ˇŒ
, 
Tr_expLi°
 
ñ_ªvî£d
)

266 
T_expLi°
 
¨gs
 = 
NULL
;

267 
Tr_exp
 
¶
 = 
	`Tr_SèticLök
(
ˇŒ
, 
fun
);

268 
ñ_ªvî£d
 = 
	`Tr_ExpLi°
(
¶
,Él_reversed);

269 
¨gs
 = 
	`Tr_expLi°_c⁄vît
(
ñ_ªvî£d
);

272  
	`Tr_Ex
(
	`T_CÆl
(
	`T_Name
(
œbñ
), 
¨gs
));;

273 
	}
}

275 
Tr_exp
 
	$Tr_¨ôhExp
(
A_›î
 
›
, 
Tr_exp
 
À·
, Tr_ex∞
right
) {

276 
T_böOp
 
›p
;

277 
›
) {

278 
A_∂usOp
 : 
›p
 = 
T_∂us
; ;

279 
A_möusOp
 : 
›p
 = 
T_möus
; ;

280 
A_timesOp
 : 
›p
 = 
T_mul
; ;

281 
A_divideOp
: 
›p
 = 
T_div
; ;

282 : 
	`as£π
(0);

284  
	`Tr_Ex
(
	`T_Bö›
(
›p
, 
	`unEx
(
À·
), unEx(
right
)));

285 
	}
}

287 
Tr_exp
 
	$Tr_compExp
(
A_›î
 
›
, 
Tr_exp
 
À·
, Tr_ex∞
right
) {

288 
T_ªlOp
 
›î
;

289 
›
) {

290 
A_eqOp
: 
›î
 = 
T_eq
; ;

291 
A_√qOp
: 
›î
 = 
T_√
; ;

292 
A_…Op
: 
›î
 = 
T_…
; ;

293 
A_ÀOp
: 
›î
 = 
T_À
; ;

294 
A_gtOp
: 
›î
 = 
T_gt
; ;

295 
A_geOp
: 
›î
 = 
T_ge
; ;

296 : 
	`as£π
(0);

298 
T_°m
 
c⁄d
 = 
	`T_Cjump
(
›î
, 
	`unEx
(
À·
), unEx(
right
),

299 
	`Temp_√wœbñ
(), Temp_newlabel());

300 
∑tchLi°
 
åues
 = 
	`P©chLi°
(&
c⁄d
->
u
.
CJUMP
.
åue
, 
NULL
);

301 
∑tchLi°
 
Ál£s
 = 
	`P©chLi°
(&
c⁄d
->
u
.
CJUMP
.
Ál£
, 
NULL
);

302  
	`Tr_Cx
(
åues
, 
Ál£s
, 
c⁄d
);

303 
	}
}

306 
Tr_exp
 
	$Tr_ªc‹dExp
(
Tr_expLi°
 
ñ_ªvî£d
) {

307 
Temp_ãmp
 
r
 = 
	`Temp_√wãmp
();

308 
i
 = 0;

309 
Tr_expLi°
 
l
;

310 
T_°m
 
£q
;

311 
T_°m
 *
Æloc
 = &
£q
;

312 
l
 = 
ñ_ªvî£d
;Ü;Ü =Ü->
èû
, 
i
++) {

313 
£q
 = 
	`T_Seq
(£q, 
	`T_Move
(
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
	`T_Temp
(
r
), 
	`T_C⁄°
(
i
 * 
F_w‹dSize
))),

314 
	`unEx
(
l
->
hód
)));

317 *
Æloc
 = 
	`T_Move
(
	`T_Temp
(
r
),

318 
	`F_exã∫ÆCÆl
(
	`Såög
("öôRec‹d"), 
	`T_ExpLi°
(
	`T_C⁄°
(
i
 * 
F_w‹dSize
), 
NULL
)));

320  
	`Tr_Ex
(
	`T_E£q
(
£q
, 
	`T_Temp
(
r
)));

321 
	}
}

323 
Tr_exp
 
	$Tr_¨øyExp
(
Tr_exp
 
öô
, Tr_ex∞
size
)

325  
	`Tr_Ex
(
	`F_exã∫ÆCÆl
(
	`Såög
("initArray"),

326 
	`T_ExpLi°
(
	`unEx
(
size
), T_ExpLi°(unEx(
öô
), 
NULL
))));

327 
	}
}

329 
Tr_exp
 
	$Tr_assignExp
(
Tr_exp
 
lvÆ
, Tr_ex∞
exp
)

330 {  
	`Tr_Nx
(
	`T_Move
(
	`unEx
(
lvÆ
), unEx(
exp
))); 
	}
}

332 
Tr_exp
 
	$Tr_bªakExp
(
Tr_exp
 
b
)

335  
	`Tr_Nx
(
	`T_Jump
(
	`T_Name
(
	`unEx
(
b
)->
u
.
NAME
),

336 
	`Temp_LabñLi°
(
	`unEx
(
b
)->
u
.
NAME
, 
NULL
)));

337 
	}
}

340 
Tr_exp
 
	$Tr_SèticLök
(
Tr_Àvñ
 
now
, Tr_Àvñ 
def
) {

342 
T_exp
 
addr
 = 
	`T_Temp
(
	`F_FP
());

343 
now
 && (now !
def
)) {

344 
F_ac˚ss
 
¶
 = 
	`F_f‹mÆs
(
now
->
‰ame
)->
hód
;

345 
addr
 = 
	`F_Exp
(
¶
,áddr);

346 
now
 =Çow->
∑ª¡
;

348  
	`Tr_Ex
(
addr
);

349 
	}
}

351 
T_expLi°
 
	$Tr_expLi°_c⁄vît
(
Tr_expLi°
 
l
) {

353 
T_expLi°
 
hód
 = 
NULL
, 
t
 = NULL;

354 ; 
l
;Ü =Ü->
èû
) {

355 
T_exp
 
tmp
 = 
	`unEx
(
l
->
hód
);

356 i‡(
hód
 !
NULL
) {

357 
t
->
èû
 = 
	`T_ExpLi°
(
tmp
, 
NULL
);

358 
t
 =Å->
èû
;

360 
hód
 = 
	`T_ExpLi°
(
tmp
, 
NULL
);

361 
t
 = 
hód
;

364  
hód
;

365 
	}
}

369 
Tr_exp
 
	$Tr_£qExp
(
Tr_expLi°
 
l
) {

370 
T_exp
 
ª¶
 = 
	`unEx
(
l
->
hód
);

371 
l
 =Ü->
èû
;Ü;Ü =Ü->tail) {

372 
ª¶
 = 
	`T_E£q
(
	`T_Exp
(
	`unEx
(
l
->
hód
)),Ñesl);

374  
	`Tr_Ex
(
ª¶
);

375 
	}
}

378 
Tr_exp
 
	$Tr_nûExp
() {

379 
Temp_ãmp
 
nûTemp
 = 
NULL
;

380 i‡(!
nûTemp
) {

381 
nûTemp
 = 
	`Temp_√wãmp
();

383 
T_°m
 
Æloc
 = 
	`T_Move
(
	`T_Temp
(
nûTemp
),

384 
	`F_exã∫ÆCÆl
(
	`Såög
("öôRec‹d"), 
	`T_ExpLi°
(
	`T_C⁄°
(0), 
NULL
)));

385  
	`Tr_Ex
(
	`T_E£q
(
Æloc
, 
	`T_Temp
(
nûTemp
)));

387  
	`Tr_Ex
(
	`T_Temp
(
nûTemp
));

389 
	}
}

391 
Tr_exp
 
	$Tr_whûeExp
(
Tr_exp
 
ã°
, Tr_ex∞
body
, Tr_ex∞
d⁄e
)

393 
Temp_œbñ
 
ã°l
 = 
	`Temp_√wœbñ
(), 
bodyl
 = Temp_newlabel();

394  
	`Tr_Ex
(
	`T_E£q
(
	`T_Jump
(
	`T_Name
(
ã°l
), 
	`Temp_LabñLi°
—e°l, 
NULL
)),

395 
	`T_E£q
(
	`T_Labñ
(
bodyl
),

396 
	`T_E£q
(
	`unNx
(
body
),

397 
	`T_E£q
(
	`T_Labñ
(
ã°l
),

398 
	`T_E£q
(
	`T_Cjump
(
T_eq
, 
	`unEx
(
ã°
), 
	`T_C⁄°
(0), unEx(
d⁄e
)->
u
.
NAME
, 
bodyl
),

399 
	`T_E£q
(
	`T_Labñ
(
	`unEx
(
d⁄e
)->
u
.
NAME
), 
	`T_C⁄°
(0))))))));

400 
	}
}

402 
Tr_exp
 
	$Tr_d⁄eExp
()

404  
	`Tr_Ex
(
	`T_Name
(
	`Temp_√wœbñ
()));

405 
	}
}

407 
Tr_exp
 
	$Tr_f‹Exp
(
Tr_exp
 
lo
, Tr_ex∞
hi
, Tr_ex∞
body
, Tr_ex∞
d⁄e
)

411  
NULL
;

412 
	}
}

414 
Tr_exp
 
	$Tr_ifExp
(
Tr_exp
 
c⁄d
, Tr_ex∞
thí
, Tr_ex∞
ñ£e
)

416 
	`unCx
(
c⁄d
);

418 
Temp_ãmp
 
r
 = 
	`Temp_√wãmp
();

419 
Temp_œbñ
 
t
 = 
	`Temp_√wœbñ
();

420 
Temp_œbñ
 
f
 = 
	`Temp_√wœbñ
();

421 
Cx
 
c⁄dcx
 = 
	`unCx
(
c⁄d
);

422 
	`doP©ch
(
c⁄dcx
.
åues
, 
t
);

423 
	`doP©ch
(
c⁄dcx
.
Ál£s
, 
f
);

424  
	`Tr_Ex
(
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
r
),
	`unEx
(
thí
)),

425 
	`T_E£q
(
c⁄dcx
.
°m
,

426 
	`T_E£q
(
	`T_Labñ
(
f
),

427 
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
r
), 
	`unEx
(
ñ£e
)),

428 
	`T_E£q
(
	`T_Labñ
(
t
), 
	`T_Temp
(
r
)))))));

429 
	}
}

431 
F_‰agLi°
 
	g‰agLi°
 = 
NULL
;

432 
F_‰agLi°
 
	g°rögFøgLi°
 = 
NULL
;

434 
	gdebug_¥oc_cou¡
 = 0;

435 
	gdebug_°r_cou¡
 = 0;

436 
	$Tr_¥ocE¡ryExô
(
Tr_Àvñ
 
Àvñ
, 
Tr_exp
 
body
) {

439 
T_°m
 
¥oc°m
 = 
	`F_¥ocE¡ryExô1
(
Àvñ
->
‰ame
, 
	`T_Move
(
	`T_Temp
(
	`F_RV
()), 
	`unEx
(
body
)));

440 
‰agLi°
 = 
	`F_FøgLi°
(
	`F_ProcFøg
(
¥oc°m
, 
Àvñ
->
‰ame
), fragList);

441 
	}
}

443 
Tr_exp
 
	$Tr_°rögV¨
(
°rög
 
lô
)

446 
Temp_œbñ
 
œb
 = 
	`Temp_√wœbñ
();

447 
F_‰ag
 
‰agmít
 = 
	`F_SåögFøg
(
œb
, 
lô
);

448 
°rögFøgLi°
 = 
	`F_FøgLi°
(
‰agmít
, stringFragList);

449  
	`Tr_Ex
(
	`T_Name
(
œb
));

450 
	}
}

452 
F_‰agLi°
 
	$Tr_gëFøgLi°
()

454 
F_‰agLi°
 
cur
 = 
°rögFøgLi°
;

455 i‡(!
cur
Ë 
‰agLi°
;

456 ; 
cur
->
èû
; cur = cur->tail) { ; }

458 
cur
->
èû
 = 
‰agLi°
;

459  
°rögFøgLi°
;

460 
	}
}

	@translate.h

1 #i‚de‡
TRANSLATE_H


2 
	#TRANSLATE_H


	)

4 
	~"ãmp.h
"

5 
	~"åì.h
"

6 
	~"absyn.h
"

7 
	~"‰ame.h
"

11 
Tr_exp_
 *
	tTr_exp
;

13 
Tr_expLi°_
 *
	tTr_expLi°
;

15 
Tr_ac˚ss_
 *
	tTr_ac˚ss
;

17 
Tr_ac˚ssLi°_
 *
	tTr_ac˚ssLi°
;

19 
Tr_Àvñ_
 *
	tTr_Àvñ
;

21 
∑tchLi°_
 *
	t∑tchLi°
;

23 
Tr_Àvñ
 
Tr_ouãrmo°
();

24 
Tr_Àvñ
 
Tr_√wLevñ
(Tr_Àvñ 
∑ª¡
, 
Temp_œbñ
 
«me
,

25 
U_boﬁLi°
 
f‹mÆs
);

26 
Tr_ac˚ssLi°
 
Tr_f‹mÆs
(
Tr_Àvñ
 
Àvñ
);

27 
Tr_ac˚ss
 
Tr_ÆlocLoˇl
(
Tr_Àvñ
 
Àvñ
, 
boﬁ
 
esˇ≥
);

29 
Tr_ac˚ssLi°
 
Tr_ÆlocP¨a
(
Tr_Àvñ
, 
boﬁ
 
esˇ≥
, Tr_ac˚ssLi° 
èû
);

30 
Tr_expLi°
 
Tr_ExpLi°
(
Tr_exp
, Tr_expList);

35 
Tr_ñAµíd
(
Tr_exp
 
e
, 
Tr_expLi°
 
t
);

39 
Tr_ac˚ssLi°
 
AccTaû
(Tr_ac˚ssLi° 
accs
);

40 
Tr_ac˚ss
 
AccHód
(
Tr_ac˚ssLi°
 
accs
);

44 
Tr_exp
 
Tr_sim∂eV¨
(
Tr_ac˚ss
 
ac˚ss
, 
Tr_Àvñ
 
Àvñ
);

45 
Tr_exp
 
Tr_fõldV¨
(Tr_ex∞
exp
, 
off
 );

46 
Tr_exp
 
Tr_subs¸ùtV¨
(Tr_ex∞
v¨
, Tr_ex∞
sub
);

48 
Tr_exp
 
Tr_c⁄°V¨
(
i
);

49 
Tr_exp
 
Tr_°rögV¨
(
°rög
 
i
);

51 
Tr_exp
 
Tr_¨ôhExp
(
A_›î
 
›
, Tr_ex∞
e1
, Tr_ex∞
e2
);

53 
Tr_exp
 
Tr_compExp
(
A_›î
, Tr_exp, Tr_exp);

55 
Tr_exp
 
Tr_ªc‹dExp
(
Tr_expLi°
);

57 
Tr_exp
 
Tr_°rögExp
(
°rög
);

59 
Tr_exp
 
Tr_ötExp
();

61 
Tr_exp
 
Tr_ˇŒExp
(
Temp_œbñ
 
œbñ
, 
Tr_Àvñ
, Tr_Àvñ, 
Tr_expLi°
);

63 
Tr_exp
 
Tr_nûExp
();

65 
Tr_exp
 
Tr_¨øyExp
(Tr_exp, Tr_exp);

67 
Tr_exp
 
Tr_£qExp
(
Tr_expLi°
);

69 
Tr_exp
 
Tr_d⁄eExp
();

71 
Tr_exp
 
Tr_whûeExp
(Tr_exp, Tr_exp, Tr_exp);

73 
Tr_exp
 
Tr_f‹Exp
(Tr_exp, Tr_exp, Tr_exp, Tr_exp);

75 
Tr_exp
 
Tr_assignExp
(Tr_exp, Tr_exp);

77 
Tr_exp
 
Tr_bªakExp
();

79 
Tr_exp
 
Tr_eqSåögExp
(
A_›î
, Tr_exp, Tr_exp);

81 
Tr_exp
 
Tr_ifExp
(Tr_exp, Tr_exp, Tr_exp);

83 
Tr_¥ocE¡ryExô
(
Tr_Àvñ
, 
Tr_exp
);

85 
F_‰agLi°
 
Tr_gëFøgLi°
();

	@tree.c

1 
	~<°dio.h
>

2 
	~"utû.h
"

3 
	~"symbﬁ.h
"

4 
	~"ãmp.h
"

5 
	~"åì.h
"

7 
T_expLi°
 
	$T_ExpLi°
(
T_exp
 
hód
, 
T_expLi°
 
èû
)

8 {
T_expLi°
 
p
 = (T_expLi°Ë
	`checked_mÆloc
 ( *p);

9 
p
->
hód
=hód;Ö->
èû
=tail;

10  
p
;

11 
	}
}

13 
T_°mLi°
 
	$T_StmLi°
(
T_°m
 
hód
, 
T_°mLi°
 
èû
)

14 {
T_°mLi°
 
p
 = (T_°mLi°Ë
	`checked_mÆloc
 ( *p);

15 
p
->
hód
=hód;Ö->
èû
=tail;

16  
p
;

17 
	}
}

19 
T_°m
 
	$T_Seq
(
T_°m
 
À·
, T_°m 
right
)

20 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

21 
p
->
köd
=
T_SEQ
;

22 
p
->
u
.
SEQ
.
À·
=left;

23 
p
->
u
.
SEQ
.
right
=right;

24  
p
;

25 
	}
}

27 
T_°m
 
	$T_Labñ
(
Temp_œbñ
 
œbñ
)

28 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

29 
p
->
köd
=
T_LABEL
;

30 
p
->
u
.
LABEL
=
œbñ
;

31  
p
;

32 
	}
}

34 
T_°m
 
	$T_Jump
(
T_exp
 
exp
, 
Temp_œbñLi°
 
œbñs
)

35 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

36 
p
->
köd
=
T_JUMP
;

37 
p
->
u
.
JUMP
.
exp
=exp;

38 
p
->
u
.
JUMP
.
jumps
=
œbñs
;

39  
p
;

40 
	}
}

42 
T_°m
 
	$T_Cjump
(
T_ªlOp
 
›
, 
T_exp
 
À·
, T_ex∞
right
,

43 
Temp_œbñ
 
åue
, Temp_œbñ 
Ál£
)

44 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

45 
p
->
köd
=
T_CJUMP
;

46 
p
->
u
.
CJUMP
.
›
=›;Ö->u.CJUMP.
À·
ˆe·;Ö->u.CJUMP.
right
=right;

47 
p
->
u
.
CJUMP
.
åue
=true;

48 
p
->
u
.
CJUMP
.
Ál£
=false;

49  
p
;

50 
	}
}

52 
T_°m
 
	$T_Move
(
T_exp
 
d°
, T_ex∞
§c
)

53 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

54 
p
->
köd
=
T_MOVE
;

55 
p
->
u
.
MOVE
.
d°
=dst;

56 
p
->
u
.
MOVE
.
§c
=src;

57  
p
;

58 
	}
}

60 
T_°m
 
	$T_Exp
(
T_exp
 
exp
)

61 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

62 
p
->
köd
=
T_EXP
;

63 
p
->
u
.
EXP
=
exp
;

64  
p
;

65 
	}
}

67 
T_exp
 
	$T_Bö›
(
T_böOp
 
›
, 
T_exp
 
À·
, T_ex∞
right
)

68 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

69 
p
->
köd
=
T_BINOP
;

70 
p
->
u
.
BINOP
.
›
=op;

71 
p
->
u
.
BINOP
.
À·
=left;

72 
p
->
u
.
BINOP
.
right
=right;

73  
p
;

74 
	}
}

76 
T_exp
 
	$T_Mem
(
T_exp
 
exp
)

77 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

78 
p
->
köd
=
T_MEM
;

79 
p
->
u
.
MEM
=
exp
;

80  
p
;

81 
	}
}

83 
T_exp
 
	$T_Temp
(
Temp_ãmp
 
ãmp
)

84 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

85 
p
->
köd
=
T_TEMP
;

86 
p
->
u
.
TEMP
=
ãmp
;

87  
p
;

88 
	}
}

90 
T_exp
 
	$T_E£q
(
T_°m
 
°m
, 
T_exp
 
exp
)

91 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

92 
p
->
köd
=
T_ESEQ
;

93 
p
->
u
.
ESEQ
.
°m
=stm;

94 
p
->
u
.
ESEQ
.
exp
=exp;

95  
p
;

96 
	}
}

98 
T_exp
 
	$T_Name
(
Temp_œbñ
 
«me
)

99 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

100 
p
->
köd
=
T_NAME
;

101 
p
->
u
.
NAME
=
«me
;

102  
p
;

103 
	}
}

105 
T_exp
 
	$T_C⁄°
(
c⁄°i
)

106 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

107 
p
->
köd
=
T_CONST
;

108 
p
->
u
.
CONST
=
c⁄°i
;

109  
p
;

110 
	}
}

112 
T_exp
 
	$T_CÆl
(
T_exp
 
fun
, 
T_expLi°
 
¨gs
)

113 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

114 
p
->
köd
=
T_CALL
;

115 
p
->
u
.
CALL
.
fun
=fun;

116 
p
->
u
.
CALL
.
¨gs
=args;

117  
p
;

118 
	}
}

120 
T_ªlOp
 
	$T_nŸRñ
(
T_ªlOp
 
r
)

122 
r
)

123 {
T_eq
:  
T_√
;

124 
T_√
:  
T_eq
;

125 
T_…
:  
T_ge
;

126 
T_ge
:  
T_…
;

127 
T_gt
:  
T_À
;

128 
T_À
:  
T_gt
;

129 
T_u…
:  
T_uge
;

130 
T_uge
:  
T_u…
;

131 
T_uÀ
:  
T_ugt
 ;

132 
T_ugt
:  
T_uÀ
;

134 
	`as£π
(0);  0;

135 
	}
}

137 
T_ªlOp
 
	$T_commuã
(
T_ªlOp
 
r
)

138 {
r
) {

139 
T_eq
:  T_eq;

140 
T_√
:  T_ne;

141 
T_…
:  
T_gt
;

142 
T_ge
:  
T_À
;

143 
T_gt
:  
T_…
 ;

144 
T_À
:  
T_ge
;

145 
T_u…
:  
T_ugt
;

146 
T_uge
:  
T_uÀ
;

147 
T_uÀ
:  
T_uge
 ;

148 
T_ugt
:  
T_u…
;

150 
	`as£π
(0);  0;

151 
	}
}

	@tree.h

5 #i‚de‡
TREE_H


6 
	#TREE_H


	)

8 
T_°m_
 *
	tT_°m
;

9 
T_exp_
 *
	tT_exp
;

10 
T_expLi°_
 *
	tT_expLi°
;

11 
	sT_expLi°_
 {
T_exp
 
	mhód
; 
T_expLi°
 
	mèû
;};

12 
T_°mLi°_
 *
	tT_°mLi°
;

13 
	sT_°mLi°_
 {
T_°m
 
	mhód
; 
T_°mLi°
 
	mèû
;};

15 íum {
	mT_∂us
, 
	mT_möus
, 
	mT_mul
, 
	mT_div
,

16 
	mT_™d
, 
	mT_‹
, 
	mT_lshi·
, 
	mT_rshi·
, 
	mT_¨shi·
, 
	mT_x‹
} 
	tT_böOp
 ;

18 íum {
	mT_eq
, 
	mT_√
, 
	mT_…
, 
	mT_gt
, 
	mT_À
, 
	mT_ge
,

19 
	mT_u…
, 
	mT_uÀ
, 
	mT_ugt
, 
	mT_uge
} 
	tT_ªlOp
;

21 
	sT_°m_
 {íum {
	mT_SEQ
, 
	mT_LABEL
, 
	mT_JUMP
, 
	mT_CJUMP
, 
	mT_MOVE
,

22 
	mT_EXP
} 
	mköd
;

23 uni⁄ {°ru˘ {
T_°m
 
	mÀ·
, 
	mright
;} 
	mSEQ
;

24 
Temp_œbñ
 
	mLABEL
;

25 °ru˘ {
T_exp
 
	mexp
; 
Temp_œbñLi°
 
	mjumps
;} 
	mJUMP
;

26 °ru˘ {
T_ªlOp
 
	m›
; 
T_exp
 
	mÀ·
, 
	mright
;

27 
Temp_œbñ
 
	måue
, 
	mÁl£
;} 
	mCJUMP
;

28 °ru˘ {
T_exp
 
	md°
, 
	m§c
;} 
	mMOVE
;

29 
T_exp
 
	mEXP
;

30 } 
	mu
;

33 
	sT_exp_
 {íum {
	mT_BINOP
, 
	mT_MEM
, 
	mT_TEMP
, 
	mT_ESEQ
, 
	mT_NAME
,

34 
	mT_CONST
, 
	mT_CALL
} 
	mköd
;

35 uni⁄ {°ru˘ {
T_böOp
 
	m›
; 
T_exp
 
	mÀ·
, 
	mright
;} 
	mBINOP
;

36 
T_exp
 
	mMEM
;

37 
Temp_ãmp
 
	mTEMP
;

38 °ru˘ {
T_°m
 
	m°m
; 
T_exp
 
	mexp
;} 
	mESEQ
;

39 
Temp_œbñ
 
	mNAME
;

40 
	mCONST
;

41 °ru˘ {
T_exp
 
	mfun
; 
T_expLi°
 
	m¨gs
;} 
	mCALL
;

42 } 
	mu
;

45 
T_expLi°
 
T_ExpLi°
 (
T_exp
 
hód
, T_expLi° 
èû
);

46 
T_°mLi°
 
T_StmLi°
 (
T_°m
 
hód
, T_°mLi° 
èû
);

48 
T_°m
 
T_Seq
(T_°m 
À·
, T_°m 
right
);

49 
T_°m
 
T_Labñ
(
Temp_œbñ
);

50 
T_°m
 
T_Jump
(
T_exp
 
exp
, 
Temp_œbñLi°
 
œbñs
);

51 
T_°m
 
T_Cjump
(
T_ªlOp
 
›
, 
T_exp
 
À·
, T_ex∞
right
,

52 
Temp_œbñ
 
åue
, Temp_œbñ 
Ál£
);

53 
T_°m
 
T_Move
(
T_exp
, T_exp);

54 
T_°m
 
T_Exp
(
T_exp
);

56 
T_exp
 
T_Bö›
(
T_böOp
, T_exp, T_exp);

57 
T_exp
 
T_Mem
(T_exp);

58 
T_exp
 
T_Temp
(
Temp_ãmp
);

59 
T_exp
 
T_E£q
(
T_°m
, T_exp);

60 
T_exp
 
T_Name
(
Temp_œbñ
);

61 
T_exp
 
T_C⁄°
();

62 
T_exp
 
T_CÆl
(T_exp, 
T_expLi°
);

64 
T_ªlOp
 
T_nŸRñ
(T_relOp);

65 
T_ªlOp
 
T_commuã
(T_relOp);

	@types.c

8 
	~<°dio.h
>

9 
	~"utû.h
"

10 
	~"symbﬁ.h
"

11 
	~"ty≥s.h
"

13 
Ty_ty_
 
	gtynû
 = {
Ty_nû
};

14 
Ty_ty
 
	$Ty_Nû
(Ë{ &
tynû
;
	}
}

16 
Ty_ty_
 
	gtyöt
 = {
Ty_öt
};

17 
Ty_ty
 
	$Ty_I¡
(Ë{ &
työt
;
	}
}

19 
Ty_ty_
 
	gty°rög
 = {
Ty_°rög
};

20 
Ty_ty
 
	$Ty_Såög
(Ë{ &
ty°rög
;
	}
}

22 
Ty_ty_
 
	gtyvoid
 = {
Ty_void
};

23 
Ty_ty
 
	$Ty_Void
(Ë{ &
tyvoid
;
	}
}

25 
Ty_ty
 
	$Ty_Rec‹d
(
Ty_fõldLi°
 
fõlds
)

26 {
Ty_ty
 
p
 = 
	`checked_mÆloc
((*p));

27 
p
->
köd
=
Ty_ªc‹d
;

28 
p
->
u
.
ªc‹d
=
fõlds
;

29  
p
;

30 
	}
}

32 
Ty_ty
 
	$Ty_Aºay
(
Ty_ty
 
ty
)

33 {
Ty_ty
 
p
 = 
	`checked_mÆloc
((*p));

34 
p
->
köd
=
Ty_¨øy
;

35 
p
->
u
.
¨øy
=
ty
;

36  
p
;

37 
	}
}

39 
Ty_ty
 
	$Ty_Name
(
S_symbﬁ
 
sym
, 
Ty_ty
 
ty
)

40 {
Ty_ty
 
p
 = 
	`checked_mÆloc
((*p));

41 
p
->
köd
=
Ty_«me
;

42 
p
->
u
.
«me
.
sym
=sym;

43 
p
->
u
.
«me
.
ty
=ty;

44  
p
;

45 
	}
}

48 
Ty_tyLi°
 
	$Ty_TyLi°
(
Ty_ty
 
hód
, 
Ty_tyLi°
 
èû
)

49 {
Ty_tyLi°
 
p
 = 
	`checked_mÆloc
((*p));

50 
p
->
hód
=head;

51 
p
->
èû
=tail;

52  
p
;

53 
	}
}

55 
Ty_fõld
 
	$Ty_Fõld
(
S_symbﬁ
 
«me
, 
Ty_ty
 
ty
)

56 {
Ty_fõld
 
p
 = 
	`checked_mÆloc
((*p));

57 
p
->
«me
=name;

58 
p
->
ty
=ty;

59  
p
;

60 
	}
}

62 
Ty_fõldLi°
 
	$Ty_FõldLi°
(
Ty_fõld
 
hód
, 
Ty_fõldLi°
 
èû
)

63 {
Ty_fõldLi°
 
p
 = 
	`checked_mÆloc
((*p));

64 
p
->
hód
=head;

65 
p
->
èû
=tail;

66  
p
;

67 
	}
}

70 
	g°r_ty
[][12] = {

75 
	$Ty_¥öt
(
Ty_ty
 
t
)

77 i‡(
t
 =
NULL
Ë
	`¥ötf
("null");

78 { 
	`¥ötf
("%s", 
°r_ty
[
t
->
köd
]);

79 i‡(
t
->
köd
 =
Ty_«me
) {

80 
	`¥ötf
(", %s", 
	`S_«me
(
t
->
u
.
«me
.
sym
)); }

82 
	}
}

84 
	$TyLi°_¥öt
(
Ty_tyLi°
 
li°
)

86 i‡(
li°
 =
NULL
Ë
	`¥ötf
("null");

88 
	`¥ötf
("TyList( ");

89 
	`Ty_¥öt
(
li°
->
hód
);

90 
	`¥ötf
(", ");

91 
	`TyLi°_¥öt
(
li°
->
èû
);

92 
	`¥ötf
(")");

94 
	}
}

	@types.h

1 #i‚de‡
TYPES_H


2 
	#TYPES_H


	)

10 
Ty_ty_
 *
	tTy_ty
;

11 
Ty_tyLi°_
 *
	tTy_tyLi°
;

12 
Ty_fõld_
 *
	tTy_fõld
;

13 
Ty_fõldLi°_
 *
	tTy_fõldLi°
;

15 
	sTy_ty_
 {íum {
	mTy_ªc‹d
, 
	mTy_nû
, 
	mTy_öt
, 
	mTy_°rög
, 
	mTy_¨øy
,

16 
	mTy_«me
, 
	mTy_void
} 
	mköd
;

17 uni⁄ {
Ty_fõldLi°
 
	mªc‹d
;

18 
Ty_ty
 
	m¨øy
;

19 °ru˘ {
S_symbﬁ
 
	msym
; 
Ty_ty
 
	mty
;} 
	m«me
;

20 } 
	mu
;

23 
	sTy_tyLi°_
 {
Ty_ty
 
	mhód
; 
Ty_tyLi°
 
	mèû
;};

24 
	sTy_fõld_
 {
S_symbﬁ
 
	m«me
; 
Ty_ty
 
	mty
;};

25 
	sTy_fõldLi°_
 {
Ty_fõld
 
	mhód
; 
Ty_fõldLi°
 
	mèû
;};

27 
Ty_ty
 
Ty_Nû
();

28 
Ty_ty
 
Ty_I¡
();

29 
Ty_ty
 
Ty_Såög
();

30 
Ty_ty
 
Ty_Void
();

32 
Ty_ty
 
Ty_Rec‹d
(
Ty_fõldLi°
 
fõlds
);

33 
Ty_ty
 
Ty_Aºay
(Ty_ty 
ty
);

34 
Ty_ty
 
Ty_Name
(
S_symbﬁ
 
sym
, Ty_ty 
ty
);

36 
Ty_tyLi°
 
Ty_TyLi°
(
Ty_ty
 
hód
, Ty_tyLi° 
èû
);

37 
Ty_fõld
 
Ty_Fõld
(
S_symbﬁ
 
«me
, 
Ty_ty
 
ty
);

38 
Ty_fõldLi°
 
Ty_FõldLi°
(
Ty_fõld
 
hód
, Ty_fõldLi° 
èû
);

40 
Ty_¥öt
(
Ty_ty
 
t
);

41 
TyLi°_¥öt
(
Ty_tyLi°
 
li°
);

	@util.c

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

8 
	~"utû.h
"

9 *
	$checked_mÆloc
(
Àn
)

10 {*
p
 = 
	`mÆloc
(
Àn
);

11 i‡(!
p
) {

12 
	`Ârötf
(
°dîr
,"\nRan out of memory!\n");

13 
	`exô
(1);

15  
p
;

16 
	}
}

18 
°rög
 
	$Såög
(*
s
)

19 {
°rög
 
p
 = 
	`checked_mÆloc
(
	`°æí
(
s
)+1);

20 
	`°r˝y
(
p
,
s
);

21  
p
;

22 
	}
}

24 
U_boﬁLi°
 
	$U_BoﬁLi°
(
boﬁ
 
hód
, 
U_boﬁLi°
 
èû
)

25 { 
U_boﬁLi°
 
li°
 = 
	`checked_mÆloc
((*list));

26 
li°
->
hód
 = head;

27 
li°
->
èû
 =Åail;

28  
li°
;

29 
	}
}

	@util.h

1 #i‚de‡
UTIL_H


2 
	#UTIL_H


	)

3 
	~<as£π.h
>

5 *
	t°rög
;

6 
	tboﬁ
;

8 
	#TRUE
 1

	)

9 
	#FALSE
 0

	)

11 *
checked_mÆloc
();

12 
°rög
 
Såög
(*);

14 
U_boﬁLi°_
 *
	tU_boﬁLi°
;

15 
	sU_boﬁLi°_
 {
boﬁ
 
	mhód
; 
U_boﬁLi°
 
	mèû
;};

16 
U_boﬁLi°
 
U_BoﬁLi°
(
boﬁ
 
hód
, U_boﬁLi° 
èû
);

	@x86frame.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

5 
	~"utû.h
"

6 
	~"symbﬁ.h
"

7 
	~"ãmp.h
"

8 
	~"èbÀ.h
"

9 
	~"åì.h
"

10 
	~"‰ame.h
"

13 c⁄° 
	gF_w‹dSize
 = 4;

15 
	sF_‰ame_
 {

16 
Temp_œbñ
 
	m«me
;

17 
F_ac˚ssLi°
 
	mac˚ssLi°
;

18 
	moff
;

21 
	sF_ac˚ss_
 {

22 íum {
	möFøme
, 
	möReg
} 
	mköd
;

24 
	moff£t
;

25 
Temp_ãmp
 
	mªg
;

26 } 
	mu
;

29 
F_ac˚ss
 
	$InFøme
(
off£t
)

31 
F_ac˚ss
 
ac˚ss
 = 
	`checked_mÆloc
((*access));

32 
ac˚ss
->
köd
 = 
öFøme
;

33 
ac˚ss
->
u
.
off£t
 = offset;

34  
ac˚ss
;

35 
	}
}

37 
F_ac˚ss
 
	$InReg
(
Temp_ãmp
 
ªg
)

39 
F_ac˚ss
 
ac˚ss
 = 
	`checked_mÆloc
((*access));

40 
ac˚ss
->
köd
 = 
öReg
;

41 
ac˚ss
->
u
.
ªg
 =Ñeg;

42  
ac˚ss
;

43 
	}
}

45 
Temp_œbñ
 
	$F_«me
(
F_‰ame
 
f
)

47  
f
->
«me
;

48 
	}
}

50 
F_ac˚ssLi°
 
	$F_f‹mÆs
(
F_‰ame
 
f
)

52  
f
->
ac˚ssLi°
;

53 
	}
}

55 
F_ac˚ss
 
	$F_ÆlocLoˇl
(
F_‰ame
 
f
, 
boﬁ
 
esˇ≥
)

57 i‡(
esˇ≥
) {

58 
f
->
off
 -
F_w‹dSize
;

59 
	`¥ötf
("‰amêoff£t:%d\n", 
f
->
off
);

60  
	`InFøme
(
f
->
off
);

62 
f
->
off
 -
F_w‹dSize
;

63  
	`InFøme
(
f
->
off
);

65 
	}
}

67 
F_ac˚ss
 
	$F_ÆlocP¨am
(
F_‰ame
 
f
, 
boﬁ
 
esˇ≥
)

69 i‡(
esˇ≥
) {

70 
f
->
off
 +
F_w‹dSize
;

71 
	`¥ötf
("‰amêoff£t:%d\n", 
f
->
off
);

72  
	`InFøme
(
f
->
off
);

74 
f
->
off
 +
F_w‹dSize
;

75  
	`InFøme
(
f
->
off
);

77 
	}
}

79 
F_‰ame
 
	$F_√wFøme
(
Temp_œbñ
 
«me
, 
U_boﬁLi°
 
f‹mÆs
)

81 
F_‰ame
 
‰ame
 = 
	`checked_mÆloc
((*frame));

82 
‰ame
->
«me
 =Çame;

83 
‰ame
->
off
 = 0;

85 i‡(!
f‹mÆs
Ë 
‰ame
;

87 
F_ac˚ssLi°
 
Æ
 = 
	`checked_mÆloc
((*al));

88 
F_ac˚ssLi°
 
hód
 = 
Æ
;

89 ; 
f‹mÆs
->
èû
; formals = formals->tail) {

90 
	`¥ötf
(" frame:loop body\n");

91 
boﬁ
 
esˇ≥
 = 
f‹mÆs
->
hód
;

92 
Æ
->
hód
 = 
	`F_ÆlocP¨am
(
‰ame
, 
esˇ≥
);

93 
Æ
->
èû
 = 
	`checked_mÆloc
((*al));

94 
Æ
 =ál->
èû
;

96 
	`¥ötf
(" frame:loopÅail\n");

97 
Æ
->
hód
 = 
	`F_ÆlocP¨am
(
‰ame
, 
f‹mÆs
->head);

98 
Æ
->
èû
 = 
NULL
;

99 
‰ame
->
ac˚ssLi°
 = 
hód
;

100 
‰ame
->
off
 = 0;

101  
‰ame
;

102 
	}
}

104 
F_‰ag
 
	$F_SåögFøg
(
Temp_œbñ
 
œbñ
, 
°rög
 
°r
) {

105 
F_‰ag
 
‰g
 = 
	`checked_mÆloc
((*frg));

106 
‰g
->
köd
 = 
F_°rögFøg
;

107 
‰g
->
u
.
°rögg
.
œbñ
 =Üabel;

108 
‰g
->
u
.
°rögg
.
°r
 = str;

109  
‰g
;

110 
	}
}

112 
F_‰ag
 
	$F_ProcFøg
(
T_°m
 
body
, 
F_‰ame
 
‰ame
) {

113 
F_‰ag
 
‰g
 = 
	`checked_mÆloc
((*frg));

114 
‰g
->
köd
 = 
F_¥ocFøg
;

115 
‰g
->
u
.
¥oc
.
body
 = body;

116 
‰g
->
u
.
¥oc
.
‰ame
 = frame;

117  
‰g
;

118 
	}
}

120 
F_‰agLi°
 
	$F_FøgLi°
(
F_‰ag
 
hód
, 
F_‰agLi°
 
èû
) {

121 
F_‰agLi°
 
Ê
 = 
	`checked_mÆloc
((*fl));

122 
Ê
->
hód
 = head;

123 
Ê
->
èû
 =Åail;

124  
Ê
;

125 
	}
}

127 
T_°m
 
	$F_¥ocE¡ryExô1
(
F_‰ame
 
‰ame
, 
T_°m
 
°m
)

129 
	`as£π
(
‰ame
->
«me
);

130  
	`T_Seq
(
	`T_Labñ
(
‰ame
->
«me
), 
°m
);

131 
	}
}

133 
Temp_ãmp
 
	$F_FP
()

135 
Temp_ãmp
 
Â
 = 
NULL
;

136 i‡(
Â
 =
NULL
)

137 
Â
 = 
	`Temp_√wãmp
();

138  
Â
;

139 
	}
}

141 
Temp_ãmp
 
	$F_RV
()

143 
Temp_ãmp
 
Â
 = 
NULL
;

144 i‡(
Â
 =
NULL
)

145 
Â
 = 
	`Temp_√wãmp
();

146  
Â
;

147 
	}
}

149 
T_exp
 
	$F_Exp
(
F_ac˚ss
 
acc
, 
T_exp
 
‰amePå
)

151 i‡(
acc
->
köd
 =
öFøme
) {

152  
	`T_Mem
(
	`T_Bö›
(
T_∂us
,

153 
‰amePå
, 
	`T_C⁄°
(
acc
->
u
.
off£t
)));

155  
‰amePå
;

157 
	}
}

159 
T_exp
 
	$F_exã∫ÆCÆl
(
°rög
 
°r
, 
T_expLi°
 
¨gs
)

161  
	`T_CÆl
(
	`T_Name
(
	`Temp_«medœbñ
(
°r
)), 
¨gs
);

162 
	}
}

164 
Temp_ãmpLi°
 
	$F_ªgi°îs
()

167  
NULL
;

168 
	}
}

	@y.tab.c

44 
	#YYBISON
 1

	)

47 
	#YYBISON_VERSION
 "3.0.4"

	)

50 
	#YYSKELETON_NAME
 "yacc.c"

	)

53 
	#YYPURE
 0

	)

56 
	#YYPUSH
 0

	)

59 
	#YYPULL
 1

	)

67 
	~<°dio.h
>

68 
	~<°dlib.h
>

69 
	~"utû.h
"

70 
	~"symbﬁ.h
"

71 
	~"îr‹msg.h
"

72 
	~"absyn.h
"

74 
yyÀx
();

76 
A_exp
 
	gabsyn_roŸ
;

78 
	$yyîr‹
(*
s
)

80 
	`EM_îr‹
(
EM_tokPos
, "%s", 
s
);

81 
	`exô
(1);

82 
	}
}

86 #i‚de‡
YY_NULLPTR


87 #i‡
deföed
 
__˝lu•lus
 && 201103L <= __cplusplus

88 
	#YY_NULLPTR
 
nuŒ±r


	)

90 
	#YY_NULLPTR
 0

	)

95 #ifde‡
YYERROR_VERBOSE


96 #unde‡
YYERROR_VERBOSE


97 
	#YYERROR_VERBOSE
 1

	)

99 
	#YYERROR_VERBOSE
 0

	)

104 #i‚de‡
YY_YY_Y_TAB_H_INCLUDED


105 
	#YY_YY_Y_TAB_H_INCLUDED


	)

107 #i‚de‡
YYDEBUG


108 
	#YYDEBUG
 0

	)

110 #i‡
YYDEBUG


111 
yydebug
;

115 #i‚de‡
YYTOKENTYPE


116 
	#YYTOKENTYPE


	)

117 
	eyytokíty≥


119 
	mID
 = 258,

120 
	mSTRING
 = 259,

121 
	mINT
 = 260,

122 
	mCOMMA
 = 261,

123 
	mCOLON
 = 262,

124 
	mSEMICOLON
 = 263,

125 
	mLPAREN
 = 264,

126 
	mRPAREN
 = 265,

127 
	mLBRACK
 = 266,

128 
	mRBRACK
 = 267,

129 
	mLBRACE
 = 268,

130 
	mRBRACE
 = 269,

131 
	mDOT
 = 270,

132 
	mPLUS
 = 271,

133 
	mMINUS
 = 272,

134 
	mTIMES
 = 273,

135 
	mDIVIDE
 = 274,

136 
	mEQ
 = 275,

137 
	mNEQ
 = 276,

138 
	mLT
 = 277,

139 
	mLE
 = 278,

140 
	mGT
 = 279,

141 
	mGE
 = 280,

142 
	mAND
 = 281,

143 
	mOR
 = 282,

144 
	mASSIGN
 = 283,

145 
	mARRAY
 = 284,

146 
	mIF
 = 285,

147 
	mTHEN
 = 286,

148 
	mELSE
 = 287,

149 
	mWHILE
 = 288,

150 
	mFOR
 = 289,

151 
	mTO
 = 290,

152 
	mDO
 = 291,

153 
	mLET
 = 292,

154 
	mIN
 = 293,

155 
	mEND
 = 294,

156 
	mOF
 = 295,

157 
	mBREAK
 = 296,

158 
	mNIL
 = 297,

159 
	mFUNCTION
 = 298,

160 
	mVAR
 = 299,

161 
	mTYPE
 = 300,

162 
	mUMINUS
 = 301

166 
	#ID
 258

	)

167 
	#STRING
 259

	)

168 
	#INT
 260

	)

169 
	#COMMA
 261

	)

170 
	#COLON
 262

	)

171 
	#SEMICOLON
 263

	)

172 
	#LPAREN
 264

	)

173 
	#RPAREN
 265

	)

174 
	#LBRACK
 266

	)

175 
	#RBRACK
 267

	)

176 
	#LBRACE
 268

	)

177 
	#RBRACE
 269

	)

178 
	#DOT
 270

	)

179 
	#PLUS
 271

	)

180 
	#MINUS
 272

	)

181 
	#TIMES
 273

	)

182 
	#DIVIDE
 274

	)

183 
	#EQ
 275

	)

184 
	#NEQ
 276

	)

185 
	#LT
 277

	)

186 
	#LE
 278

	)

187 
	#GT
 279

	)

188 
	#GE
 280

	)

189 
	#AND
 281

	)

190 
	#OR
 282

	)

191 
	#ASSIGN
 283

	)

192 
	#ARRAY
 284

	)

193 
	#IF
 285

	)

194 
	#THEN
 286

	)

195 
	#ELSE
 287

	)

196 
	#WHILE
 288

	)

197 
	#FOR
 289

	)

198 
	#TO
 290

	)

199 
	#DO
 291

	)

200 
	#LET
 292

	)

201 
	#IN
 293

	)

202 
	#END
 294

	)

203 
	#OF
 295

	)

204 
	#BREAK
 296

	)

205 
	#NIL
 297

	)

206 
	#FUNCTION
 298

	)

207 
	#VAR
 299

	)

208 
	#TYPE
 300

	)

209 
	#UMINUS
 301

	)

212 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


214 
	uYYSTYPE


218 
	mpos
;

219 
	mivÆ
;

220 
°rög
 
	msvÆ
;

221 
A_v¨
 
	mv¨
;

222 
A_exp
 
	mexp
;

223 
A_dec
 
	mdec
;

224 
A_decLi°
 
	mdecs
;

225 
A_expLi°
 
	mexps
;

226 
A_ty
 
	mty
;

227 
S_symbﬁ
 
	msymbﬁ
;

229 
A_fõldLi°
 
	mfõlds
;

230 
A_efõldLi°
 
	mefõlds
;

231 
A_fundec
 
	mfundec
;

232 
A_fundecLi°
 
	mfundecs
;

233 
A_«mëy
 
	m«mëy
;

234 
A_«mëyLi°
 
	m«mëys
;

240 
YYSTYPE
 
	tYYSTYPE
;

241 
	#YYSTYPE_IS_TRIVIAL
 1

	)

242 
	#YYSTYPE_IS_DECLARED
 1

	)

246 
YYSTYPE
 
yylvÆ
;

248 
yy∑r£
 ();

260 #ifde‡
YYTYPE_UINT8


261 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

263 
	tyyty≥_uöt8
;

266 #ifde‡
YYTYPE_INT8


267 
YYTYPE_INT8
 
	tyyty≥_öt8
;

269 sig√d 
	tyyty≥_öt8
;

272 #ifde‡
YYTYPE_UINT16


273 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

275 
	tyyty≥_uöt16
;

278 #ifde‡
YYTYPE_INT16


279 
YYTYPE_INT16
 
	tyyty≥_öt16
;

281 
	tyyty≥_öt16
;

284 #i‚de‡
YYSIZE_T


285 #ifde‡
__SIZE_TYPE__


286 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

287 #ñi‡
deföed
 
size_t


288 
	#YYSIZE_T
 
size_t


	)

289 #ñi‡! 
deföed
 
YYSIZE_T


290 
	~<°ddef.h
>

291 
	#YYSIZE_T
 
size_t


	)

293 
	#YYSIZE_T
 

	)

297 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

299 #i‚de‡
YY_


300 #i‡
deföed
 
YYENABLE_NLS
 && YYENABLE_NLS

301 #i‡
ENABLE_NLS


302 
	~<liböé.h
>

303 
	#YY_
(
Msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", Msgid)

	)

306 #i‚de‡
YY_


307 
	#YY_
(
Msgid
Ë
	)
Msgid

311 #i‚de‡
YY_ATTRIBUTE


312 #i‡(
deföed
 
__GNUC__
 \

313 && (2 < 
	g__GNUC__
 || (__GNUC__ =2 && 96 <
__GNUC_MINOR__
))) \

314 || 
deföed
 
__SUNPRO_C
 && 0x5110 <= __SUNPRO_C

315 
	#YY_ATTRIBUTE
(
S≥c
Ë
	`__©åibuã__
(S≥c)

	)

317 
	#YY_ATTRIBUTE
(
S≥c
Ë

	)

321 #i‚de‡
YY_ATTRIBUTE_PURE


322 
	#YY_ATTRIBUTE_PURE
 
	`YY_ATTRIBUTE
 ((
__puª__
))

	)

325 #i‚de‡
YY_ATTRIBUTE_UNUSED


326 
	#YY_ATTRIBUTE_UNUSED
 
	`YY_ATTRIBUTE
 ((
__unu£d__
))

	)

329 #i‡!
deföed
 
_N‹ëu∫
 \

330 && (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 201112)

331 #i‡
deföed
 
_MSC_VER
 && 1200 <= _MSC_VER

332 
	#_N‹ëu∫
 
	`__de˛•ec
 (
n‹ëu∫
)

	)

334 
	#_N‹ëu∫
 
	`YY_ATTRIBUTE
 ((
__n‹ëu∫__
))

	)

339 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


340 
	#YYUSE
(
E
Ë((Ë(E))

	)

342 
	#YYUSE
(
E
Ë

	)

345 #i‡
deföed
 
__GNUC__
 && 407 <__GNUC__ * 100 + 
__GNUC_MINOR__


347 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
 \

348 
	`_Pøgma
 ("GCC diagnosticÖush") \

349 
	`_Pøgma
 ("GCC diagnostic ignored \"-Wuninitialized\"")\

350 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wmaybe-unöôülized\"")

	)

351 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END
 \

352 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

354 
	#YY_INITIAL_VALUE
(
VÆue
Ë
	)
Value

356 #i‚de‡
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


357 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


	)

358 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END


	)

360 #i‚de‡
YY_INITIAL_VALUE


361 
	#YY_INITIAL_VALUE
(
VÆue
Ë

	)

365 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


369 #ifde‡
YYSTACK_USE_ALLOCA


370 #i‡
YYSTACK_USE_ALLOCA


371 #ifde‡
__GNUC__


372 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

373 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


374 
	~<Æloˇ.h
>

375 #ñi‡
deföed
 
_AIX


376 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

377 #ñi‡
deföed
 
_MSC_VER


378 
	~<mÆloc.h
>

379 
	#Æloˇ
 
_Æloˇ


	)

381 
	#YYSTACK_ALLOC
 
Æloˇ


	)

382 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
EXIT_SUCCESS


383 
	~<°dlib.h
>

385 #i‚de‡
EXIT_SUCCESS


386 
	#EXIT_SUCCESS
 0

	)

393 #ifde‡
YYSTACK_ALLOC


395 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 0)

	)

396 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


401 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

404 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

405 
	#YYSTACK_FREE
 
YYFREE


	)

406 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


407 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

409 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
EXIT_SUCCESS
 \

410 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

411 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

412 
	~<°dlib.h
>

413 #i‚de‡
EXIT_SUCCESS


414 
	#EXIT_SUCCESS
 0

	)

417 #i‚de‡
YYMALLOC


418 
	#YYMALLOC
 
mÆloc


	)

419 #i‡! 
deföed
 
mÆloc
 && ! deföed 
EXIT_SUCCESS


420 *
mÆloc
 (
YYSIZE_T
);

423 #i‚de‡
YYFREE


424 
	#YYFREE
 
‰ì


	)

425 #i‡! 
deföed
 
‰ì
 && ! deföed 
EXIT_SUCCESS


426 
‰ì
 (*);

433 #i‡(! 
deföed
 
yyovîÊow
 \

434 && (! 
deföed
 
	g__˝lu•lus
 \

435 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

438 
	uyyÆloc


440 
yyty≥_öt16
 
	myyss_Æloc
;

441 
YYSTYPE
 
	myyvs_Æloc
;

445 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

449 
	#YYSTACK_BYTES
(
N
) \

450 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
)) \

451 + 
YYSTACK_GAP_MAXIMUM
)

	)

453 
	#YYCOPY_NEEDED
 1

	)

460 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

463 
YYSIZE_T
 
yy√wbyãs
; \

464 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

465 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

466 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

467 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

469 0)

	)

473 #i‡
deföed
 
YYCOPY_NEEDED
 && YYCOPY_NEEDED

476 #i‚de‡
YYCOPY


477 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

478 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

479 
	`__buûtö_mem˝y
 (
D°
, 
Src
, (
Cou¡
Ë*  (*(Src)))

	)

481 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

484 
YYSIZE_T
 
yyi
; \

485 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

486 (
D°
)[
yyi
] = (
Src
)[yyi]; \

488 0)

	)

494 
	#YYFINAL
 35

	)

496 
	#YYLAST
 335

	)

499 
	#YYNTOKENS
 47

	)

501 
	#YYNNTS
 17

	)

503 
	#YYNRULES
 66

	)

505 
	#YYNSTATES
 139

	)

509 
	#YYUNDEFTOK
 2

	)

510 
	#YYMAXUTOK
 301

	)

512 
	#YYTRANSLATE
(
YYX
) \

513 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

517 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

552 #i‡
YYDEBUG


554 c⁄° 
yyty≥_uöt8
 
	gyyæöe
[] =

566 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 0

569 c⁄° *c⁄° 
	gyyäame
[] =

578 "exp", "∑øs", "efõlds", "exp£q", "ex∂i°", 
YY_NULLPTR


582 #ifde‡
YYPRINT


585 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

595 
	#YYPACT_NINF
 -108

	)

597 
	#yy∑˘_vÆue_is_deÁu…
(
Yy°©e
) \

598 (!!((
Yy°©e
Ë=(-108)))

	)

600 
	#YYTABLE_NINF
 -1

	)

602 
	#yyèbÀ_vÆue_is_îr‹
(
YyèbÀ_vÆue
) \

603 (!!((
YyèbÀ_vÆue
Ë=(-1)))

	)

607 c⁄° 
yyty≥_öt16
 
	gyy∑˘
[] =

628 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

647 c⁄° 
yyty≥_öt8
 
	gyypgŸo
[] =

654 c⁄° 
yyty≥_öt8
 
	gyydefgŸo
[] =

663 c⁄° 
yyty≥_öt16
 
	gyyèbÀ
[] =

701 c⁄° 
yyty≥_öt16
 
	gyycheck
[] =

741 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

760 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

772 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

784 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

785 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

786 
	#YYEMPTY
 (-2)

	)

787 
	#YYEOF
 0

	)

789 
	#YYACCEPT
 
yyac˚±œb


	)

790 
	#YYABORT
 
yyab‹éab


	)

791 
	#YYERROR
 
yyîr‹œb


	)

794 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

796 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

798 i‡(
yych¨
 =
YYEMPTY
) \

800 
yych¨
 = (
Tokí
); \

801 
yylvÆ
 = (
VÆue
); \

802 
	`YYPOPSTACK
 (
yyÀn
); \

803 
yy°©e
 = *
yys•
; \

804 
yybackup
; \

808 
	`yyîr‹
 (
	`YY_
("syntaxÉrror: cannot back up")); \

809 
YYERROR
; \

811 0)

	)

814 
	#YYTERROR
 1

	)

815 
	#YYERRCODE
 256

	)

820 #i‡
YYDEBUG


822 #i‚de‡
YYFPRINTF


823 
	~<°dio.h
>

824 
	#YYFPRINTF
 
Ârötf


	)

827 
	#YYDPRINTF
(
Args
) \

829 i‡(
yydebug
) \

830 
YYFPRINTF
 
Args
; \

831 } 0)

	)

834 #i‚de‡
YY_LOCATION_PRINT


835 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

839 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

841 i‡(
yydebug
) \

843 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

844 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

845 
Ty≥
, 
VÆue
); \

846 
	`YYFPRINTF
 (
°dîr
, "\n"); \

848 } 0)

	)

856 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

858 
FILE
 *
yyo
 = 
yyouçut
;

859 
	`YYUSE
 (
yyo
);

860 i‡(!
yyvÆuï
)

862 #ifde‡
YYPRINT


863 i‡(
yyty≥
 < 
YYNTOKENS
)

864 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

866 
	`YYUSE
 (
yyty≥
);

867 
	}
}

875 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

877 
	`YYFPRINTF
 (
yyouçut
, "%s %s (",

878 
yyty≥
 < 
YYNTOKENS
 ? "tokí" : "¡îm", 
yyäame
[yytype]);

880 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
);

881 
	`YYFPRINTF
 (
yyouçut
, ")");

882 
	}
}

890 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

892 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

893 ; 
yybŸtom
 <
yyt›
; yybottom++)

895 
yybŸ
 = *
yybŸtom
;

896 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

898 
	`YYFPRINTF
 (
°dîr
, "\n");

899 
	}
}

901 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

903 i‡(
yydebug
) \

904 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

905 } 0)

	)

913 
	$yy_ªdu˚_¥öt
 (
yyty≥_öt16
 *
yys•
, 
YYSTYPE
 *
yyv•
, 
yyruÀ
)

915 
yy o
 = 
yyæöe
[
yyruÀ
];

916 
yyƒhs
 = 
yyr2
[
yyruÀ
];

917 
yyi
;

918 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

919 
yyruÀ
 - 1, 
yy o
);

921 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

923 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

924 
	`yy_symbﬁ_¥öt
 (
°dîr
,

925 
yy°os
[
yys•
[
yyi
 + 1 - 
yyƒhs
]],

926 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

928 
	`YYFPRINTF
 (
°dîr
, "\n");

930 
	}
}

932 
	#YY_REDUCE_PRINT
(
RuÀ
) \

934 i‡(
yydebug
) \

935 
	`yy_ªdu˚_¥öt
 (
yys•
, 
yyv•
, 
RuÀ
); \

936 } 0)

	)

940 
	gyydebug
;

942 
	#YYDPRINTF
(
Args
)

	)

943 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

944 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

945 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

950 #i‚de‡
YYINITDEPTH


951 
	#YYINITDEPTH
 200

	)

961 #i‚de‡
YYMAXDEPTH


962 
	#YYMAXDEPTH
 10000

	)

966 #i‡
YYERROR_VERBOSE


968 #i‚de‡
yy°æí


969 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


970 
	#yy°æí
 
°æí


	)

973 
YYSIZE_T


974 
	$yy°æí
 (c⁄° *
yy°r
)

976 
YYSIZE_T
 
yyÀn
;

977 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

979  
yyÀn
;

980 
	}
}

984 #i‚de‡
yy°p˝y


985 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


986 
	#yy°p˝y
 
°p˝y


	)

991 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

993 *
yyd
 = 
yyde°
;

994 c⁄° *
yys
 = 
yy§c
;

996 (*
yyd
++ = *
yys
++) != '\0')

999  
yyd
 - 1;

1000 
	}
}

1004 #i‚de‡
yyäamîr


1012 
YYSIZE_T


1013 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

1015 i‡(*
yy°r
 == '"')

1017 
YYSIZE_T
 
yyn
 = 0;

1018 c⁄° *
yyp
 = 
yy°r
;

1021 *++
yyp
)

1025 
do_nŸ_°rù_quŸes
;

1028 i‡(*++
yyp
 != '\\')

1029 
do_nŸ_°rù_quŸes
;

1032 i‡(
yyªs
)

1033 
yyªs
[
yyn
] = *
yyp
;

1034 
yyn
++;

1038 i‡(
yyªs
)

1039 
yyªs
[
yyn
] = '\0';

1040  
yyn
;

1042 
do_nŸ_°rù_quŸes
: ;

1045 i‡(! 
yyªs
)

1046  
	`yy°æí
 (
yy°r
);

1048  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

1049 
	}
}

1061 
	$yysy¡ax_îr‹
 (
YYSIZE_T
 *
yymsg_Æloc
, **
yymsg
,

1062 
yyty≥_öt16
 *
yys•
, 
yytokí
)

1064 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yytokí
]);

1065 
YYSIZE_T
 
yysize
 = 
yysize0
;

1066 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1068 c⁄° *
yyf‹m©
 = 
YY_NULLPTR
;

1070 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1073 
yycou¡
 = 0;

1098 i‡(
yytokí
 !
YYEMPTY
)

1100 
yyn
 = 
yy∑˘
[*
yys•
];

1101 
yy¨g
[
yycou¡
++] = 
yyäame
[
yytokí
];

1102 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1107 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1109 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1110 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1111 
yyx
;

1113 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1114 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR


1115 && !
	`yyèbÀ_vÆue_is_îr‹
 (
yyèbÀ
[
yyx
 + 
yyn
]))

1117 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1119 
yycou¡
 = 1;

1120 
yysize
 = 
yysize0
;

1123 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1125 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yyx
]);

1126 i‡(! (
yysize
 <
yysize1


1127 && 
yysize1
 <
YYSTACK_ALLOC_MAXIMUM
))

1129 
yysize
 = 
yysize1
;

1135 
yycou¡
)

1137 
	#YYCASE_
(
N
, 
S
) \

1138 
N
: \

1139 
yyf‹m©
 = 
S
; \

1140 

	)

1141 
	`YYCASE_
(0, 
	`YY_
("syntaxÉrror"));

1142 
	`YYCASE_
(1, 
	`YY_
("syntaxÉrror, unexpected %s"));

1143 
	`YYCASE_
(2, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s"));

1144 
	`YYCASE_
(3, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s"));

1145 
	`YYCASE_
(4, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s"));

1146 
	`YYCASE_
(5, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s"));

1147 #unde‡
YYCASE_


1151 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf‹m©
);

1152 i‡(! (
yysize
 <
yysize1
 && yysize1 <
YYSTACK_ALLOC_MAXIMUM
))

1154 
yysize
 = 
yysize1
;

1157 i‡(*
yymsg_Æloc
 < 
yysize
)

1159 *
yymsg_Æloc
 = 2 * 
yysize
;

1160 i‡(! (
yysize
 <*
yymsg_Æloc


1161 && *
yymsg_Æloc
 <
YYSTACK_ALLOC_MAXIMUM
))

1162 *
yymsg_Æloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1170 *
yyp
 = *
yymsg
;

1171 
yyi
 = 0;

1172 (*
yyp
 = *
yyf‹m©
) != '\0')

1173 i‡(*
yyp
 ='%' && 
yyf‹m©
[1] ='s' && 
yyi
 < 
yycou¡
)

1175 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1176 
yyf‹m©
 += 2;

1180 
yyp
++;

1181 
yyf‹m©
++;

1185 
	}
}

1193 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

1195 
	`YYUSE
 (
yyvÆuï
);

1196 i‡(!
yymsg
)

1197 
yymsg
 = "Deleting";

1198 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1200 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1201 
	`YYUSE
 (
yyty≥
);

1202 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1203 
	}
}

1209 
	gyych¨
;

1212 
YYSTYPE
 
	gyylvÆ
;

1214 
	gyy√ºs
;

1222 
	$yy∑r£
 ()

1224 
yy°©e
;

1226 
yyîr°©us
;

1236 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

1237 
yyty≥_öt16
 *
yyss
;

1238 
yyty≥_öt16
 *
yys•
;

1241 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1242 
YYSTYPE
 *
yyvs
;

1243 
YYSTYPE
 *
yyv•
;

1245 
YYSIZE_T
 
yy°acksize
;

1247 
yyn
;

1248 
yyªsu…
;

1250 
yytokí
 = 0;

1253 
YYSTYPE
 
yyvÆ
;

1255 #i‡
YYERROR_VERBOSE


1257 
yymsgbuf
[128];

1258 *
yymsg
 = 
yymsgbuf
;

1259 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1262 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1266 
yyÀn
 = 0;

1268 
yys•
 = 
yyss
 = 
yysß
;

1269 
yyv•
 = 
yyvs
 = 
yyvß
;

1270 
yy°acksize
 = 
YYINITDEPTH
;

1272 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1274 
yy°©e
 = 0;

1275 
yyîr°©us
 = 0;

1276 
yy√ºs
 = 0;

1277 
yych¨
 = 
YYEMPTY
;

1278 
yy£t°©e
;

1283 
yy√w°©e
:

1286 
yys•
++;

1288 
yy£t°©e
:

1289 *
yys•
 = 
yy°©e
;

1291 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1294 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1296 #ifde‡
yyovîÊow


1301 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1302 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1308 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1309 &
yyss1
, 
yysize
 *  (*
yys•
),

1310 &
yyvs1
, 
yysize
 *  (*
yyv•
),

1311 &
yy°acksize
);

1313 
yyss
 = 
yyss1
;

1314 
yyvs
 = 
yyvs1
;

1317 #i‚de‡
YYSTACK_RELOCATE


1318 
yyexhau°edœb
;

1321 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1322 
yyexhau°edœb
;

1323 
yy°acksize
 *= 2;

1324 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1325 
yy°acksize
 = 
YYMAXDEPTH
;

1328 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1329 
yyÆloc
 *
yy±r
 =

1330 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

1331 i‡(! 
yy±r
)

1332 
yyexhau°edœb
;

1333 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1334 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1335 #unde‡
YYSTACK_RELOCATE


1336 i‡(
yyss1
 !
yysß
)

1337 
	`YYSTACK_FREE
 (
yyss1
);

1342 
yys•
 = 
yyss
 + 
yysize
 - 1;

1343 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1345 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

1346 (Ë
yy°acksize
));

1348 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1349 
YYABORT
;

1352 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1354 i‡(
yy°©e
 =
YYFINAL
)

1355 
YYACCEPT
;

1357 
yybackup
;

1362 
yybackup
:

1368 
yyn
 = 
yy∑˘
[
yy°©e
];

1369 i‡(
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1370 
yydeÁu…
;

1375 i‡(
yych¨
 =
YYEMPTY
)

1377 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1378 
yych¨
 = 
	`yyÀx
 ();

1381 i‡(
yych¨
 <
YYEOF
)

1383 
yych¨
 = 
yytokí
 = 
YYEOF
;

1384 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1388 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1389 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1394 
yyn
 +
yytokí
;

1395 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1396 
yydeÁu…
;

1397 
yyn
 = 
yyèbÀ
[yyn];

1398 i‡(
yyn
 <= 0)

1400 i‡(
	`yyèbÀ_vÆue_is_îr‹
 (
yyn
))

1401 
yyîæab
;

1402 
yyn
 = -yyn;

1403 
yyªdu˚
;

1408 i‡(
yyîr°©us
)

1409 
yyîr°©us
--;

1412 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1415 
yych¨
 = 
YYEMPTY
;

1417 
yy°©e
 = 
yyn
;

1418 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1419 *++
yyv•
 = 
yylvÆ
;

1420 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1422 
yy√w°©e
;

1428 
yydeÁu…
:

1429 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1430 i‡(
yyn
 == 0)

1431 
yyîæab
;

1432 
yyªdu˚
;

1438 
yyªdu˚
:

1440 
yyÀn
 = 
yyr2
[
yyn
];

1450 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1453 
	`YY_REDUCE_PRINT
 (
yyn
);

1454 
yyn
)

1458 {
absyn_roŸ
=(
yyv•
[0].
exp
);}

1464 { (
yyvÆ
.
decs
)=
	`A_DecLi°
((
yyv•
[-1].
dec
),(yyvsp[0].decs));}

1470 { (
yyvÆ
.
decs
)=
	`A_DecLi°
((
yyv•
[0].
dec
), 
NULL
);}

1476 { (
yyvÆ
.
dec
)=
	`A_Ty≥Dec
(
EM_tokPos
, (
yyv•
[0].
«mëys
));}

1482 { (
yyvÆ
.
dec
)=(
yyv•
[0].dec);}

1488 { (
yyvÆ
.
dec
)=
	`A_Fun˘i⁄Dec
(
EM_tokPos
, (
yyv•
[0].
fundecs
));}

1494 { (
yyvÆ
.
«mëy
)=
	`A_Namëy
(
	`S_Symbﬁ
((
yyv•
[-2].
svÆ
)), (yyv•[0].
ty
));}

1500 { (
yyvÆ
.
«mëys
)=
	`A_NamëyLi°
((
yyv•
[0].
«mëy
),
NULL
);}

1506 { (
yyvÆ
.
«mëys
)=
	`A_NamëyLi°
((
yyv•
[-1].
«mëy
), (yyvsp[0].nametys));}

1512 { (
yyvÆ
.
ty
)=
	`A_NameTy
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[0].
svÆ
)));}

1518 { (
yyvÆ
.
ty
)=
	`A_Rec‹dTy
(
EM_tokPos
, (
yyv•
[-1].
fõlds
));}

1524 { (
yyvÆ
.
ty
)=
	`A_AºayTy
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[0].
svÆ
)));}

1530 {(
yyvÆ
.
fõlds
)=
NULL
;}

1536 {(
yyvÆ
.
fõlds
)=
	`A_FõldLi°
(
	`A_Fõld
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-2].
svÆ
)), S_Symbﬁ((yyv•[0].svÆ))), 
NULL
);}

1542 {(
yyvÆ
.
fõlds
)=
	`A_FõldLi°
(
	`A_Fõld
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-4].
svÆ
)), S_Symbol((yyvsp[-2].sval))), (yyvsp[0].fields));}

1548 {(
yyvÆ
.
dec
)=
	`A_V¨Dec
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-2].
svÆ
)), 
NULL
, (yyv•[0].
exp
));}

1554 {(
yyvÆ
.
dec
)=
	`A_V¨Dec
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-4].
svÆ
)), S_Symbﬁ((yyv•[-2].svÆ)), (yyv•[0].
exp
));}

1560 {(
yyvÆ
.
fundec
)
	`A_Fundec
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-5].
svÆ
)), (yyv•[-3].
fõlds
), 
NULL
, (yyv•[0].
exp
));}

1566 {(
yyvÆ
.
fundec
)
	`A_Fundec
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-7].
svÆ
)), (yyv•[-5].
fõlds
), S_Symbﬁ((yyv•[-2].svÆ)), (yyv•[0].
exp
));}

1572 {(
yyvÆ
.
fundecs
)=
	`A_FundecLi°
((
yyv•
[0].
fundec
),
NULL
);}

1578 {(
yyvÆ
.
fundecs
)=
	`A_FundecLi°
((
yyv•
[-1].
fundec
), (yyvsp[0].fundecs));}

1584 {(
yyvÆ
.
v¨
)=
	`A_Sim∂eV¨
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[0].
svÆ
)));}

1590 {(
yyvÆ
.
v¨
)=
	`A_FõldV¨
(
EM_tokPos
, (
yyv•
[-2].v¨), 
	`S_Symbﬁ
((yyv•[0].
svÆ
)));}

1596 {(
yyvÆ
.
v¨
)=
	`A_Subs¸ùtV¨
(
EM_tokPos
,

1597 
	`A_Sim∂eV¨
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-3].
svÆ
))), (yyv•[-1].
exp
));}

1603 {(
yyvÆ
.
v¨
)=
	`A_Subs¸ùtV¨
(
EM_tokPos
,

1604 
	`A_FõldV¨
(
EM_tokPos
, (
yyv•
[-5].
v¨
), 
	`S_Symbﬁ
((yyv•[-3].
svÆ
))), (yyv•[-1].
exp
));}

1610 {(
yyvÆ
.
exp
)=
	`A_V¨Exp
(
EM_tokPos
, (
yyv•
[0].
v¨
));}

1616 {(
yyvÆ
.
exp
)=
	`A_BªakExp
(
EM_tokPos
);}

1622 {(
yyvÆ
.
exp
)=
	`A_NûExp
(
EM_tokPos
);}

1628 {(
yyvÆ
.
exp
)=
	`A_SeqExp
(
EM_tokPos
, (
yyv•
[-1].
exps
));}

1634 {(
yyvÆ
.
exp
)=
	`A_I¡Exp
(
EM_tokPos
, (
yyv•
[0].
ivÆ
));}

1640 {(
yyvÆ
.
exp
)=
	`A_SåögExp
(
EM_tokPos
, (
yyv•
[0].
svÆ
));}

1646 {(
yyvÆ
.
exp
)=
	`A_CÆlExp
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-2].
svÆ
)), 
NULL
);}

1652 {(
yyvÆ
.
exp
)=
	`A_CÆlExp
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-3].
svÆ
)), (yyv•[-1].
exps
));}

1658 {(
yyvÆ
.
exps
)=
NULL
;}

1664 {(
yyvÆ
.
exps
)=
	`A_ExpLi°
((
yyv•
[0].
exp
), 
NULL
);}

1670 {(
yyvÆ
.
exps
)=
	`A_ExpLi°
((
yyv•
[-2].
exp
), (yyvsp[0].exps));}

1676 { (
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_∂usOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1682 { (
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_möusOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1688 { (
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_timesOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1694 { (
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_divideOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1700 { (
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_möusOp
, 
	`A_I¡Exp
(0, 0), (
yyv•
[0].exp));}

1706 {(
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_eqOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1712 {(
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_√qOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1718 {(
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_gtOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1724 {(
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_…Op
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1730 {(
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_geOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1736 {(
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_ÀOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1742 {(
yyvÆ
.
exp
)=
	`A_IfExp
(
EM_tokPos
, (
yyv•
[-2].exp), (yyv•[0].exp), 
	`A_I¡Exp
(EM_tokPos, 0));}

1748 {(
yyvÆ
.
exp
)=
	`A_IfExp
(
EM_tokPos
, (
yyv•
[-2].exp), 
	`A_I¡Exp
(EM_tokPos, 1), (yyvsp[0].exp));}

1754 {(
yyvÆ
.
exp
)=
	`A_Rec‹dExp
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-3].
svÆ
)), (yyv•[-1].
efõlds
));}

1760 {(
yyvÆ
.
efõlds
)=
NULL
;}

1766 {(
yyvÆ
.
efõlds
)=
	`A_EfõldLi°
(
	`A_Efõld
(
	`S_Symbﬁ
((
yyv•
[-2].
svÆ
)), (yyv•[0].
exp
)), 
NULL
);}

1772 {(
yyvÆ
.
efõlds
)=
	`A_EfõldLi°
(
	`A_Efõld
(
	`S_Symbﬁ
((
yyv•
[-4].
svÆ
)), (yyv•[-2].
exp
)), (yyvsp[0].efields));}

1778 {(
yyvÆ
.
exp
)=
	`A_AºayExp
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-5].
svÆ
)), (yyvsp[-3].exp), (yyvsp[0].exp));}

1784 {(
yyvÆ
.
exp
)=
	`A_IfExp
(
EM_tokPos
, (
yyv•
[-4].exp), (yyvsp[-2].exp), (yyvsp[0].exp));}

1790 {(
yyvÆ
.
exp
)=
	`A_IfExp
(
EM_tokPos
, (
yyv•
[-2].exp), (yyv•[0].exp), 
NULL
);}

1796 {(
yyvÆ
.
exp
)=
	`A_AssignExp
(
EM_tokPos
, (
yyv•
[-2].
v¨
), (yyvsp[0].exp));}

1802 {(
yyvÆ
.
exp
)=
	`A_WhûeExp
(
EM_tokPos
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1808 {(
yyvÆ
.
exp
)=
	`A_F‹Exp
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-6].
svÆ
)), (yyvsp[-4].exp), (yyvsp[-2].exp), (yyvsp[0].exp));}

1815 (
yyvÆ
.
exp
)=
	`A_LëExp
(
EM_tokPos
, (
yyv•
[-3].
decs
), (yyvsp[-1].exp));

1822 {(
yyvÆ
.
exp
)=
	`A_SeqExp
(
EM_tokPos
, (
yyv•
[0].
exps
));}

1828 {(
yyvÆ
.
exps
)=
NULL
;}

1834 {(
yyvÆ
.
exps
)=
	`A_ExpLi°
((
yyv•
[0].
exp
), 
NULL
);}

1840 {(
yyvÆ
.
exps
)=
	`A_ExpLi°
((
yyv•
[-2].
exp
), (yyvsp[0].exps));}

1846 {(
yyvÆ
.
exp
)=(
yyv•
[-1].exp);}

1865 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

1867 
	`YYPOPSTACK
 (
yyÀn
);

1868 
yyÀn
 = 0;

1869 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1871 *++
yyv•
 = 
yyvÆ
;

1877 
yyn
 = 
yyr1
[yyn];

1879 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

1880 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

1881 
yy°©e
 = 
yyèbÀ
[yystate];

1883 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

1885 
yy√w°©e
;

1891 
yyîæab
:

1894 
yytokí
 = 
yych¨
 =
YYEMPTY
 ? YYEMPTY : 
	`YYTRANSLATE
 (yychar);

1897 i‡(!
yyîr°©us
)

1899 ++
yy√ºs
;

1900 #i‡! 
YYERROR_VERBOSE


1901 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

1903 
	#YYSYNTAX_ERROR
 
	`yysy¡ax_îr‹
 (&
yymsg_Æloc
, &
yymsg
, \

1904 
yys•
, 
yytokí
)

	)

1906 c⁄° *
yymsgp
 = 
	`YY_
("syntaxÉrror");

1907 
yysy¡ax_îr‹_°©us
;

1908 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

1909 i‡(
yysy¡ax_îr‹_°©us
 == 0)

1910 
yymsgp
 = 
yymsg
;

1911 i‡(
yysy¡ax_îr‹_°©us
 == 1)

1913 i‡(
yymsg
 !
yymsgbuf
)

1914 
	`YYSTACK_FREE
 (
yymsg
);

1915 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yymsg_Æloc
);

1916 i‡(!
yymsg
)

1918 
yymsg
 = 
yymsgbuf
;

1919 
yymsg_Æloc
 =  
yymsgbuf
;

1920 
yysy¡ax_îr‹_°©us
 = 2;

1924 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

1925 
yymsgp
 = 
yymsg
;

1928 
	`yyîr‹
 (
yymsgp
);

1929 i‡(
yysy¡ax_îr‹_°©us
 == 2)

1930 
yyexhau°edœb
;

1932 #unde‡
YYSYNTAX_ERROR


1938 i‡(
yyîr°©us
 == 3)

1943 i‡(
yych¨
 <
YYEOF
)

1946 i‡(
yych¨
 =
YYEOF
)

1947 
YYABORT
;

1951 
	`yyde°ru˘
 ("Error: discarding",

1952 
yytokí
, &
yylvÆ
);

1953 
yych¨
 = 
YYEMPTY
;

1959 
yyîæab1
;

1965 
yyîr‹œb
:

1971 
yyîr‹œb
;

1975 
	`YYPOPSTACK
 (
yyÀn
);

1976 
yyÀn
 = 0;

1977 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1978 
yy°©e
 = *
yys•
;

1979 
yyîæab1
;

1985 
yyîæab1
:

1986 
yyîr°©us
 = 3;

1990 
yyn
 = 
yy∑˘
[
yy°©e
];

1991 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1993 
yyn
 +
YYTERROR
;

1994 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

1996 
yyn
 = 
yyèbÀ
[yyn];

1997 i‡(0 < 
yyn
)

2003 i‡(
yys•
 =
yyss
)

2004 
YYABORT
;

2007 
	`yyde°ru˘
 ("Error:Öopping",

2008 
yy°os
[
yy°©e
], 
yyv•
);

2009 
	`YYPOPSTACK
 (1);

2010 
yy°©e
 = *
yys•
;

2011 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2014 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


2015 *++
yyv•
 = 
yylvÆ
;

2016 
YY_IGNORE_MAYBE_UNINITIALIZED_END


2020 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

2022 
yy°©e
 = 
yyn
;

2023 
yy√w°©e
;

2029 
yyac˚±œb
:

2030 
yyªsu…
 = 0;

2031 
yyªtu∫
;

2036 
yyab‹éab
:

2037 
yyªsu…
 = 1;

2038 
yyªtu∫
;

2040 #i‡!
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


2044 
yyexhau°edœb
:

2045 
	`yyîr‹
 (
	`YY_
("memoryÉxhausted"));

2046 
yyªsu…
 = 2;

2050 
yyªtu∫
:

2051 i‡(
yych¨
 !
YYEMPTY
)

2055 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

2056 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

2057 
yytokí
, &
yylvÆ
);

2061 
	`YYPOPSTACK
 (
yyÀn
);

2062 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2063 
yys•
 !
yyss
)

2065 
	`yyde°ru˘
 ("Cleanup:Öopping",

2066 
yy°os
[*
yys•
], 
yyv•
);

2067 
	`YYPOPSTACK
 (1);

2069 #i‚de‡
yyovîÊow


2070 i‡(
yyss
 !
yysß
)

2071 
	`YYSTACK_FREE
 (
yyss
);

2073 #i‡
YYERROR_VERBOSE


2074 i‡(
yymsg
 !
yymsgbuf
)

2075 
	`YYSTACK_FREE
 (
yymsg
);

2077  
yyªsu…
;

2078 
	}
}

	@y.tab.h

33 #i‚de‡
YY_YY_Y_TAB_H_INCLUDED


34 
	#YY_YY_Y_TAB_H_INCLUDED


	)

36 #i‚de‡
YYDEBUG


37 
	#YYDEBUG
 0

	)

39 #i‡
YYDEBUG


40 
yydebug
;

44 #i‚de‡
YYTOKENTYPE


45 
	#YYTOKENTYPE


	)

46 
	eyytokíty≥


48 
	mID
 = 258,

49 
	mSTRING
 = 259,

50 
	mINT
 = 260,

51 
	mCOMMA
 = 261,

52 
	mCOLON
 = 262,

53 
	mSEMICOLON
 = 263,

54 
	mLPAREN
 = 264,

55 
	mRPAREN
 = 265,

56 
	mLBRACK
 = 266,

57 
	mRBRACK
 = 267,

58 
	mLBRACE
 = 268,

59 
	mRBRACE
 = 269,

60 
	mDOT
 = 270,

61 
	mPLUS
 = 271,

62 
	mMINUS
 = 272,

63 
	mTIMES
 = 273,

64 
	mDIVIDE
 = 274,

65 
	mEQ
 = 275,

66 
	mNEQ
 = 276,

67 
	mLT
 = 277,

68 
	mLE
 = 278,

69 
	mGT
 = 279,

70 
	mGE
 = 280,

71 
	mAND
 = 281,

72 
	mOR
 = 282,

73 
	mASSIGN
 = 283,

74 
	mARRAY
 = 284,

75 
	mIF
 = 285,

76 
	mTHEN
 = 286,

77 
	mELSE
 = 287,

78 
	mWHILE
 = 288,

79 
	mFOR
 = 289,

80 
	mTO
 = 290,

81 
	mDO
 = 291,

82 
	mLET
 = 292,

83 
	mIN
 = 293,

84 
	mEND
 = 294,

85 
	mOF
 = 295,

86 
	mBREAK
 = 296,

87 
	mNIL
 = 297,

88 
	mFUNCTION
 = 298,

89 
	mVAR
 = 299,

90 
	mTYPE
 = 300,

91 
	mUMINUS
 = 301

95 
	#ID
 258

	)

96 
	#STRING
 259

	)

97 
	#INT
 260

	)

98 
	#COMMA
 261

	)

99 
	#COLON
 262

	)

100 
	#SEMICOLON
 263

	)

101 
	#LPAREN
 264

	)

102 
	#RPAREN
 265

	)

103 
	#LBRACK
 266

	)

104 
	#RBRACK
 267

	)

105 
	#LBRACE
 268

	)

106 
	#RBRACE
 269

	)

107 
	#DOT
 270

	)

108 
	#PLUS
 271

	)

109 
	#MINUS
 272

	)

110 
	#TIMES
 273

	)

111 
	#DIVIDE
 274

	)

112 
	#EQ
 275

	)

113 
	#NEQ
 276

	)

114 
	#LT
 277

	)

115 
	#LE
 278

	)

116 
	#GT
 279

	)

117 
	#GE
 280

	)

118 
	#AND
 281

	)

119 
	#OR
 282

	)

120 
	#ASSIGN
 283

	)

121 
	#ARRAY
 284

	)

122 
	#IF
 285

	)

123 
	#THEN
 286

	)

124 
	#ELSE
 287

	)

125 
	#WHILE
 288

	)

126 
	#FOR
 289

	)

127 
	#TO
 290

	)

128 
	#DO
 291

	)

129 
	#LET
 292

	)

130 
	#IN
 293

	)

131 
	#END
 294

	)

132 
	#OF
 295

	)

133 
	#BREAK
 296

	)

134 
	#NIL
 297

	)

135 
	#FUNCTION
 298

	)

136 
	#VAR
 299

	)

137 
	#TYPE
 300

	)

138 
	#UMINUS
 301

	)

141 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


143 
	uYYSTYPE


147 
	mpos
;

148 
	mivÆ
;

149 
°rög
 
	msvÆ
;

150 
A_v¨
 
	mv¨
;

151 
A_exp
 
	mexp
;

152 
A_dec
 
	mdec
;

153 
A_decLi°
 
	mdecs
;

154 
A_expLi°
 
	mexps
;

155 
A_ty
 
	mty
;

156 
S_symbﬁ
 
	msymbﬁ
;

158 
A_fõldLi°
 
	mfõlds
;

159 
A_efõldLi°
 
	mefõlds
;

160 
A_fundec
 
	mfundec
;

161 
A_fundecLi°
 
	mfundecs
;

162 
A_«mëy
 
	m«mëy
;

163 
A_«mëyLi°
 
	m«mëys
;

169 
YYSTYPE
 
	tYYSTYPE
;

170 
	#YYSTYPE_IS_TRIVIAL
 1

	)

171 
	#YYSTYPE_IS_DECLARED
 1

	)

175 
YYSTYPE
 
yylvÆ
;

177 
yy∑r£
 ();

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


119 #unde‡
°©ic_as£π


120 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/libintl.h

20 #i‚de‡
_LIBINTL_H


21 
	#_LIBINTL_H
 1

	)

23 
	~<„©uªs.h
>

27 
	#__USE_GNU_GETTEXT
 1

	)

31 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

32 ((
maj‹
Ë=0 ? 1 : -1)

	)

34 
__BEGIN_DECLS


39 *
	$gëãxt
 (c⁄° *
__msgid
)

40 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

44 *
	$dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

45 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

46 *
	$__dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

47 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

51 *
	$dcgëãxt
 (c⁄° *
__domaö«me
,

52 c⁄° *
__msgid
, 
__ˇãg‹y
)

53 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

54 *
	$__dcgëãxt
 (c⁄° *
__domaö«me
,

55 c⁄° *
__msgid
, 
__ˇãg‹y
)

56 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

61 *
	$ngëãxt
 (c⁄° *
__msgid1
, c⁄° *
__msgid2
,

62 
__n
)

63 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (1Ë
	`__©åibuã_f‹m©_¨g__
 (2);

67 *
	$dngëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

68 c⁄° *
__msgid2
, 
__n
)

69 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

73 *
	$d˙gëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

74 c⁄° *
__msgid2
, 
__n
,

75 
__ˇãg‹y
)

76 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

82 *
	$ãxtdomaö
 (c⁄° *
__domaö«me
Ë
__THROW
;

86 *
	$bödãxtdomaö
 (c⁄° *
__domaö«me
,

87 c⁄° *
__dú«me
Ë
__THROW
;

91 *
	$böd_ãxtdomaö_code£t
 (c⁄° *
__domaö«me
,

92 c⁄° *
__code£t
Ë
__THROW
;

96 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


99 
	#__√ed_NULL


	)

100 
	~<°ddef.h
>

103 
	~<loˇÀ.h
>

109 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

111 
	#dgëãxt
(
domaö«me
, 
msgid
) \

112 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

114 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

116 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

117 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

121 
__END_DECLS


	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

41 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

42 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

49 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

50 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

53 
	$‰ì
 (*
__±r
Ë
__THROW
;

56 
	$c‰ì
 (*
__±r
Ë
__THROW
;

59 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

60 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

67 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

74 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

75 
__THROW
 
__©åibuã_mÆloc__
;

79 
	smÆlöfo


81 
¨ía
;

82 
‹dblks
;

83 
smblks
;

84 
hblks
;

85 
hblkhd
;

86 
usmblks
;

87 
fsmblks
;

88 
u‹dblks
;

89 
f‹dblks
;

90 
kìpco°
;

94 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

97 #i‚de‡
M_MXFAST


98 
	#M_MXFAST
 1

	)

100 #i‚de‡
M_NLBLKS


101 
	#M_NLBLKS
 2

	)

103 #i‚de‡
M_GRAIN


104 
	#M_GRAIN
 3

	)

106 #i‚de‡
M_KEEP


107 
	#M_KEEP
 4

	)

111 
	#M_TRIM_THRESHOLD
 -1

	)

112 
	#M_TOP_PAD
 -2

	)

113 
	#M_MMAP_THRESHOLD
 -3

	)

114 
	#M_MMAP_MAX
 -4

	)

115 
	#M_CHECK_ACTION
 -5

	)

116 
	#M_PERTURB
 -6

	)

117 
	#M_ARENA_TEST
 -7

	)

118 
	#M_ARENA_MAX
 -8

	)

121 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

125 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

129 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

132 
	$mÆloc_°©s
 (Ë
__THROW
;

135 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

138 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

142 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

147 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

148 
__MALLOC_DEPRECATED
;

150 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

152 
__MALLOC_DEPRECATED
;

153 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

155 
__MALLOC_DEPRECATED
;

156 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

157 
size_t
 
__size
,

159 
__MALLOC_DEPRECATED
;

160 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

161 
size_t
 
__size
,

163 
__MALLOC_DEPRECATED
;

164 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

167 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

170 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	$©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

111 
	#_XOPEN_CRYPT
 1

	)

115 
	#_XOPEN_ENH_I18N
 1

	)

118 
	#_XOPEN_LEGACY
 1

	)

205 
	~<bôs/posix_›t.h
>

208 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


209 
	~<bôs/ívú⁄míts.h
>

213 
	#STDIN_FILENO
 0

	)

214 
	#STDOUT_FILENO
 1

	)

215 
	#STDERR_FILENO
 2

	)

220 
	~<bôs/ty≥s.h
>

222 #i‚def 
__ssize_t_deföed


223 
__ssize_t
 
	tssize_t
;

224 
	#__ssize_t_deföed


	)

227 
	#__√ed_size_t


	)

228 
	#__√ed_NULL


	)

229 
	~<°ddef.h
>

231 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


234 #i‚de‡
__gid_t_deföed


235 
__gid_t
 
	tgid_t
;

236 
	#__gid_t_deföed


	)

239 #i‚de‡
__uid_t_deföed


240 
__uid_t
 
	tuid_t
;

241 
	#__uid_t_deföed


	)

244 #i‚de‡
__off_t_deföed


245 #i‚de‡
__USE_FILE_OFFSET64


246 
__off_t
 
	toff_t
;

248 
__off64_t
 
	toff_t
;

250 
	#__off_t_deföed


	)

252 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


253 
__off64_t
 
	toff64_t
;

254 
	#__off64_t_deföed


	)

257 #i‚de‡
__u£c⁄ds_t_deföed


258 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

259 
	#__u£c⁄ds_t_deföed


	)

262 #i‚de‡
__pid_t_deföed


263 
__pid_t
 
	tpid_t
;

264 
	#__pid_t_deföed


	)

268 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


269 #i‚de‡
__öçå_t_deföed


270 
__öçå_t
 
	töçå_t
;

271 
	#__öçå_t_deföed


	)

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


276 #i‚de‡
__sockÀn_t_deföed


277 
__sockÀn_t
 
	tsockÀn_t
;

278 
	#__sockÀn_t_deföed


	)

284 
	#R_OK
 4

	)

285 
	#W_OK
 2

	)

286 
	#X_OK
 1

	)

287 
	#F_OK
 0

	)

290 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #ifde‡
__USE_GNU


295 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 #ifde‡
__USE_ATFILE


307 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

308 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 #i‚def 
_STDIO_H


314 
	#SEEK_SET
 0

	)

315 
	#SEEK_CUR
 1

	)

316 
	#SEEK_END
 2

	)

317 #ifde‡
__USE_GNU


318 
	#SEEK_DATA
 3

	)

319 
	#SEEK_HOLE
 4

	)

323 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


325 
	#L_SET
 
SEEK_SET


	)

326 
	#L_INCR
 
SEEK_CUR


	)

327 
	#L_XTND
 
SEEK_END


	)

336 #i‚de‡
__USE_FILE_OFFSET64


337 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

339 #ifde‡
__REDIRECT_NTH


340 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

341 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

342 
l£ek64
);

344 
	#l£ek
 
l£ek64


	)

347 #ifde‡
__USE_LARGEFILE64


348 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

349 
__THROW
;

356 
	`˛o£
 (
__fd
);

363 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

369 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

371 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


372 #i‚de‡
__USE_FILE_OFFSET64


379 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

380 
__off_t
 
__off£t
Ë
__wur
;

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur
;

390 #ifde‡
__REDIRECT


391 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

392 
__off64_t
 
__off£t
),

393 
¥ód64
Ë
__wur
;

394 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

395 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

396 
pwrôe64
Ë
__wur
;

398 
	#¥ód
 
¥ód64


	)

399 
	#pwrôe
 
pwrôe64


	)

403 #ifde‡
__USE_LARGEFILE64


407 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

408 
__off64_t
 
__off£t
Ë
__wur
;

411 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

412 
__off64_t
 
__off£t
Ë
__wur
;

420 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

422 #ifde‡
__USE_GNU


425 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

435 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

447 
	`¶ìp
 (
__£c⁄ds
);

449 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

450 || 
deföed
 
__USE_MISC


455 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

456 
__THROW
;

463 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

472 
	`∑u£
 ();

476 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

477 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

479 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


481 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

486 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

487 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

491 #ifde‡
__USE_ATFILE


494 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

495 
__gid_t
 
__group
, 
__Êag
)

496 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

500 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

502 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


504 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

514 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

516 #ifdef 
__USE_GNU


520 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

523 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

524 || 
deföed
 
__USE_MISC


528 *
	$gëwd
 (*
__buf
)

529 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

534 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

537 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

539 #ifde‡
__USE_GNU


542 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

546 **
__ívú⁄
;

547 #ifde‡
__USE_GNU


548 **
ívú⁄
;

554 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

555 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifde‡
__USE_XOPEN2K8


560 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((2));

566 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

588 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

590 #ifde‡
__USE_GNU


593 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

594 *c⁄° 
__ívp
[])

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


601 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

606 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

612 
	~<bôs/c⁄‚ame.h
>

615 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

616 
__THROW
 
	`__n⁄nuŒ
 ((1));

619 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

622 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

624 #ifdef 
__USE_POSIX2


626 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

631 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

640 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

641 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


642 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

649 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

651 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


663 
	$£çgΩ
 (Ë
__THROW
;

670 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

672 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


674 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

678 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

681 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

687 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

692 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

694 #ifdef 
__USE_GNU


696 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

703 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

705 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


708 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

711 #ifde‡
__USE_XOPEN2K


713 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

720 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

722 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


725 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

728 #ifde‡
__USE_XOPEN2K


730 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

733 #ifde‡
__USE_GNU


736 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

737 
__THROW
;

741 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

742 
__THROW
;

746 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

747 
__THROW
 
__wur
;

751 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

752 
__THROW
 
__wur
;

759 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

761 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

762 || 
deföed
 
__USE_MISC


767 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

773 *
	$ây«me
 (
__fd
Ë
__THROW
;

777 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

778 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

782 
	$ißây
 (
__fd
Ë
__THROW
;

784 #i‡
deföed
 
__USE_MISC
 \

785 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

788 
	$ây¶Ÿ
 (Ë
__THROW
;

793 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

796 #ifde‡
__USE_ATFILE


799 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

800 c⁄° *
__to
, 
__Êags
)

801 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

804 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


806 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

813 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

817 #ifde‡
__USE_ATFILE


819 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

820 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

823 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

824 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

825 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

829 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

831 #ifde‡
__USE_ATFILE


833 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

834 
__THROW
 
	`__n⁄nuŒ
 ((2));

838 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

842 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

845 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

852 *
	`gëlogö
 ();

853 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


860 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

863 #ifdef 
__USE_MISC


865 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 #ifdef 
__USE_POSIX2


873 
	#__√ed_gë›t


	)

874 
	~<gë›t.h
>

878 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


882 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #i‡
deföed
 
__USE_MISC


889 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

890 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

894 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

900 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

902 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

909 
	$vh™gup
 (Ë
__THROW
;

912 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

920 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

921 
size_t
 
__off£t
, 
__sˇÀ
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1));

928 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

932 *
	$gëu£rshñl
 (Ë
__THROW
;

933 
	$ídu£rshñl
 (Ë
__THROW
;

934 
	$£tu£rshñl
 (Ë
__THROW
;

940 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

944 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

947 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

959 
	`fsync
 (
__fd
);

962 #ifde‡
__USE_GNU


965 
	$syncfs
 (
__fd
Ë
__THROW
;

969 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


972 
	`gëho°id
 ();

975 
	$sync
 (Ë
__THROW
;

978 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


981 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

986 
	$gëdèbÀsize
 (Ë
__THROW
;

992 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


995 #i‚de‡
__USE_FILE_OFFSET64


996 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 #ifde‡
__REDIRECT_NTH


1000 
	`__REDIRECT_NTH
 (
åunˇã
,

1001 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1002 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1004 
	#åunˇã
 
åunˇã64


	)

1007 #ifde‡
__USE_LARGEFILE64


1008 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1014 #i‡
deföed
 
__USE_POSIX199309
 \

1015 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1018 #i‚de‡
__USE_FILE_OFFSET64


1019 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1023 
·runˇã64
Ë
__wur
;

1025 
	#·runˇã
 
·runˇã64


	)

1028 #ifde‡
__USE_LARGEFILE64


1029 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1035 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1036 || 
deföed
 
__USE_MISC


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1129 
__THROW
 
	`__n⁄nuŒ
 ((1));

1136 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1137 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1143 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1145 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1150 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1151 
	~<bôs/uni°d.h
>

1154 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/locale.h

22 #i‚def 
_LOCALE_H


23 
	#_LOCALE_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_NULL


	)

28 
	~<°ddef.h
>

29 
	~<bôs/loˇÀ.h
>

31 
	g__BEGIN_DECLS


35 
	#LC_CTYPE
 
__LC_CTYPE


	)

36 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

37 
	#LC_TIME
 
__LC_TIME


	)

38 
	#LC_COLLATE
 
__LC_COLLATE


	)

39 
	#LC_MONETARY
 
__LC_MONETARY


	)

40 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

41 
	#LC_ALL
 
__LC_ALL


	)

42 
	#LC_PAPER
 
__LC_PAPER


	)

43 
	#LC_NAME
 
__LC_NAME


	)

44 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

45 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

46 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

47 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

50 
__BEGIN_NAMESPACE_STD


53 
	slc⁄v


57 *
	mdecimÆ_poöt
;

58 *
	mthoußnds_£p
;

64 *
	mgroupög
;

70 *
	möt_cuº_symbﬁ
;

71 *
	mcuºícy_symbﬁ
;

72 *
	mm⁄_decimÆ_poöt
;

73 *
	mm⁄_thoußnds_£p
;

74 *
	mm⁄_groupög
;

75 *
	mposôive_sign
;

76 *
	m√g©ive_sign
;

77 
	möt_‰ac_digôs
;

78 
	m‰ac_digôs
;

80 
	mp_cs_¥e˚des
;

82 
	mp_£p_by_•a˚
;

84 
	mn_cs_¥e˚des
;

86 
	mn_£p_by_•a˚
;

93 
	mp_sign_po¢
;

94 
	mn_sign_po¢
;

95 #ifde‡
__USE_ISOC99


97 
	möt_p_cs_¥e˚des
;

99 
	möt_p_£p_by_•a˚
;

101 
	möt_n_cs_¥e˚des
;

103 
	möt_n_£p_by_•a˚
;

110 
	möt_p_sign_po¢
;

111 
	möt_n_sign_po¢
;

113 
	m__öt_p_cs_¥e˚des
;

114 
	m__öt_p_£p_by_•a˚
;

115 
	m__öt_n_cs_¥e˚des
;

116 
	m__öt_n_£p_by_•a˚
;

117 
	m__öt_p_sign_po¢
;

118 
	m__öt_n_sign_po¢
;

124 *
	$£éoˇÀ
 (
__ˇãg‹y
, c⁄° *
__loˇÀ
Ë
__THROW
;

127 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

129 
__END_NAMESPACE_STD


132 #ifdef 
__USE_XOPEN2K8


145 
	~<xloˇÀ.h
>

151 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, c⁄° *
__loˇÀ
,

152 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

158 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

159 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

160 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

161 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

162 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

163 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

164 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

165 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

166 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

167 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

168 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

169 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

170 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

171 | 
LC_NUMERIC_MASK
 \

172 | 
LC_TIME_MASK
 \

173 | 
LC_COLLATE_MASK
 \

174 | 
LC_MONETARY_MASK
 \

175 | 
LC_MESSAGES_MASK
 \

176 | 
LC_PAPER_MASK
 \

177 | 
LC_NAME_MASK
 \

178 | 
LC_ADDRESS_MASK
 \

179 | 
LC_TELEPHONE_MASK
 \

180 | 
LC_MEASUREMENT_MASK
 \

181 | 
LC_IDENTIFICATION_MASK
 \

182 )

	)

186 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

190 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

197 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

201 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

205 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
76
989
absyn.c
absyn.h
assem.c
assem.h
canon.c
canon.h
codegen.c
codegen.h
color.c
color.h
env.c
env.h
errormsg.c
errormsg.h
escape.c
escape.h
flowgraph.c
flowgraph.h
frame.h
graph.c
graph.h
lex.yy.c
liveness.c
liveness.h
main.c
parse.c
parse.h
prabsyn.c
prabsyn.h
printtree.c
printtree.h
regalloc.c
regalloc.h
runtime.c
semant.c
semant.h
symbol.c
symbol.h
table.c
table.h
temp.c
temp.h
translate.c
translate.h
tree.c
tree.h
types.c
types.h
util.c
util.h
x86frame.c
y.tab.c
y.tab.h
/usr/include/alloca.h
/usr/include/assert.h
/usr/include/errno.h
/usr/include/inttypes.h
/usr/include/libintl.h
/usr/include/malloc.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/unistd.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/locale.h
/usr/include/stdint.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/ctype.h
/usr/include/stdc-predef.h
/usr/include/endian.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
